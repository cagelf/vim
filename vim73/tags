!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	.\indent\dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	.\indent\dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
$	.\tutor\tutor.cs	/^		$ (do konce øádku), atd.$/;"	m
$TUTOR	.\tutor\tutor.vim	/^  let $TUTOR = $VIMRUNTIME . s:tutorfile$/;"	v
$TUTOR	.\tutor\tutor.vim	/^  let $TUTOR = s:tutorxx$/;"	v
%	.\macros\less.vim	/^noremap <script> % %<SID>L$/;"	m
%	.\macros\matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	.\macros\matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	.\macros\matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
&Edit.&Find\.\.\.		y:promptfind	.\menu.vim	/^  vnoremenu <silent>	 &Edit.&Find\\.\\.\\.		y:promptfind <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.&Paste<Tab>"+gP		<C-R>+	.\menu.vim	/^cnoremenu	 &Edit.&Paste<Tab>"+gP		<C-R>+$/;"	m
&Edit.Find\	.\menu.vim	/^  vnoremenu	 &Edit.Find\\ and\\ Rep&lace<Tab>:s	:s\/$/;"	m
&Edit.Find\	.\menu.vim	/^  vnoremenu <silent>	 &Edit.Find\\ and\\ Rep&lace\\.\\.\\. y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.Put\	.\menu.vim	/^inoremenu	 &Edit.Put\\ &After<Tab>]p	<C-O>]p$/;"	m
&Edit.Put\	.\menu.vim	/^inoremenu	 &Edit.Put\\ &Before<Tab>[p	<C-O>[p$/;"	m
&File.&Print			:hardcopy<CR>	.\menu.vim	/^  vnoremenu &File.&Print			:hardcopy<CR>$/;"	m
&File.&Print			:w	.\menu.vim	/^  vnoremenu &File.&Print			:w !lpr<CR>$/;"	m
&Tools.&Diff.&Get\	.\menu.vim	/^  vnoremenu &Tools.&Diff.&Get\\ Block		:diffget<CR>$/;"	m
&Tools.&Diff.&Put\	.\menu.vim	/^  vnoremenu &Tools.&Diff.&Put\\ Block		:diffput<CR>$/;"	m
&Tools.&Jump\	.\menu.vim	/^vnoremenu &Tools.&Jump\\ to\\ this\\ tag<Tab>g^]	g<C-]>$/;"	m
,gq	.\macros\justify.vim	/^nmap ,gq :%s\/\\s\\+\/ \/g<CR>gq1G$/;"	m
,gq	.\macros\justify.vim	/^vmap ,gq :s\/\\s\\+\/ \/g<CR>gvgq$/;"	m
/	.\macros\less.vim	/^noremap <script> \/ H$:call <SID>Forward()<CR>\/$/;"	m
0	.\syntax\hitest.vim	/^normal 0$/;"	m
1.100	.\menu.vim	/^cnoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-U>call <SID>SelectAll()<CR>$/;"	m
1.100	.\menu.vim	/^inoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-O>:call <SID>SelectAll()<CR>$/;"	m
1.100	.\menu.vim	/^noremenu  <script> <silent> 1.100 PopUp.Select\\ &All	:<C-U>call <SID>SelectAll()<CR>$/;"	m
1.20	.\menu.vim	/^vnoremenu 1.20 PopUp.Cu&t		"+x$/;"	m
1.30	.\menu.vim	/^cnoremenu 1.30 PopUp.&Copy		<C-Y>$/;"	m
1.30	.\menu.vim	/^vnoremenu 1.30 PopUp.&Copy		"+y$/;"	m
1.40	.\menu.vim	/^cnoremenu 1.40 PopUp.&Paste		<C-R>+$/;"	m
1.40	.\menu.vim	/^nnoremenu 1.40 PopUp.&Paste		"+gP$/;"	m
1.50	.\menu.vim	/^vnoremenu 1.50 PopUp.&Delete		x$/;"	m
1.60	.\menu.vim	/^vnoremenu 1.60 PopUp.Select\\ Blockwise	<C-V>$/;"	m
1.70	.\menu.vim	/^  vnoremenu 1.70 ToolBar.Cut		"+x$/;"	m
1.70	.\menu.vim	/^cnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.70	.\menu.vim	/^inoremenu 1.70 PopUp.Select\\ &Word	<C-O>vaw$/;"	m
1.70	.\menu.vim	/^nnoremenu 1.70 PopUp.Select\\ &Word	vaw$/;"	m
1.70	.\menu.vim	/^onoremenu 1.70 PopUp.Select\\ &Word	aw$/;"	m
1.70	.\menu.vim	/^vnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.73	.\menu.vim	/^cnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.73	.\menu.vim	/^inoremenu 1.73 PopUp.Select\\ &Sentence	<C-O>vas$/;"	m
1.73	.\menu.vim	/^nnoremenu 1.73 PopUp.Select\\ &Sentence	vas$/;"	m
1.73	.\menu.vim	/^onoremenu 1.73 PopUp.Select\\ &Sentence	as$/;"	m
1.73	.\menu.vim	/^vnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.77	.\menu.vim	/^cnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.77	.\menu.vim	/^inoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-O>vap$/;"	m
1.77	.\menu.vim	/^nnoremenu 1.77 PopUp.Select\\ Pa&ragraph	vap$/;"	m
1.77	.\menu.vim	/^onoremenu 1.77 PopUp.Select\\ Pa&ragraph	ap$/;"	m
1.77	.\menu.vim	/^vnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.80	.\menu.vim	/^  cnoremenu 1.80 ToolBar.Copy		<C-Y>$/;"	m
1.80	.\menu.vim	/^  vnoremenu 1.80 ToolBar.Copy		"+y$/;"	m
1.80	.\menu.vim	/^cnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	.\menu.vim	/^inoremenu 1.80 PopUp.Select\\ &Line	<C-O>V$/;"	m
1.80	.\menu.vim	/^nnoremenu 1.80 PopUp.Select\\ &Line	V$/;"	m
1.80	.\menu.vim	/^onoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	.\menu.vim	/^vnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.90	.\menu.vim	/^  nnoremenu 1.90 ToolBar.Paste		"+gP$/;"	m
1.90	.\menu.vim	/^cnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	.\menu.vim	/^inoremenu 1.90 PopUp.Select\\ &Block	<C-O><C-V>$/;"	m
1.90	.\menu.vim	/^nnoremenu 1.90 PopUp.Select\\ &Block	<C-V>$/;"	m
1.90	.\menu.vim	/^onoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	.\menu.vim	/^vnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
20.340	.\menu.vim	/^vnoremenu 20.340 &Edit.Cu&t<Tab>"+x		"+x$/;"	m
20.350	.\menu.vim	/^cnoremenu 20.350 &Edit.&Copy<Tab>"+y		<C-Y>$/;"	m
20.350	.\menu.vim	/^vnoremenu 20.350 &Edit.&Copy<Tab>"+y		"+y$/;"	m
20.360	.\menu.vim	/^nnoremenu 20.360 &Edit.&Paste<Tab>"+gP		"+gP$/;"	m
20.370	.\menu.vim	/^nnoremenu 20.370 &Edit.Put\\ &Before<Tab>[p	[p$/;"	m
20.380	.\menu.vim	/^nnoremenu 20.380 &Edit.Put\\ &After<Tab>]p	]p$/;"	m
20.390	.\menu.vim	/^  vnoremenu 20.390 &Edit.&Delete<Tab>x		x$/;"	m
20.400	.\menu.vim	/^cnoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-U>call <SID>SelectAll()<CR>$/;"	m
20.400	.\menu.vim	/^inoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-O>:call <SID>SelectAll()<CR>$/;"	m
20.400	.\menu.vim	/^noremenu  <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	:<C-U>call <SID>SelectAll()<CR>$/;"	m
40.340.220	.\menu.vim	/^  vnoremenu 40.340.220 &Tools.&Folding.Create\\ &Fold<Tab>zf	zf$/;"	m
<	.\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	.\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	.\macros\less.vim	/^map < g$/;"	m
<2-LeftMouse>	<2-RightMouse>	.\macros\swapmous.vim	/^noremap	 <2-LeftMouse>	<2-RightMouse>$/;"	m
<2-RightMouse>	<2-LeftMouse>	.\macros\swapmous.vim	/^noremap	 <2-RightMouse>	<2-LeftMouse>$/;"	m
<3-LeftMouse>	<3-RightMouse>	.\macros\swapmous.vim	/^noremap	 <3-LeftMouse>	<3-RightMouse>$/;"	m
<3-RightMouse>	<3-LeftMouse>	.\macros\swapmous.vim	/^noremap	 <3-RightMouse>	<3-LeftMouse>$/;"	m
<4-LeftMouse>	<4-RightMouse>	.\macros\swapmous.vim	/^noremap	 <4-LeftMouse>	<4-RightMouse>$/;"	m
<4-RightMouse>	<4-LeftMouse>	.\macros\swapmous.vim	/^noremap	 <4-RightMouse>	<4-LeftMouse>$/;"	m
<<	.\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<BS>	.\mswin.vim	/^vnoremap <BS> d$/;"	m
<C-A>	.\mswin.vim	/^cnoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	.\mswin.vim	/^inoremap <C-A> <C-O>gg<C-O>gH<C-O>G$/;"	m
<C-A>	.\mswin.vim	/^noremap <C-A> gggH<C-O>G$/;"	m
<C-A>	.\mswin.vim	/^onoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-B>	.\macros\less.vim	/^map <C-B> b$/;"	m
<C-C>	.\mswin.vim	/^vnoremap <C-C> "+y$/;"	m
<C-D>	.\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-D>	.\macros\less.vim	/^map <C-D> d$/;"	m
<C-E>	.\macros\less.vim	/^map <C-E> <CR>$/;"	m
<C-F4>	.\mswin.vim	/^cnoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F4>	.\mswin.vim	/^inoremap <C-F4> <C-O><C-W>c$/;"	m
<C-F4>	.\mswin.vim	/^noremap <C-F4> <C-W>c$/;"	m
<C-F4>	.\mswin.vim	/^onoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F>	.\evim.vim	/^cnoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	.\evim.vim	/^inoremap <silent> <C-F> <C-O>:promptfind<CR>$/;"	m
<C-F>	.\evim.vim	/^noremap <silent> <C-F> :promptfind<CR>$/;"	m
<C-F>	.\evim.vim	/^onoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	.\evim.vim	/^vnoremap <silent> <C-F> y:promptfind <C-R>"<CR>$/;"	m
<C-F>	.\macros\less.vim	/^map <C-F> <Space>$/;"	m
<C-Insert>	.\mswin.vim	/^vnoremap <C-Insert> "+y$/;"	m
<C-J>	.\macros\less.vim	/^map <C-J> <CR>$/;"	m
<C-K>	.\macros\less.vim	/^map <C-K> k$/;"	m
<C-N>	.\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-N>	.\macros\less.vim	/^map <C-N> <CR>$/;"	m
<C-P>	.\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-P>	.\macros\less.vim	/^map <C-P> k$/;"	m
<C-Q>		<C-V>	.\mswin.vim	/^noremap <C-Q>		<C-V>$/;"	m
<C-R>	.\macros\less.vim	/^noremap <script> <C-R> <C-L><SID>L$/;"	m
<C-S>		:update<CR>	.\mswin.vim	/^noremap <C-S>		:update<CR>$/;"	m
<C-S>		<C-C>:update<CR>	.\mswin.vim	/^vnoremap <C-S>		<C-C>:update<CR>$/;"	m
<C-S>		<C-O>:update<CR>	.\mswin.vim	/^inoremap <C-S>		<C-O>:update<CR>$/;"	m
<C-T>	.\ftplugin\cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-T>	.\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_tagstack, -1)) <Bar> else <Bar> exe "norm! \\<Lt>C-T>" <Bar> endif<CR>$/;"	m
<C-Tab>	.\mswin.vim	/^cnoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-Tab>	.\mswin.vim	/^inoremap <C-Tab> <C-O><C-W>w$/;"	m
<C-Tab>	.\mswin.vim	/^noremap <C-Tab> <C-W>w$/;"	m
<C-Tab>	.\mswin.vim	/^onoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-U>	.\macros\less.vim	/^noremap <script> <C-U> <C-U><SID>L$/;"	m
<C-U>	.\vimrc_example.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-V>		"+gP	.\mswin.vim	/^map <C-V>		"+gP$/;"	m
<C-V>		<C-R>+	.\mswin.vim	/^cmap <C-V>		<C-R>+$/;"	m
<C-V>	.\macros\less.vim	/^map <C-V> <Space>$/;"	m
<C-W><C-]>	.\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	.\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g<C-]>	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g}	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	.\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X>	.\mswin.vim	/^vnoremap <C-X> "+x$/;"	m
<C-X><C-]>	.\ftplugin\ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr>$/;"	m
<C-Y>	.\macros\less.vim	/^map <C-Y> k$/;"	m
<C-Y>	.\mswin.vim	/^inoremap <C-Y> <C-O><C-R>$/;"	m
<C-Y>	.\mswin.vim	/^noremap <C-Y> <C-R>$/;"	m
<C-Z>	.\mswin.vim	/^inoremap <C-Z> <C-O>u$/;"	m
<C-Z>	.\mswin.vim	/^noremap <C-Z> u$/;"	m
<C-]>	.\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	.\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	.\ftplugin\cucumber.vim	/^  nmap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	.\ftplugin\pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-]>	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<CR>	.\macros\less.vim	/^noremap <script> <CR> <C-E><SID>L$/;"	m
<CR>	.\optwin.vim	/^inoremap <silent> <buffer> <CR> <Esc>:call <SID>CR()<CR>$/;"	m
<CR>	.\optwin.vim	/^noremap <silent> <buffer> <CR> <C-\\><C-N>:call <SID>CR()<CR>$/;"	m
<D-S-s>	.\macmap.vim	/^cmap <special> <D-S-s> <C-C><D-s>$/;"	m
<D-S-s>	.\macmap.vim	/^imap <special> <D-S-s> <C-O><D-s>$/;"	m
<D-S-s>	.\macmap.vim	/^nnoremap <special> <D-S-s> :browse confirm saveas<CR>$/;"	m
<D-S-s>	.\macmap.vim	/^omap <special> <D-S-s> <Esc><D-s>$/;"	m
<D-S-s>	.\macmap.vim	/^vmap <special> <D-S-s> <Esc><D-s>gv$/;"	m
<D-a>	.\macmap.vim	/^cmap <special> <D-a> <C-C><D-a>$/;"	m
<D-a>	.\macmap.vim	/^imap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	.\macmap.vim	/^nnoremap <silent> <special> <D-a> :if &slm != ""<Bar>exe ":norm gggH<C-O>G"<Bar> else<Bar>exe ":norm ggVG"<Bar>endif<CR>$/;"	m
<D-a>	.\macmap.vim	/^omap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	.\macmap.vim	/^vmap <special> <D-a> <Esc><D-a>$/;"	m
<D-c>	.\macmap.vim	/^cnoremap <special> <D-c> <C-Y>$/;"	m
<D-c>	.\macmap.vim	/^vnoremap <special> <D-c> "+y$/;"	m
<D-f>	.\macmap.vim	/^cmap <special> <D-f> <C-C><D-f>$/;"	m
<D-f>	.\macmap.vim	/^imap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	.\macmap.vim	/^nnoremap <special> <D-f> \/$/;"	m
<D-f>	.\macmap.vim	/^omap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	.\macmap.vim	/^vmap <special> <D-f> <Esc><D-f>$/;"	m
<D-g>	.\macmap.vim	/^cmap <special> <D-g> <C-C><D-g>$/;"	m
<D-g>	.\macmap.vim	/^imap <special> <D-g> <C-O><D-g>$/;"	m
<D-g>	.\macmap.vim	/^nnoremap <special> <D-g> n$/;"	m
<D-g>	.\macmap.vim	/^omap <special> <D-g> <Esc><D-g>$/;"	m
<D-g>	.\macmap.vim	/^vmap <special> <D-g> <Esc><D-g>$/;"	m
<D-n>	.\macmap.vim	/^cmap <special> <D-n> <C-C><D-n>$/;"	m
<D-n>	.\macmap.vim	/^imap <special> <D-n> <C-O><D-n>$/;"	m
<D-n>	.\macmap.vim	/^nnoremap <special> <D-n> :confirm enew<CR>$/;"	m
<D-n>	.\macmap.vim	/^omap <special> <D-n> <Esc><D-n>$/;"	m
<D-n>	.\macmap.vim	/^vmap <special> <D-n> <Esc><D-n>gv$/;"	m
<D-o>	.\macmap.vim	/^cmap <special> <D-o> <C-C><D-o>$/;"	m
<D-o>	.\macmap.vim	/^imap <special> <D-o> <C-O><D-o>$/;"	m
<D-o>	.\macmap.vim	/^nnoremap <special> <D-o> :browse confirm e<CR>$/;"	m
<D-o>	.\macmap.vim	/^omap <special> <D-o> <Esc><D-o>$/;"	m
<D-o>	.\macmap.vim	/^vmap <special> <D-o> <Esc><D-o>gv$/;"	m
<D-s>	.\macmap.vim	/^cmap <special> <D-s> <C-C><D-s>$/;"	m
<D-s>	.\macmap.vim	/^imap <special> <D-s> <C-O><D-s>$/;"	m
<D-s>	.\macmap.vim	/^nnoremap <silent> <special> <D-s> :if expand("%") == ""<Bar>browse confirm w<Bar> else<Bar>confirm w<Bar>endif<CR>$/;"	m
<D-s>	.\macmap.vim	/^omap <special> <D-s> <Esc><D-s>$/;"	m
<D-s>	.\macmap.vim	/^vmap <special> <D-s> <Esc><D-s>gv$/;"	m
<D-v>	.\macmap.vim	/^cnoremap <special> <D-v> <C-R>+$/;"	m
<D-v>	.\macmap.vim	/^nnoremap <special> <D-v> "+gP$/;"	m
<D-w>	.\macmap.vim	/^cmap <special> <D-w> <C-C><D-w>$/;"	m
<D-w>	.\macmap.vim	/^imap <special> <D-w> <C-O><D-w>$/;"	m
<D-w>	.\macmap.vim	/^nnoremap <silent> <special> <D-w> :if winheight(2) < 0 <Bar> confirm enew <Bar> else <Bar> confirm close <Bar> endif<CR>$/;"	m
<D-w>	.\macmap.vim	/^omap <special> <D-w> <Esc><D-w>$/;"	m
<D-w>	.\macmap.vim	/^vmap <special> <D-w> <Esc><D-w>gv$/;"	m
<D-x>	.\macmap.vim	/^vnoremap <special> <D-x> "+x$/;"	m
<D-z>	.\macmap.vim	/^cmap <special> <D-z> <C-C><D-z>$/;"	m
<D-z>	.\macmap.vim	/^imap <special> <D-z> <C-O><D-z>$/;"	m
<D-z>	.\macmap.vim	/^nnoremap <special> <D-z> u$/;"	m
<D-z>	.\macmap.vim	/^omap <special> <D-z> <Esc><D-z>$/;"	m
<D-z>	.\macmap.vim	/^vmap <special> <D-z> <Esc><D-z>gv$/;"	m
<Down>	.\evim.vim	/^inoremap <silent> <Down> <C-R>=pumvisible() ? "\\<lt>Down>" : "\\<lt>C-O>gj"<CR>$/;"	m
<Down>	.\ftplugin\flexwiki.vim	/^      imap <buffer> <Down>   <C-o>gj$/;"	m
<Down>	.\ftplugin\flexwiki.vim	/^  nmap <buffer> <Down> gj$/;"	m
<Down>	.\ftplugin\flexwiki.vim	/^  vmap <buffer> <Down> gj$/;"	m
<Esc><	.\macros\less.vim	/^map <Esc>< g$/;"	m
<Esc><Space>	.\macros\less.vim	/^map <Esc><Space> <Space>$/;"	m
<Esc>>	.\macros\less.vim	/^map <Esc>> G$/;"	m
<Esc>v	.\macros\less.vim	/^map <Esc>v b$/;"	m
<Leader>K	.\ftplugin\man.vim	/^  nmap <Leader>K :call <SID>PreGetPage(0)<CR>$/;"	m
<Leader>o	.\ftplugin\changelog.vim	/^    noremap <buffer> <silent> <Leader>o <Esc>:call <SID>new_changelog_entry()<CR>$/;"	m
<Leader>o	.\ftplugin\changelog.vim	/^  nnoremap <silent> <Leader>o :call <SID>open_changelog()<CR>$/;"	m
<LeftDrag>	<RightDrag>	.\macros\swapmous.vim	/^noremap	 <LeftDrag>	<RightDrag>$/;"	m
<LeftDrag>	<RightDrag>	.\macros\swapmous.vim	/^noremap! <LeftDrag>	<RightDrag>$/;"	m
<LeftMouse>	<RightMouse>	.\macros\swapmous.vim	/^noremap	 <LeftMouse>	<RightMouse>$/;"	m
<LeftMouse>	<RightMouse>	.\macros\swapmous.vim	/^noremap! <LeftMouse>	<RightMouse>$/;"	m
<LeftRelease>	<RightRelease>	.\macros\swapmous.vim	/^noremap	 <LeftRelease>	<RightRelease>$/;"	m
<LeftRelease>	<RightRelease>	.\macros\swapmous.vim	/^noremap! <LeftRelease>	<RightRelease>$/;"	m
<LocalLeader><LocalLeader>	.\ftplugin\abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	.\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	.\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	.\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	.\ftplugin\ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	.\ftplugin\ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>c	.\ftplugin\lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	.\ftplugin\lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	.\ftplugin\ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	.\ftplugin\ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	.\ftplugin\spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>h	.\ftplugin\man.vim	/^      nmap <buffer> <LocalLeader>h <Plug>ManBS$/;"	m
<LocalLeader>q	.\ftplugin\mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	.\ftplugin\mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>s	.\ftplugin\ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	.\ftplugin\ocaml.vim	/^  map  <silent> <LocalLeader>t :call Ocaml_print_type("normal")<CR>$/;"	m
<LocalLeader>t	.\ftplugin\ocaml.vim	/^  vmap <silent> <LocalLeader>t :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<M-Space>	.\mswin.vim	/^  cnoremap <M-Space> <C-C>:simalt ~<CR>$/;"	m
<M-Space>	.\mswin.vim	/^  inoremap <M-Space> <C-O>:simalt ~<CR>$/;"	m
<M-Space>	.\mswin.vim	/^  noremap <M-Space> :simalt ~<CR>$/;"	m
<Plug>BUncomOff	.\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	.\ftplugin\ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	.\ftplugin\lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	.\ftplugin\ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>Comment	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>LUncomOff	.\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	.\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	.\ftplugin\lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	.\ftplugin\ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>MailQuote	.\ftplugin\mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	.\ftplugin\mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>ManBS	.\ftplugin\man.vim	/^    nnoremap <buffer> <Plug>ManBS :%s\/.\\b\/\/g<CR>:setl nomod<CR>''$/;"	m
<Plug>NetrwBrowseX	.\plugin\netrwPlugin.vim	/^ nno <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<cr>$/;"	m
<Plug>SpecChangelog	.\ftplugin\spec.vim	/^noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>Traditional	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VisualComment	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<RightDrag>	<LeftDrag>	.\macros\swapmous.vim	/^noremap	 <RightDrag>	<LeftDrag>$/;"	m
<RightDrag>	<LeftDrag>	.\macros\swapmous.vim	/^noremap! <RightDrag>	<LeftDrag>$/;"	m
<RightMouse>	<LeftMouse>	.\macros\swapmous.vim	/^noremap	 <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>	<LeftMouse>	.\macros\swapmous.vim	/^noremap! <RightMouse>	<LeftMouse>$/;"	m
<RightRelease>	<LeftRelease>	.\macros\swapmous.vim	/^noremap	 <RightRelease>	<LeftRelease>$/;"	m
<RightRelease>	<LeftRelease>	.\macros\swapmous.vim	/^noremap! <RightRelease>	<LeftRelease>$/;"	m
<S-Del>	.\mswin.vim	/^vnoremap <S-Del> "+x$/;"	m
<S-Down>	.\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Down>   <C-o>gj$/;"	m
<S-Insert>		"+gP	.\mswin.vim	/^map <S-Insert>		"+gP$/;"	m
<S-Insert>		<C-R>+	.\mswin.vim	/^cmap <S-Insert>		<C-R>+$/;"	m
<S-Insert>		<C-V>	.\mswin.vim	/^imap <S-Insert>		<C-V>$/;"	m
<S-Insert>		<C-V>	.\mswin.vim	/^vmap <S-Insert>		<C-V>$/;"	m
<S-Insert>	.\gvimrc_example.vim	/^map <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>	.\gvimrc_example.vim	/^map! <S-Insert> <MiddleMouse>$/;"	m
<S-Up>	.\ftplugin\flexwiki.vim	/^  imap <buffer> <S-Up>     <C-o>gk$/;"	m
<SID>L	.\macros\less.vim	/^  noremap <SID>L L0:redraw<CR>:file<CR>$/;"	m
<SID>L	.\macros\less.vim	/^  noremap <SID>L Lg0:redraw<CR>:file<CR>$/;"	m
<Space>	.\macros\less.vim	/^noremap <script> <Space> :call <SID>NextPage()<CR><SID>L$/;"	m
<Space>	.\optwin.vim	/^noremap <silent> <buffer> <Space> :call <SID>Space()<CR>$/;"	m
<Tab>	.\ftplugin\cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Up>	.\evim.vim	/^inoremap <silent> <Up> <C-R>=pumvisible() ? "\\<lt>Up>" : "\\<lt>C-O>gk"<CR>$/;"	m
<Up>	.\ftplugin\flexwiki.vim	/^      imap <buffer> <Up>     <C-o>gk$/;"	m
<Up>	.\ftplugin\flexwiki.vim	/^  nmap <buffer> <Up>   gk$/;"	m
<Up>	.\ftplugin\flexwiki.vim	/^  vmap <buffer> <Up>   gk$/;"	m
<bs>	.\ftplugin\ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-]>	.\ftplugin\man.vim	/^    nnoremap <buffer> <c-]> :call <SID>PreGetPage(v:count)<CR>$/;"	m
<c-t>	.\ftplugin\man.vim	/^    nnoremap <buffer> <c-t> :call <SID>PopPage()<CR>$/;"	m
<char-166><char-201><char-161>	.\keymap\tamil_tscii.vim	/^no     <char-166><char-201><char-161>$/;"	m
<char-167><char-201><char-161>	.\keymap\tamil_tscii.vim	/^noo    <char-167><char-201><char-161>$/;"	m
>	.\ftplugin\cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	.\ftplugin\cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	.\macros\less.vim	/^map > G$/;"	m
>>	.\ftplugin\cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	.\macros\less.vim	/^  noremap <script> ? H0:call <SID>Backward()<CR>?$/;"	m
?	.\macros\less.vim	/^  noremap <script> ? Hg0:call <SID>Backward()<CR>?$/;"	m
Abaqus_ToggleComment	.\ftplugin\abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
Accents	.\syntax\tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
Add	.\syntax\cucumber.vim	/^function! s:Add(name)$/;"	f
AddEntry	.\ftplugin\debchangelog.vim	/^function AddEntry()$/;"	f
AntSyntaxScript	.\syntax\ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
AppendPropCarefully	.\tools\xcmdsrv_client.c	/^AppendPropCarefully(dpy, window, property, value, length)$/;"	f	file:
BMAdd	.\menu.vim	/^func! s:BMAdd()$/;"	f
BMFilename	.\menu.vim	/^func! s:BMFilename(name, num)$/;"	f
BMHash	.\menu.vim	/^func! s:BMHash(name)$/;"	f
BMHash2	.\menu.vim	/^func! s:BMHash2(name)$/;"	f
BMMunge	.\menu.vim	/^func! s:BMMunge(fname, bnum)$/;"	f
BMRemove	.\menu.vim	/^func! s:BMRemove()$/;"	f
BMShow	.\menu.vim	/^func! s:BMShow(...)$/;"	f
BMTruncName	.\menu.vim	/^func! s:BMTruncName(fname)$/;"	f
Backward	.\macros\less.vim	/^fun! s:Backward()$/;"	f
BasePath	.\tools\ccfilter.c	/^char	       BasePath[1024];$/;"	v
BinOptionG	.\optwin.vim	/^fun! <SID>BinOptionG(name, val)$/;"	f
BinOptionL	.\optwin.vim	/^fun! <SID>BinOptionL(name)$/;"	f
BindzoneCheck	.\filetype.vim	/^func! s:BindzoneCheck(default)$/;"	f
Block_pattern	.\ftplugin\ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
BrowserMaps	.\autoload\netrw.vim	/^fun! s:BrowserMaps(islocal)$/;"	f
BuildCaseTable	.\tools\unicode.vim	/^func! BuildCaseTable(name, index)$/;"	f
BuildCombiningTable	.\tools\unicode.vim	/^func! BuildCombiningTable()$/;"	f
BuildFoldTable	.\tools\unicode.vim	/^func! BuildFoldTable()$/;"	f
BuildWidthTable	.\tools\unicode.vim	/^func! BuildWidthTable(pattern, tableName)$/;"	f
Builtin	.\syntax\reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Builtins.cd	.\macros\shellmenu.vim	/^imenu Builtins.cd cd$/;"	m
Builtins.echo	.\macros\shellmenu.vim	/^imenu Builtins.echo echo$/;"	m
Builtins.eval	.\macros\shellmenu.vim	/^imenu Builtins.eval eval$/;"	m
Builtins.exec	.\macros\shellmenu.vim	/^imenu Builtins.exec exec$/;"	m
Builtins.export	.\macros\shellmenu.vim	/^imenu Builtins.export export$/;"	m
Builtins.getopts	.\macros\shellmenu.vim	/^imenu Builtins.getopts getopts$/;"	m
Builtins.hash	.\macros\shellmenu.vim	/^imenu Builtins.hash hash$/;"	m
Builtins.newgrp	.\macros\shellmenu.vim	/^imenu Builtins.newgrp newgrp$/;"	m
Builtins.pwd	.\macros\shellmenu.vim	/^imenu Builtins.pwd pwd$/;"	m
Builtins.read	.\macros\shellmenu.vim	/^imenu Builtins.read read$/;"	m
Builtins.readonly	.\macros\shellmenu.vim	/^imenu Builtins.readonly readonly$/;"	m
Builtins.return	.\macros\shellmenu.vim	/^imenu Builtins.return return$/;"	m
Builtins.times	.\macros\shellmenu.vim	/^imenu Builtins.times times$/;"	m
Builtins.type	.\macros\shellmenu.vim	/^imenu Builtins.type type$/;"	m
Builtins.umask	.\macros\shellmenu.vim	/^imenu Builtins.umask umask$/;"	m
Builtins.wait	.\macros\shellmenu.vim	/^imenu Builtins.wait wait$/;"	m
CMakeGetIndent	.\indent\cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMPILER_AIX	.\tools\ccfilter.c	37;"	d	file:
COMPILER_ATT	.\tools\ccfilter.c	38;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	57;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	59;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	61;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	63;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	65;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	67;"	d	file:
COMPILER_DEFAULT	.\tools\ccfilter.c	69;"	d	file:
COMPILER_GCC	.\tools\ccfilter.c	36;"	d	file:
COMPILER_HPUX	.\tools\ccfilter.c	41;"	d	file:
COMPILER_IRIX	.\tools\ccfilter.c	39;"	d	file:
COMPILER_Names	.\tools\ccfilter.c	/^char	*COMPILER_Names[][2] =$/;"	v
COMPILER_QTY	.\tools\ccfilter.c	54;"	d	file:
COMPILER_SOLARIS	.\tools\ccfilter.c	40;"	d	file:
COMPILER_UNKNOWN	.\tools\ccfilter.c	35;"	d	file:
CR	.\optwin.vim	/^fun! <SID>CR()$/;"	f
CSH	.\filetype.vim	/^func! s:CSH()$/;"	f
CSS1	.\syntax\2html.vim	/^function! s:CSS1(id)$/;"	f
CWD	.\tools\ccfilter.c	/^char	       CWD[1024];$/;"	v
CdlAsignment	.\indent\cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	.\indent\cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
CfHiLink	.\syntax\cf.vim	/^command -nargs=+ CfHiLink hi def link <args>$/;"	c
CheckToIgnoreRightParan	.\indent\sqlanywhere.vim	/^function s:CheckToIgnoreRightParan( prev_lnum, num_levels )$/;"	f
Check_inp	.\filetype.vim	/^func! s:Check_inp()$/;"	f
ChgDir	.\autoload\vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChgDir	.\autoload\zip.vim	/^fun! s:ChgDir(newdir,errlvl,errmsg)$/;"	f
Choose	.\macros\matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
CleanUp	.\macros\matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
Clearstack	.\autoload\xmlcomplete.vim	/^function! s:Clearstack(sname)$/;"	f
CloseBug	.\ftplugin\debchangelog.vim	/^function CloseBug()$/;"	f
CobolIndentBlock	.\ftplugin\cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
Col	.\tools\ccfilter.c	/^unsigned long  Col;$/;"	v
Comment	.\ftplugin\cobol.vim	/^function! s:Comment(arg)$/;"	f
CompilerSet	.\compiler\ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\bcc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\checkstyle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\decada.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fortran_F.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fortran_cv.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fortran_elf90.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fortran_g77.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fortran_lf95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\fpc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\gnat.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\hp_acc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\icc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\intel.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\irix5_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\irix5_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\javac.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\jikes.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\mips_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\mipspro_c89.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\mipspro_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\modelsim_vcom.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\neato.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\onsgmls.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\pbx.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\perl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\php.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\pyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\se.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\splint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\xmllint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	.\compiler\xmlwf.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Component	.\tools\shtags.pl	/^Component:	$id[1]$/;"	l
ComposePath	.\autoload\netrw.vim	/^fun! s:ComposePath(base,subdir)$/;"	f
Count	.\macros\matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountUnbalancedParan	.\indent\sqlanywhere.vim	/^function s:CountUnbalancedParan( line, paran_to_check )$/;"	f
CountWrapper	.\ftplugin\vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
CucumberComplete	.\ftplugin\cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Cycle	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
Date	.\ftplugin\debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	.\ftplugin\debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	.\ftplugin\debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	.\ftplugin\debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	.\ftplugin\debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	.\ftplugin\debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	.\ftplugin\debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
DecreaseFunc	.\ftplugin\cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
DecreaseIndent	.\ftplugin\cobol.vim	/^function! s:DecreaseIndent()$/;"	f
DefPython	.\autoload\python3complete.vim	/^function! s:DefPython()$/;"	f
DefPython	.\autoload\pythoncomplete.vim	/^function! s:DefPython()$/;"	f
DefRuby	.\autoload\rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineInlineMarkup	.\syntax\rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
DefineOneInlineMarkup	.\syntax\rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
Dict2info	.\autoload\ccomplete.vim	/^function! s:Dict2info(dict)$/;"	f
DiffGitCached	.\ftplugin\gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DiffOrig	.\vimrc_example.vim	/^  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis$/;"	c
Distribution	.\ftplugin\debchangelog.vim	/^function Distribution(dist)$/;"	f
DoMatchParen	.\plugin\matchparen.vim	/^command! DoMatchParen runtime plugin\/matchparen.vim | windo doau CursorMoved$/;"	c
DoRemoteReply	.\plugin\rrhelper.vim	/^function DoRemoteReply(id, cnt, group, file)$/;"	f
Do_toolbar_tmenu	.\lang\menu_af_af.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ca_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_chinese_gb.936.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_chinese_taiwan.950.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_cs_cz.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_czech_czech_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_czech_czech_republic.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_de_de.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_eo.utf-8.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_es_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_fi_fi.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_fr_fr.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_hu_hu.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_hu_hu.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_it_it.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ja_jp.euc-jp.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ja_jp.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_japanese_japan.932.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ko_kr.euckr.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ko_kr.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_nl_nl.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_no_no.latin1.vim	/^	function Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_pl_pl.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_pl_pl.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_polish_poland.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_pt_br.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_pt_pt.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ru_ru.koi8-r.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_ru_ru.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sk_sk.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sl_si.cp1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sl_si.latin2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sl_si.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_slovak_slovak_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sr_rs.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sr_rs.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sr_rs.iso_8859-5.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sr_rs.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_sv_se.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_uk_ua.cp1251.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_uk_ua.koi8-u.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_vi_vn.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_zh_cn.gb2312.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_zh_cn.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	.\lang\menu_zh_tw.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Doxygen_Hilights	.\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights()$/;"	f
Doxygen_Hilights_Base	.\syntax\doxygen.vim	/^    fun! s:Doxygen_Hilights_Base()$/;"	f
DtraceCheck	.\filetype.vim	/^func! s:DtraceCheck()$/;"	f
DxyCreateSmallSpecial	.\syntax\doxygen.vim	/^  fun! s:DxyCreateSmallSpecial( kword, name )$/;"	f
DylanGetIndent	.\indent\dylan.vim	/^function DylanGetIndent()$/;"	f
Edit	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
EditElsewhere	.\macros\editexisting.vim	/^func s:EditElsewhere(filename)$/;"	f
EditExisting	.\macros\editexisting.vim	/^func! EditExisting(fname, command)$/;"	f
EditVimrc	.\menu.vim	/^fun! s:EditVimrc()$/;"	f
Email	.\ftplugin\debchangelog.vim	/^function <SID>Email()$/;"	f
EmptystackP	.\autoload\xmlcomplete.vim	/^function! s:EmptystackP(sname)$/;"	f
End	.\macros\less.vim	/^fun! s:End()$/;"	f
EndBlockIndent	.\indent\ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
Enter_annotation_buffer	.\ftplugin\ocaml.vim	/^    function! s:Enter_annotation_buffer()$/;"	f
Environ.CDPATH	.\macros\shellmenu.vim	/^imenu Environ.CDPATH ${CDPATH}$/;"	m
Environ.HOME	.\macros\shellmenu.vim	/^imenu Environ.HOME ${HOME}$/;"	m
Environ.IFS	.\macros\shellmenu.vim	/^imenu Environ.IFS ${IFS}$/;"	m
Environ.LC_CTYPE	.\macros\shellmenu.vim	/^imenu Environ.LC_CTYPE ${LC_CTYPE}$/;"	m
Environ.LC_MESSAGES	.\macros\shellmenu.vim	/^imenu Environ.LC_MESSAGES ${LC_MESSAGES}$/;"	m
Environ.MAIL	.\macros\shellmenu.vim	/^imenu Environ.MAIL ${MAIL}$/;"	m
Environ.MAILCHECK	.\macros\shellmenu.vim	/^imenu Environ.MAILCHECK ${MAILCHECK}$/;"	m
Environ.PATH	.\macros\shellmenu.vim	/^imenu Environ.PATH ${PATH}$/;"	m
Environ.PS1	.\macros\shellmenu.vim	/^imenu Environ.PS1 ${PS1}$/;"	m
Environ.PS2	.\macros\shellmenu.vim	/^imenu Environ.PS2 ${PS2}$/;"	m
Environ.SHACCT	.\macros\shellmenu.vim	/^imenu Environ.SHACCT ${SHACCT}$/;"	m
Environ.SHELL	.\macros\shellmenu.vim	/^imenu Environ.SHELL ${SHELL}$/;"	m
ErlangIndent	.\indent\erlang.vim	/^function ErlangIndent()$/;"	f
ErlangIndentAtferLine	.\indent\erlang.vim	/^function s:ErlangIndentAtferLine(l)$/;"	f
ErrMsg	.\autoload\rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Escape	.\autoload\zip.vim	/^fun! s:Escape(fname,isfilt)$/;"	f
Examples	.\tools\efm_perl.pl	/^Examples:$/;"	l
Exit_annotation_buffer	.\ftplugin\ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
Explore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Explore		call netrw#Explore(<count>,0,0+<bang>0,<q-args>)$/;"	c
ExplorePatHls	.\autoload\netrw.vim	/^fun! s:ExplorePatHls(pattern)$/;"	f
Extract_type_data	.\ftplugin\ocaml.vim	/^    function! s:Extract_type_data(block_pattern)$/;"	f
F	.\macros\less.vim	/^map F :e<CR>G<SID>L:sleep 1<CR>F$/;"	m
FTRules	.\filetype.vim	/^func! s:FTRules()$/;"	f
FTVB	.\filetype.vim	/^func! s:FTVB(alt)$/;"	f
FTasm	.\filetype.vim	/^func! s:FTasm()$/;"	f
FTasmsyntax	.\filetype.vim	/^func! s:FTasmsyntax()$/;"	f
FTbtm	.\filetype.vim	/^func! s:FTbtm()$/;"	f
FTchange	.\filetype.vim	/^func! s:FTchange()$/;"	f
FTe	.\filetype.vim	/^func! s:FTe()$/;"	f
FTent	.\filetype.vim	/^func! s:FTent()$/;"	f
FTheader	.\filetype.vim	/^func! s:FTheader()$/;"	f
FThtml	.\filetype.vim	/^func! s:FThtml()$/;"	f
FTidl	.\filetype.vim	/^func! s:FTidl()$/;"	f
FTinc	.\filetype.vim	/^func! s:FTinc()$/;"	f
FTlpc	.\filetype.vim	/^func! s:FTlpc()$/;"	f
FTm	.\filetype.vim	/^func! s:FTm()$/;"	f
FTmm	.\filetype.vim	/^func! s:FTmm()$/;"	f
FTmms	.\filetype.vim	/^func! s:FTmms()$/;"	f
FTnroff	.\filetype.vim	/^func! s:FTnroff()$/;"	f
FTperl	.\filetype.vim	/^func! s:FTperl()$/;"	f
FTpl	.\filetype.vim	/^func! s:FTpl()$/;"	f
FTprogress_asm	.\filetype.vim	/^func! s:FTprogress_asm()$/;"	f
FTprogress_cweb	.\filetype.vim	/^func! s:FTprogress_cweb()$/;"	f
FTprogress_pascal	.\filetype.vim	/^func! s:FTprogress_pascal()$/;"	f
FTr	.\filetype.vim	/^func! s:FTr()$/;"	f
FTtex	.\filetype.vim	/^func! s:FTtex()$/;"	f
FTxml	.\filetype.vim	/^func! s:FTxml()$/;"	f
FTy	.\filetype.vim	/^func! s:FTy()$/;"	f
FileExplorer	.\plugin\netrwPlugin.vim	/^augroup FileExplorer$/;"	a
FileFormat	.\menu.vim	/^fun! s:FileFormat()$/;"	f
FileName	.\tools\ccfilter.c	/^char	       FileName[1024];$/;"	v
FileReadable	.\autoload\netrw.vim	/^fun! s:FileReadable(fname)$/;"	f
Finalise	.\ftplugin\debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	.\ftplugin\debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	.\ftplugin\debchangelog.vim	/^function <SID>Finalised()$/;"	f
Find	.\optwin.vim	/^fun! <SID>Find(lnum)$/;"	f
FindLet	.\indent\ocaml.vim	/^function s:FindLet(pstart, pmid, pend)$/;"	f
FindLet	.\indent\sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindOpenBracket	.\indent\php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindPage	.\ftplugin\man.vim	/^func <SID>FindPage(sect, page)$/;"	f
FindPair	.\indent\ocaml.vim	/^function s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	.\indent\sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPrevNonBlankNonComment	.\indent\erlang.vim	/^function s:FindPrevNonBlankNonComment(lnum)$/;"	f
FindTheIfOfAnElse	.\indent\php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	.\indent\php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
Find_common_path	.\ftplugin\ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
First_word_len	.\indent\awk.vim	/^function! s:First_word_len( line )$/;"	f
FixBeginfigs	.\ftplugin\mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
FixFText	.\menu.vim	/^fun! s:FixFText()$/;"	f
Fixup	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FnameEscape	.\menu.vim	/^func! s:FnameEscape(fname)$/;"	f
Fnameescape	.\ftplugin\ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
FoldCompare	.\syntax\2html.vim	/^  function! s:FoldCompare(f1, f2)$/;"	f
FortranGetFixedIndent	.\indent\fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	.\indent\fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	.\indent\fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
Forward	.\macros\less.vim	/^fun! s:Forward()$/;"	f
FullName	.\ftplugin\debchangelog.vim	/^function <SID>FullName()$/;"	f
G	.\macros\less.vim	/^noremap <script> G G<SID>L$/;"	m
G	.\syntax\2html.vim	/^  norm! G$/;"	m
GetAdaIndent	.\indent\ada.vim	/^function GetAdaIndent()$/;"	f
GetAddition	.\autoload\ccomplete.vim	/^function! s:GetAddition(line, match, memarg, bracket)$/;"	f
GetAwkIndent	.\indent\awk.vim	/^function! GetAwkIndent()$/;"	f
GetBstIndent	.\indent\bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBufferRubyClass	.\autoload\rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	.\autoload\rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	.\autoload\rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	.\autoload\rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCSSIndent	.\indent\css.vim	/^function GetCSSIndent()$/;"	f
GetChaiScriptIndent	.\indent\chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetCmdArg	.\ftplugin\man.vim	/^func <SID>GetCmdArg(sect, page)$/;"	f
GetCobolIndent	.\indent\cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetConfigIndent	.\indent\config.vim	/^function GetConfigIndent()$/;"	f
GetCucumberIndent	.\indent\cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDTDIndent	.\indent\dtd.vim	/^function GetDTDIndent()$/;"	f
GetEiffelIndent	.\indent\eiffel.vim	/^function GetEiffelIndent()$/;"	f
GetErubyIndent	.\indent\eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	.\indent\eterm.vim	/^function GetEtermIndent()$/;"	f
GetFrameScriptIndent	.\indent\framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetGitconfigIndent	.\indent\gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetHamlIndent	.\indent\haml.vim	/^function! GetHamlIndent()$/;"	f
GetIdlangIndent	.\indent\idlang.vim	/^function GetIdlangIndent(lnum)$/;"	f
GetInd	.\indent\ocaml.vim	/^function s:GetInd(lnum, pat, lim)$/;"	f
GetInd	.\indent\sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIshdIndent	.\indent\ishd.vim	/^fun! GetIshdIndent(lnum)$/;"	f
GetJavaIndent	.\indent\java.vim	/^function GetJavaIndent()$/;"	f
GetLDIndent	.\indent\ld.vim	/^function GetLDIndent()$/;"	f
GetLastRealCodeLNum	.\indent\php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLatestVimScripts	.\autoload\getscript.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLatestVimScripts	.\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLineWithoutFullComment	.\indent\ocaml.vim	/^function s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	.\indent\liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLogtalkIndent	.\indent\logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	.\indent\lua.vim	/^function! GetLuaIndent()$/;"	f
GetMSL	.\indent\ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakeIndent	.\indent\make.vim	/^function GetMakeIndent()$/;"	f
GetMatlabIndent	.\indent\matlab.vim	/^function GetMatlabIndent(lnum)$/;"	f
GetMetaPostIndent	.\indent\mp.vim	/^function! GetMetaPostIndent()$/;"	f
GetMmaIndent	.\indent\mma.vim	/^function GetMmaIndent()$/;"	f
GetOCamlIndent	.\indent\ocaml.vim	/^function GetOCamlIndent()$/;"	f
GetObjCIndent	.\indent\objc.vim	/^function GetObjCIndent()$/;"	f
GetOccamIndent	.\indent\occam.vim	/^function GetOccamIndent()$/;"	f
GetOffsetOf	.\indent\config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
GetOneScript	.\autoload\getscript.vim	/^fun! s:GetOneScript(...)$/;"	f
GetPage	.\ftplugin\man.vim	/^func <SID>GetPage(...)$/;"	f
GetPascalIndent	.\indent\pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerl6Indent	.\indent\perl6.vim	/^function GetPerl6Indent()$/;"	f
GetPerlIndent	.\indent\perl.vim	/^function GetPerlIndent()$/;"	f
GetPhpIndent	.\indent\php.vim	/^function! GetPhpIndent()$/;"	f
GetPoVRayIndent	.\indent\pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPrevNonCommentLineNum	.\indent\pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
GetPrologIndent	.\indent\prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPythonIndent	.\indent\python.vim	/^function GetPythonIndent(lnum)$/;"	f
GetRSTIndent	.\indent\rst.vim	/^function GetRSTIndent()$/;"	f
GetReadlineIndent	.\indent\readline.vim	/^function GetReadlineIndent()$/;"	f
GetRubyIndent	.\indent\ruby.vim	/^function GetRubyIndent()$/;"	f
GetRubyVarType	.\autoload\rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSDLIndent	.\indent\sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	.\indent\sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	.\indent\sqlanywhere.vim	/^function GetSQLIndent()$/;"	f
GetSassIndent	.\indent\sass.vim	/^function! GetSassIndent()$/;"	f
GetScript	.\autoload\getscript.vim	/^com!        -nargs=0 GetScript           call getscript#GetLatestVimScripts()$/;"	c
GetScripts	.\plugin\getscriptPlugin.vim	/^com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()$/;"	c
GetShIndent	.\indent\sh.vim	/^function! GetShIndent()$/;"	f
GetStmtStarterIndent	.\indent\sqlanywhere.vim	/^function s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
GetTFIndent	.\indent\tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	.\indent\tcl.vim	/^function GetTclIndent()$/;"	f
GetTempfile	.\autoload\netrw.vim	/^fun! s:GetTempfile(fname)$/;"	f
GetTildeIndent	.\indent\tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetVHDLindent	.\indent\vhdl.vim	/^function GetVHDLindent()$/;"	f
GetVerilogIndent	.\indent\verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVimIndent	.\indent\vim.vim	/^function GetVimIndent()$/;"	f
GetWidth	.\indent\objc.vim	/^function s:GetWidth(line, regexp)$/;"	f
GetXF86ConfIndent	.\indent\xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	.\indent\xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYaccIndent	.\indent\yacc.vim	/^function GetYaccIndent()$/;"	f
Get_brace_balance	.\indent\awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
Get_prev_line	.\indent\awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
Get_type	.\ftplugin\ocaml.vim	/^    function! s:Get_type(mode)$/;"	f
Greek	.\syntax\tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
GroovyHiLink	.\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	.\syntax\groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
H	.\macros\less.vim	/^map H h$/;"	m
HamGetFreeIndent	.\indent\hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	.\indent\hamster.vim	/^function HamGetIndent(lnum)$/;"	f
Header	.\optwin.vim	/^fun! <SID>Header(text)$/;"	f
Help	.\macros\less.vim	/^fun! s:Help()$/;"	f
Helpfind	.\menu.vim	/^fun! s:Helpfind()$/;"	f
Hexplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Hexplore	call netrw#Explore(<count>,1,2+<bang>0,<q-args>)$/;"	c
Hi	.\syntax\sdl.vim	/^	command -nargs=+ Hi     hi <args>$/;"	c
Hi	.\syntax\sdl.vim	/^	command -nargs=+ Hi     hi def <args>$/;"	c
Hi	.\syntax\xpm2.vim	/^  command -nargs=+ Hi hi <args>$/;"	c
Hi	.\syntax\xpm2.vim	/^  command -nargs=+ Hi hi def <args>$/;"	c
HiFold	.\syntax\yacc.vim	/^ com! -nargs=+ HiFold	<args> fold$/;"	c
HiFold	.\syntax\yacc.vim	/^ com! -nargs=+ HiFold	<args>$/;"	c
HiLink	.\syntax\a65.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\a65.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\abap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\abap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\abaqus.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\abc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\abc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\abel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\abel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\acedb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\acedb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\aflex.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\aflex.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ahdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\amiga.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\amiga.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\aml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\aml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ampl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ampl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\antlr.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\antlr.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\apache.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\apache.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\apachestyle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asm68k.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asmh8300.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\aspvbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asterisk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\asteriskvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\atlas.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\atlas.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\automake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\automake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ave.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ave.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\awk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\awk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ayacc.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\b.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\b.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\baan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\baan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\basic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\basic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\bc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\bc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\bib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\bib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\bindzone.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\blank.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\blank.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\bst.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\bst.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\btm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\btm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\bzr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\bzr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cabal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cabal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cdl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cdl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cfg.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cfg.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\change.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\change.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\changelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\changelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cheetah.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\chill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\chill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\clean.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\clean.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\clipper.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\clipper.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cmake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cmake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cobol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cobol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\config.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\config.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\crontab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\crontab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\csc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\csc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\csh.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\csh.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\csp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\csp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cterm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cterm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cupl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cupl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cuplsim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cvs.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cvs.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cweb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cweb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cynlib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\cynpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dcd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dcd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\debchangelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\debcontrol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\def.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\def.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\desc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\desc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\desktop.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\desktop.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\diva.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\diva.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\django.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\django.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\docbk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\docbk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dosbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dosini.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dosini.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dracula.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dracula.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dtd.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dtd.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dtml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dtml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dylan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dylan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dylanintr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\dylanlid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ecd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ecd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\edif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\edif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\eiffel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\elf.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\elf.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\elmfilt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\erlang.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\erlang.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\esqlc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\esterel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\esterel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\eviews.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\eviews.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\exim.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\exim.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\expect.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\expect.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\exports.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\exports.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\fdcc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\fgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\fgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\focexec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\focexec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\form.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\form.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\forth.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\forth.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\fortran.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\fortran.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\foxpro.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\fstab.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gdb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gdb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gdmo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gedcom.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gkrellmrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\grads.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\grads.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gretl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gretl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\gtkrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\hamster.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\hamster.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\haskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\haskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\hb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\hb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\hercules.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\hercules.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\hex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\hex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\hog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\hog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\htmlos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ia64.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ia64.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\icon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\icon.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\idl.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\idlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\idlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\inform.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\inform.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\inittab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\inittab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ishd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ishd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\iss.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\iss.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ist.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ist.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jal.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jal.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jargon.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jargon.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jess.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jess.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jgraph.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jproperties.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\jsp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\jsp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\kix.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\kix.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\kscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\kscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\kwt.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\kwt.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lace.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lace.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\latte.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\latte.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ldif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ldif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lhaskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lifelines.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lilo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lilo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lisp.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lite.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lite.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\logtalk.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lotos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lotos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lout.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lout.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lpc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lpc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lprolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\m4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\m4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mailcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mailcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\make.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\make.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\man.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\man.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\maple.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\maple.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\masm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\masm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\master.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\master.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\matlab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\matlab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\maxima.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\maxima.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mgp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mgp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mmix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mmix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\modsim3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\modula2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\modula2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\modula3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\modula3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\monk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\monk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\msidl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\msidl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\msql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\msql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mupad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mupad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mush.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mush.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\muttrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\mysql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\mysql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\named.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\named.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\nasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\nasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\nastran.vim	/^     command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\natural.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\natural.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ncf.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ncf.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\nqc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\nqc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\nroff.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\nroff.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\nsis.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\nsis.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\obj.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\obj.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\objc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\objc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\occam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\occam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\omnimark.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\openroad.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\openroad.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\opl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\opl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ora.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ora.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pascal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pascal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pccts.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pccts.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\perl6.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\perl6.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pfmain.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\php.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\php.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pike.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pike.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pilrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pine.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pine.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\plm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\plm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\plsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\plsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\po.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\po.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\postscr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\postscr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ppd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ppd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ppwiz.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\prescribe.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\procmail.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\procmail.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\progress.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\progress.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\prolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\prolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\psf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\psf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ptcap.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\purifylog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\pyrex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\r.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\r.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\radiance.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\radiance.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\ratpoison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rcs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rcs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rcslog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rebol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rebol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\registry.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\registry.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\remind.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\remind.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\resolv.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rexx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rexx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\robots.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\robots.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rpcgen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight default link <args>$/;"	c
HiLink	.\syntax\rpl.vim	/^    command -nargs=+ HiLink highlight link <args>$/;"	c
HiLink	.\syntax\rtf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\rtf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\samba.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\samba.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sas.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sas.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sather.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sather.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\scheme.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\scheme.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\scilab.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\scilab.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sd.vim	/^                command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sd.vim	/^                command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sdl.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sdl.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sed.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sed.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sgmldecl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sgmllnx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sicad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sicad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\simula.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\simula.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sinda.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sinda.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sindacmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sindaout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\skill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\skill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\slang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\slang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\slice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\slice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\slrnrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\slrnsc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\smarty.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\smarty.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\smil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\smil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\smith.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\smith.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\snnsnet.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\snnspat.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\snnsres.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\snobol4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\spec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\spec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\specman.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\specman.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\spice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\spice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\splint.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\splint.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\spup.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\spup.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqlanywhere.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sqlforms.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sqlinformix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sqlj.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sqloracle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sqr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sqr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\squid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\squid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sshconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\sshdconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\st.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\st.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\stp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\stp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\strace.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\strace.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\svn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\svn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tads.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tads.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tags.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tags.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tak.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tak.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\takcmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\takout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\takout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tex.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tex.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\texinfo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\texmf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\texmf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tidy.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tidy.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tli.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tli.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\trasys.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\trasys.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tsalt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tsscl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tssgm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\tssop.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\tssop.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\uc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\uc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\uil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\uil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vera.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vera.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\verilog.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\verilog.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\verilogams.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vhdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\virata.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\virata.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vmasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vrml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vrml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\vsejcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\wdiff.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\webmacro.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\wget.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\wget.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\winbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\wml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\wml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\wsml.vim	/^       command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\wsml.vim	/^       command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xdefaults.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xkb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xkb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xmath.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xmath.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xpm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xpm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xpm2.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\xs.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xxd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\xxd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.\syntax\yacc.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\z8a.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.\syntax\z8a.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight_Matching_Pair	.\plugin\matchparen.vim	/^function! s:Highlight_Matching_Pair()$/;"	f
HtmlClosing	.\syntax\2html.vim	/^  function! s:HtmlClosing(id)$/;"	f
HtmlColor	.\syntax\2html.vim	/^  function! s:HtmlColor(color)$/;"	f
HtmlFormat	.\syntax\2html.vim	/^function! s:HtmlFormat(text, style_name, diff_style_name)$/;"	f
HtmlHiLink	.\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	.\syntax\html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	.\indent\html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	.\indent\html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	.\indent\html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	.\indent\html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	.\indent\html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	.\indent\html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	.\indent\html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlOpening	.\syntax\2html.vim	/^  function! s:HtmlOpening(id)$/;"	f
ISBN	.\tutor\tutor.pl	/^	ISBN: 83-7197-472-8$/;"	l
ISBN	.\tutor\tutor.pl	/^	ISBN: 83-7197-539-2$/;"	l
InComment	.\autoload\xmlcomplete.vim	/^function! s:InComment()$/;"	f
InCommentAt	.\autoload\xmlcomplete.vim	/^function! s:InCommentAt(line, col)$/;"	f
IncreaseFunc	.\ftplugin\cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
IncreaseIndent	.\ftplugin\cobol.vim	/^function! s:IncreaseIndent()$/;"	f
InsertRefs	.\macros\matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
Instack	.\autoload\xmlcomplete.vim	/^function! s:Instack(el, sname)$/;"	f
IsColComment	.\indent\sqlanywhere.vim	/^function s:IsColComment(lnum, cnum)$/;"	f
IsInClassDef	.\autoload\rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInString	.\indent\ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	.\indent\ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	.\indent\ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLineComment	.\indent\sqlanywhere.vim	/^function s:IsLineComment(lnum)$/;"	f
IsPosInClassDef	.\autoload\rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsSerialName	.\tools\xcmdsrv_client.c	/^IsSerialName(str)$/;"	f	file:
IslinePHP	.\indent\php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
JavaHiLink	.\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	.\syntax\java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
Justify	.\macros\justify.vim	/^com! -range -nargs=* Justify <line1>,<line2>call Justify(<f-args>)$/;"	c
Justify	.\macros\justify.vim	/^function! Justify(...) range$/;"	f
Justify_error	.\macros\justify.vim	/^function! Justify_error(message)$/;"	f
K	.\ftplugin\gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
LINELENGTH	.\tools\ccfilter.c	21;"	d	file:
LUB	.\tutor\tutor.pl	/^	     LUB:	    <ESC> :wq<ENTER>  by zmiany zachowaæ.$/;"	l
LeadingWhiteSpace	.\indent\objc.vim	/^function s:LeadingWhiteSpace(line)$/;"	f
Line	.\tools\ccfilter.c	/^char	       Line[LINELENGTH];$/;"	v
Line2	.\tools\ccfilter.c	/^char	       Line2[LINELENGTH];$/;"	v
LineHasOpeningBrackets	.\indent\ruby.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LoadBufferMenu	.\menu.vim	/^  augroup LoadBufferMenu$/;"	a
LoadFTPlugin	.\ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f
LoadIndent	.\indent.vim	/^  func! s:LoadIndent()$/;"	f
LoadVimSesn	.\menu.vim	/^fun! s:LoadVimSesn()$/;"	f
Load_annotation	.\ftplugin\ocaml.vim	/^    function! s:Load_annotation()$/;"	f
LocalBrowse	.\plugin\netrwPlugin.vim	/^fun! s:LocalBrowse(dirname)$/;"	f
LocalBrowseShellCmdRefresh	.\autoload\netrw.vim	/^fun! s:LocalBrowseShellCmdRefresh()$/;"	f
LocalFastBrowser	.\autoload\netrw.vim	/^fun! s:LocalFastBrowser()$/;"	f
LocalListing	.\autoload\netrw.vim	/^fun! s:LocalListing()$/;"	f
Locate_annotation	.\ftplugin\ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
LookupName	.\tools\xcmdsrv_client.c	/^LookupName(dpy, name, delete, loose)$/;"	f	file:
MAX_PROP_WORDS	.\tools\xcmdsrv_client.c	67;"	d	file:
MainBlockIndent	.\indent\ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
MakeMenu	.\ftplugin\debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeSshCmd	.\autoload\netrw.vim	/^fun! s:MakeSshCmd(sshcmd)$/;"	f
MakeTag	.\tools\pltags.pl	/^sub MakeTag($$$$$)$/;"	s
Man	.\ftplugin\man.vim	/^  com -nargs=+ Man call s:GetPage(<f-args>)$/;"	c
Match	.\indent\ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchCount	.\indent\pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
MatchDebug	.\macros\matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchLast	.\indent\ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
Match_borders	.\ftplugin\ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
Match_data	.\ftplugin\ocaml.vim	/^    function! s:Match_data()$/;"	f
Match_debug	.\macros\matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	.\macros\matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
McSetf	.\filetype.vim	/^func! s:McSetf()$/;"	f
MenuExplOpen	.\menu.vim	/^    fun MenuExplOpen()$/;"	f
MetaNextNonblankNoncomment	.\indent\mp.vim	/^function! MetaNextNonblankNoncomment(pos)$/;"	f
MetaPrevNonblankNoncomment	.\indent\mp.vim	/^function! MetaPrevNonblankNoncomment(pos)$/;"	f
MetaSearchNoncomment	.\indent\mp.vim	/^function! MetaSearchNoncomment(pattern, ...)$/;"	f
MkVimball	.\plugin\vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
ModuloIndent	.\indent\sqlanywhere.vim	/^function s:ModuloIndent(ind)$/;"	f
MultiMatch	.\macros\matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
NFH_bmp	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_bmp(bmpfile)$/;"	f
NFH_doc	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_doc(doc)$/;"	f
NFH_eps	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_eps(eps)$/;"	f
NFH_fig	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_fig(fig)$/;"	f
NFH_gif	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_gif(giffile)$/;"	f
NFH_htm	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_htm(pagefile)$/;"	f
NFH_html	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_html(pagefile)$/;"	f
NFH_jpg	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_jpg(jpgfile)$/;"	f
NFH_obj	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_obj(obj)$/;"	f
NFH_pdf	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pdf(pdf)$/;"	f
NFH_png	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_png(pngfile)$/;"	f
NFH_pnm	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_pnm(pnmfile)$/;"	f
NFH_ps	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_ps(ps)$/;"	f
NFH_sxw	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_sxw(sxw)$/;"	f
NFH_xls	.\autoload\netrwFileHandlers.vim	/^fun! s:NFH_xls(xls)$/;"	f
NetReadFixup	.\autoload\netrw.vim	/^ fun! NetReadFixup(method, line1, line2)$/;"	f
NetSortSequence	.\autoload\netrw.vim	/^fun! s:NetSortSequence(islocal)$/;"	f
NetUserPass	.\autoload\netrw.vim	/^fun! NetUserPass(...)$/;"	f
NetUserPass	.\plugin\netrwPlugin.vim	/^com! -nargs=*		NetUserPass	call NetUserPass(<f-args>)$/;"	c
NetUserPass	.\plugin\netrwPlugin.vim	/^fun! NetUserPass(...)$/;"	f
NetrwBMShow	.\autoload\netrw.vim	/^fun! s:NetrwBMShow()$/;"	f
NetrwBannerCtrl	.\autoload\netrw.vim	/^fun! s:NetrwBannerCtrl(islocal)$/;"	f
NetrwBookHistHandler	.\autoload\netrw.vim	/^fun! s:NetrwBookHistHandler(chg,curdir)$/;"	f
NetrwBookHistRead	.\autoload\netrw.vim	/^fun! s:NetrwBookHistRead()$/;"	f
NetrwBookHistSave	.\autoload\netrw.vim	/^fun! s:NetrwBookHistSave()$/;"	f
NetrwBookmarkMenu	.\autoload\netrw.vim	/^fun! s:NetrwBookmarkMenu()$/;"	f
NetrwBrowse	.\autoload\netrw.vim	/^fun! s:NetrwBrowse(islocal,dirname)$/;"	f
NetrwBrowseChgDir	.\autoload\netrw.vim	/^fun! s:NetrwBrowseChgDir(islocal,newdir,...)$/;"	f
NetrwChgPerm	.\autoload\netrw.vim	/^fun! s:NetrwChgPerm(islocal,curdir)$/;"	f
NetrwClean	.\plugin\netrwPlugin.vim	/^com! -bang	NetrwClean	call netrw#NetrwClean(<bang>0)$/;"	c
NetrwClearExplore	.\autoload\netrw.vim	/^fun! s:NetrwClearExplore()$/;"	f
NetrwCursorline	.\autoload\netrw.vim	/^fun! s:NetrwCursorline()$/;"	f
NetrwDelete	.\autoload\netrw.vim	/^fun! s:NetrwDelete(path)$/;"	f
NetrwEnew	.\autoload\netrw.vim	/^fun! s:NetrwEnew(...)$/;"	f
NetrwExploreListUniq	.\autoload\netrw.vim	/^fun! s:NetrwExploreListUniq(explist)$/;"	f
NetrwFileInfo	.\autoload\netrw.vim	/^fun! s:NetrwFileInfo(islocal,fname)$/;"	f
NetrwGetBuffer	.\autoload\netrw.vim	/^fun! s:NetrwGetBuffer(islocal,dirname)$/;"	f
NetrwGetFile	.\autoload\netrw.vim	/^fun! s:NetrwGetFile(readcmd, tfile, method)$/;"	f
NetrwGetWord	.\autoload\netrw.vim	/^fun! s:NetrwGetWord()$/;"	f
NetrwGetcwd	.\autoload\netrw.vim	/^fun! s:NetrwGetcwd(doesc)$/;"	f
NetrwHidden	.\autoload\netrw.vim	/^fun! s:NetrwHidden(islocal)$/;"	f
NetrwHide	.\autoload\netrw.vim	/^fun! s:NetrwHide(islocal)$/;"	f
NetrwHideEdit	.\autoload\netrw.vim	/^fun! s:NetrwHideEdit(islocal)$/;"	f
NetrwHome	.\autoload\netrw.vim	/^fun! s:NetrwHome()$/;"	f
NetrwInit	.\autoload\netrw.vim	/^fun s:NetrwInit(varname,value)$/;"	f
NetrwLeftmouse	.\autoload\netrw.vim	/^fun! s:NetrwLeftmouse(islocal)$/;"	f
NetrwListHide	.\autoload\netrw.vim	/^fun! s:NetrwListHide()$/;"	f
NetrwListSettings	.\autoload\netrw.vim	/^fun! s:NetrwListSettings(islocal)$/;"	f
NetrwListStyle	.\autoload\netrw.vim	/^fun! s:NetrwListStyle(islocal)$/;"	f
NetrwLocalRename	.\autoload\netrw.vim	/^fun! s:NetrwLocalRename(path) range$/;"	f
NetrwLocalRm	.\autoload\netrw.vim	/^fun! s:NetrwLocalRm(path) range$/;"	f
NetrwLocalRmFile	.\autoload\netrw.vim	/^fun! s:NetrwLocalRmFile(path,fname,all)$/;"	f
NetrwMakeDir	.\autoload\netrw.vim	/^fun! s:NetrwMakeDir(usrhost)$/;"	f
NetrwMarkFile	.\autoload\netrw.vim	/^fun! s:NetrwMarkFile(islocal,fname)$/;"	f
NetrwMarkFileCompress	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileCompress(islocal)$/;"	f
NetrwMarkFileCopy	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileCopy(islocal)$/;"	f
NetrwMarkFileDiff	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileDiff(islocal)$/;"	f
NetrwMarkFileEdit	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileEdit(islocal)$/;"	f
NetrwMarkFileExe	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileExe(islocal)$/;"	f
NetrwMarkFileGrep	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileGrep(islocal)$/;"	f
NetrwMarkFileMove	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileMove(islocal)$/;"	f
NetrwMarkFilePrint	.\autoload\netrw.vim	/^fun! s:NetrwMarkFilePrint(islocal)$/;"	f
NetrwMarkFileRegexp	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileRegexp(islocal)$/;"	f
NetrwMarkFileSource	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileSource(islocal)$/;"	f
NetrwMarkFileTag	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileTag(islocal)$/;"	f
NetrwMarkFileTgt	.\autoload\netrw.vim	/^fun! s:NetrwMarkFileTgt(islocal)$/;"	f
NetrwMarkHideSfx	.\autoload\netrw.vim	/^fun! s:NetrwMarkHideSfx(islocal)$/;"	f
NetrwMenu	.\autoload\netrw.vim	/^fun! s:NetrwMenu(domenu)$/;"	f
NetrwMethod	.\autoload\netrw.vim	/^fun! s:NetrwMethod(choice)$/;"	f
NetrwObtain	.\autoload\netrw.vim	/^fun! s:NetrwObtain(islocal)$/;"	f
NetrwOpenFile	.\autoload\netrw.vim	/^fun! s:NetrwOpenFile(islocal)$/;"	f
NetrwOptionRestore	.\autoload\netrw.vim	/^fun! s:NetrwOptionRestore(vt)$/;"	f
NetrwOptionSave	.\autoload\netrw.vim	/^fun! s:NetrwOptionSave(vt)$/;"	f
NetrwPrevWinOpen	.\autoload\netrw.vim	/^fun! s:NetrwPrevWinOpen(islocal)$/;"	f
NetrwPreview	.\autoload\netrw.vim	/^fun! s:NetrwPreview(path) range$/;"	f
NetrwRefresh	.\autoload\netrw.vim	/^fun! s:NetrwRefresh(islocal,dirname)$/;"	f
NetrwRefreshDir	.\autoload\netrw.vim	/^fun! s:NetrwRefreshDir(islocal,dirname)$/;"	f
NetrwRemoteFtpCmd	.\autoload\netrw.vim	/^fun! s:NetrwRemoteFtpCmd(path,listcmd)$/;"	f
NetrwRemoteListing	.\autoload\netrw.vim	/^fun! s:NetrwRemoteListing()$/;"	f
NetrwRemoteRename	.\autoload\netrw.vim	/^fun! s:NetrwRemoteRename(usrhost,path) range$/;"	f
NetrwRemoteRm	.\autoload\netrw.vim	/^fun! s:NetrwRemoteRm(usrhost,path) range$/;"	f
NetrwRemoteRmFile	.\autoload\netrw.vim	/^fun! s:NetrwRemoteRmFile(path,rmfile,all)$/;"	f
NetrwRestoreWordPosn	.\autoload\netrw.vim	/^fun! s:NetrwRestoreWordPosn()$/;"	f
NetrwRexplore	.\autoload\netrw.vim	/^fun! s:NetrwRexplore(islocal,dirname)$/;"	f
NetrwSafeOptions	.\autoload\netrw.vim	/^fun! s:NetrwSafeOptions()$/;"	f
NetrwSaveWordPosn	.\autoload\netrw.vim	/^fun! s:NetrwSaveWordPosn()$/;"	f
NetrwSetSort	.\autoload\netrw.vim	/^fun! s:NetrwSetSort()$/;"	f
NetrwSettingHelp	.\autoload\netrwSettings.vim	/^fun! NetrwSettingHelp()$/;"	f
NetrwSettings	.\plugin\netrwPlugin.vim	/^com! -nargs=0	NetrwSettings	call netrwSettings#NetrwSettings()$/;"	c
NetrwSortStyle	.\autoload\netrw.vim	/^fun! s:NetrwSortStyle(islocal)$/;"	f
NetrwSplit	.\autoload\netrw.vim	/^fun! s:NetrwSplit(mode)$/;"	f
NetrwStatusLine	.\autoload\netrw.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwStatusLine	.\plugin\netrwPlugin.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwTreeDir	.\autoload\netrw.vim	/^fun! s:NetrwTreeDir()$/;"	f
NetrwTreeDisplay	.\autoload\netrw.vim	/^fun! s:NetrwTreeDisplay(dir,depth)$/;"	f
NetrwTreeListing	.\autoload\netrw.vim	/^fun! s:NetrwTreeListing(dirname)$/;"	f
NetrwUnMarkFile	.\autoload\netrw.vim	/^fun! s:NetrwUnMarkFile(islocal)$/;"	f
NetrwUnmarkAll	.\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll()$/;"	f
NetrwUnmarkAll2	.\autoload\netrw.vim	/^fun! s:NetrwUnmarkAll2()$/;"	f
NetrwUnmarkList	.\autoload\netrw.vim	/^fun! s:NetrwUnmarkList(curbufnr,curdir)$/;"	f
NetrwUpload	.\autoload\netrw.vim	/^fun! s:NetrwUpload(fname,tgt,...)$/;"	f
NetrwWideListing	.\autoload\netrw.vim	/^fun! s:NetrwWideListing()$/;"	f
Network	.\plugin\netrwPlugin.vim	/^augroup Network$/;"	a
NewChangelogEntry	.\ftplugin\changelog.vim	/^    command! -nargs=0 NewChangelogEntry call s:new_changelog_entry()$/;"	c
NewVersion	.\ftplugin\debchangelog.vim	/^function NewVersion()$/;"	f
Nexplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Nexplore	call netrw#Explore(-1,0,0,<q-args>)$/;"	c
NextPage	.\macros\less.vim	/^fun! s:NextPage()$/;"	f
Nextitem	.\autoload\ccomplete.vim	/^function! s:Nextitem(lead, items, depth, all)$/;"	f
NoMatchParen	.\plugin\matchparen.vim	/^command! NoMatchParen windo 3match none | unlet! g:loaded_matchparen |$/;"	c
Nosynonly	.\synmenu.vim	/^fun! s:Nosynonly()$/;"	f
Nread	.\plugin\netrwPlugin.vim	/^com! -count=1 -nargs=*	Nread		call netrw#NetrwSavePosn()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
Nsource	.\plugin\netrwPlugin.vim	/^com! -nargs=*	        Nsource		call netrw#NetrwSavePosn()<bar>call netrw#NetSource(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
Nwrite	.\plugin\netrwPlugin.vim	/^com! -range=% -nargs=*	Nwrite		call netrw#NetrwSavePosn()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
OCaml_switch	.\ftplugin\ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	.\ftplugin\ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
Ocaml_get_type	.\ftplugin\ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	.\ftplugin\ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	.\ftplugin\ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
OmniSyntaxList	.\autoload\syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f
OptionG	.\optwin.vim	/^fun! <SID>OptionG(name, val)$/;"	f
OptionL	.\optwin.vim	/^fun! <SID>OptionL(name)$/;"	f
PTvalue	.\optwin.vim	/^fun! <SID>PTvalue()$/;"	f
PackageName	.\tools\pltags.pl	/^sub PackageName($)$/;"	s
ParmSub.If	.\macros\shellmenu.vim	/^imenu ParmSub.If parm not set print word and exit ${:?}hhi$/;"	m
ParmSub.Set	.\macros\shellmenu.vim	/^imenu ParmSub.Set parm to word if not set ${:=}hhi$/;"	m
ParmSub.Substitute	.\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm not set ${:-}hhi$/;"	m
ParmSub.Substitute	.\macros\shellmenu.vim	/^imenu ParmSub.Substitute word if parm set else nothing ${:+}hhi$/;"	m
ParseDataToProps	.\tools\unicode.vim	/^func! ParseDataToProps()$/;"	f
ParseFoldProps	.\tools\unicode.vim	/^func! ParseFoldProps()$/;"	f
ParseRpmVars	.\ftplugin\spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
ParseSkip	.\macros\matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	.\autoload\ccomplete.vim	/^function! s:ParseTagline(line)$/;"	f
ParseWidthProps	.\tools\unicode.vim	/^func! ParseWidthProps()$/;"	f
ParseWords	.\macros\matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Peekstack	.\autoload\xmlcomplete.vim	/^function! s:Peekstack(sname)$/;"	f
PerformListing	.\autoload\netrw.vim	/^fun! s:PerformListing(islocal)$/;"	f
Pexplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang			Pexplore	call netrw#Explore(-2,0,0,<q-args>)$/;"	c
Pick	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pop	.\autoload\xmlcomplete.vim	/^function! s:Pop(sname)$/;"	f
PopPage	.\ftplugin\man.vim	/^func <SID>PopPage()$/;"	f
PostscrIndentGet	.\indent\postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
PreGetPage	.\ftplugin\man.vim	/^func <SID>PreGetPage(cnt)$/;"	f
PrevNonBlankNonString	.\indent\ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
ProgressBar	.\syntax\2html.vim	/^  func! s:ProgressBar(title, max_value, winnr)$/;"	f
ProtoCheck	.\filetype.vim	/^func! s:ProtoCheck(default)$/;"	f
Push	.\autoload\xmlcomplete.vim	/^function! s:Push(el, sname)$/;"	f
Python_jump	.\ftplugin\python.vim	/^fun! <SID>Python_jump(motion) range$/;"	f
Q	.\evim.vim	/^map Q gq$/;"	m
Q	.\vimrc_example.vim	/^map Q gq$/;"	m
R	.\macros\less.vim	/^noremap <script> R <C-L><SID>L$/;"	m
Range	.\tools\unicode.vim	/^func! Range(ranges, start, end, step, add)$/;"	f
Reason	.\tools\ccfilter.c	/^char	       Reason[LINELENGTH];$/;"	v
RecordInFile	.\autoload\vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	.\autoload\vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
Ref	.\macros\matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Release	.\tools\shtags.pl	/^Release:	$id[2]$/;"	l
RemotePathAnalysis	.\autoload\netrw.vim	/^fun! s:RemotePathAnalysis(dirname)$/;"	f
RemoteSystem	.\autoload\netrw.vim	/^fun! s:RemoteSystem(cmd)$/;"	f
ResetPhpOptions	.\indent\php.vim	/^function! ResetPhpOptions()$/;"	f
Resolve	.\macros\matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreBufVars	.\autoload\netrw.vim	/^fun! s:RestoreBufVars()$/;"	f
RestoreCursorline	.\autoload\netrw.vim	/^fun! s:RestoreCursorline()$/;"	f
RestoreKeywords	.\autoload\xmlcomplete.vim	/^function! s:RestoreKeywords()$/;"	f
RestoreShiftwidth	.\ftplugin\cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
RestoreWinVars	.\autoload\netrw.vim	/^fun! s:RestoreWinVars()$/;"	f
Reword	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
RmVimball	.\plugin\vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball				call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
Rmdir	.\autoload\tar.vim	/^fun! s:Rmdir(fname)$/;"	f
Rmdir	.\autoload\zip.vim	/^fun! s:Rmdir(fname)$/;"	f
Row	.\tools\ccfilter.c	/^unsigned long  Row;$/;"	v
RplGetFreeIndent	.\indent\rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	.\indent\rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RubyBalloonexpr	.\ftplugin\ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	.\ftplugin\ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
SEND_MSEC_POLL	.\tools\xcmdsrv_client.c	206;"	d	file:
SQL	.\filetype.vim	/^func! s:SQL()$/;"	f
SQLCAddAlias	.\autoload\sqlcomplete.vim	/^function! s:SQLCAddAlias(table_name, table_alias, cols)$/;"	f
SQLCCheck4dbext	.\autoload\sqlcomplete.vim	/^function! s:SQLCCheck4dbext()$/;"	f
SQLCErrorMsg	.\autoload\sqlcomplete.vim	/^function! s:SQLCErrorMsg(msg)$/;"	f
SQLCGetColumns	.\autoload\sqlcomplete.vim	/^function! s:SQLCGetColumns(table_name, list_type)$/;"	f
SQLCGetObjectOwner	.\autoload\sqlcomplete.vim	/^function! s:SQLCGetObjectOwner(object) $/;"	f
SQLCGetSyntaxList	.\autoload\sqlcomplete.vim	/^function! s:SQLCGetSyntaxList(syn_group)$/;"	f
SQLCWarningMsg	.\autoload\sqlcomplete.vim	/^function! s:SQLCWarningMsg(msg)$/;"	f
SQLGetType	.\ftplugin\sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	.\ftplugin\sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	.\ftplugin\sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	.\ftplugin\sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	.\ftplugin\sql.vim	/^    function SQL_SetType(name)$/;"	f
STATIC_SPACE	.\tools\xcmdsrv_client.c	109;"	d	file:
Safe_indent	.\indent\awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
SaveBufVars	.\autoload\netrw.vim	/^fun! s:SaveBufVars()$/;"	f
SaveVimSesn	.\menu.vim	/^fun! s:SaveVimSesn()$/;"	f
SaveWinVars	.\autoload\netrw.vim	/^fun! s:SaveWinVars()$/;"	f
SearchMembers	.\autoload\ccomplete.vim	/^function! s:SearchMembers(matches, items, all)$/;"	f
SearchP	.\menu.vim	/^fun! s:SearchP()$/;"	f
Seems_continuing	.\indent\awk.vim	/^function! s:Seems_continuing( line )$/;"	f
SelectAll	.\menu.vim	/^func! <SID>SelectAll()$/;"	f
SendEventProc	.\tools\xcmdsrv_client.c	/^SendEventProc(dpy, eventPtr, expected, code)$/;"	f	file:
SendInit	.\tools\xcmdsrv_client.c	/^SendInit(dpy)$/;"	f	file:
Set.All	.\macros\shellmenu.vim	/^imenu Set.All keyword arguments are placed in the environment set -k$/;"	m
Set.Disable	.\macros\shellmenu.vim	/^imenu Set.Disable file name generation set -f$/;"	m
Set.Exit	.\macros\shellmenu.vim	/^imenu Set.Exit after reading and executing one command set -t$/;"	m
Set.Print	.\macros\shellmenu.vim	/^imenu Set.Print commands and their arguments as they are executed set -x$/;"	m
Set.Print	.\macros\shellmenu.vim	/^imenu Set.Print shell input lines as they are read set -v$/;"	m
Set.Read	.\macros\shellmenu.vim	/^imenu Set.Read commands but do not execute them set -n$/;"	m
Set.Treat	.\macros\shellmenu.vim	/^imenu Set.Treat unset variables as an error when substituting set -u$/;"	m
Set.exit	.\macros\shellmenu.vim	/^imenu Set.exit when command returns non-zero exit code set -e$/;"	m
Set.mark	.\macros\shellmenu.vim	/^imenu Set.mark modified or modified variables set -a$/;"	m
Set.remember	.\macros\shellmenu.vim	/^imenu Set.remember function commands set -h$/;"	m
Set.set	.\macros\shellmenu.vim	/^imenu Set.set set$/;"	m
Set.unset	.\macros\shellmenu.vim	/^imenu Set.unset unset$/;"	m
SetBufWinVars	.\autoload\netrw.vim	/^fun! s:SetBufWinVars()$/;"	f
SetFileTypeSH	.\filetype.vim	/^func! SetFileTypeSH(name)$/;"	f
SetFileTypeShell	.\filetype.vim	/^func! SetFileTypeShell(name)$/;"	f
SetIsk	.\syntax\bst.vim	/^    command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	.\syntax\bst.vim	/^    command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetIsk	.\syntax\lilo.vim	/^  command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	.\syntax\lilo.vim	/^  command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetKeywords	.\autoload\xmlcomplete.vim	/^function! s:SetKeywords()$/;"	f
SetRexDir	.\autoload\netrw.vim	/^fun! s:SetRexDir(islocal,dirname)$/;"	f
SetSyn	.\synmenu.vim	/^fun! SetSyn(name)$/;"	f
Setsynonly	.\synmenu.vim	/^fun! s:Setsynonly()$/;"	f
SetupNetrwStatusLine	.\autoload\netrw.vim	/^fun! s:SetupNetrwStatusLine(statline)$/;"	f
SetupRemoteReplies	.\plugin\rrhelper.vim	/^function SetupRemoteReplies()$/;"	f
Severity	.\tools\ccfilter.c	/^char	       Severity;$/;"	v
Sexplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Sexplore	call netrw#Explore(<count>,1,0+<bang>0,<q-args>)$/;"	c
ShowUsage	.\tools\ccfilter.c	/^int ShowUsage( char *szError )$/;"	f
SkipJavaBlanksAndComments	.\indent\java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
SkipPattern	.\indent\sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
Skippmatch	.\indent\php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch2	.\indent\php.vim	/^function! Skippmatch2()$/;"	f
SpShVars.All	.\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (quoted spaces) ${*}$/;"	m
SpShVars.All	.\macros\shellmenu.vim	/^imenu SpShVars.All positional parameters (unquoted spaces) ${@}$/;"	m
SpShVars.Flags	.\macros\shellmenu.vim	/^imenu SpShVars.Flags set ${-}$/;"	m
SpShVars.Number	.\macros\shellmenu.vim	/^imenu SpShVars.Number of positional parameters ${#}$/;"	m
SpShVars.Process	.\macros\shellmenu.vim	/^imenu SpShVars.Process number of last background command ${!}$/;"	m
SpShVars.Process	.\macros\shellmenu.vim	/^imenu SpShVars.Process number of this shell ${$}$/;"	m
SpShVars.Return	.\macros\shellmenu.vim	/^imenu SpShVars.Return code of last command ${?}$/;"	m
Space	.\optwin.vim	/^fun! <SID>Space()$/;"	f
SpecChangelog	.\ftplugin\spec.vim	/^	function s:SpecChangelog(format)$/;"	f
SpellDel	.\menu.vim	/^  func! <SID>SpellDel()$/;"	f
SpellLang	.\menu.vim	/^  func! s:SpellLang()$/;"	f
SpellPopup	.\menu.vim	/^  func! <SID>SpellPopup()$/;"	f
SpellPopupMenu	.\menu.vim	/^  augroup SpellPopupMenu$/;"	a
SpellReplace	.\menu.vim	/^  func! <SID>SpellReplace(n)$/;"	f
Squash	.\ftplugin\gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StarSetf	.\filetype.vim	/^func! s:StarSetf(ft)$/;"	f
Starts_with_word	.\indent\awk.vim	/^function! s:Starts_with_word( line )$/;"	f
StatementIndent	.\indent\ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
Stmts.break	break	.\macros\shellmenu.vim	/^imenu Stmts.break	break $/;"	m
Stmts.case	case	.\macros\shellmenu.vim	/^imenu Stmts.case	case  in$/;"	m
Stmts.continue	continue	.\macros\shellmenu.vim	/^imenu Stmts.continue	continue $/;"	m
Stmts.elif	elif	.\macros\shellmenu.vim	/^imenu Stmts.elif	elif   $/;"	m
Stmts.exit	exit	.\macros\shellmenu.vim	/^imenu Stmts.exit	exit $/;"	m
Stmts.for	for	.\macros\shellmenu.vim	/^imenu Stmts.for	for  in $/;"	m
Stmts.function	()	.\macros\shellmenu.vim	/^imenu Stmts.function	() {$/;"	m
Stmts.if	if	.\macros\shellmenu.vim	/^imenu Stmts.if	if   $/;"	m
Stmts.if-else	if	.\macros\shellmenu.vim	/^imenu Stmts.if-else	if   $/;"	m
Stmts.return	return	.\macros\shellmenu.vim	/^imenu Stmts.return	return $/;"	m
Stmts.return-false	return	.\macros\shellmenu.vim	/^imenu Stmts.return-false	return 1$/;"	m
Stmts.return-true	return	.\macros\shellmenu.vim	/^imenu Stmts.return-true	return 0$/;"	m
Stmts.shift	shift	.\macros\shellmenu.vim	/^imenu Stmts.shift	shift $/;"	m
Stmts.trap	trap	.\macros\shellmenu.vim	/^imenu Stmts.trap	trap $/;"	m
Stmts.while	while	.\macros\shellmenu.vim	/^imenu Stmts.while	while   $/;"	m
Strlen	.\autoload\netrw.vim	/^fun! s:Strlen(x)$/;"	f
StructMembers	.\autoload\ccomplete.vim	/^function! s:StructMembers(typename, items, all)$/;"	f
SubName	.\tools\pltags.pl	/^sub SubName($)$/;"	s
SuperSub	.\syntax\tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
Syn	.\makemenu.vim	/^fun! <SID>Syn(arg)$/;"	f
SynColor	.\syntax\doxygen.vim	/^    command -nargs=+ SynColor hi def <args>$/;"	c
SynColor	.\syntax\syncolor.vim	/^    command -nargs=* SynColor hi <args>$/;"	c
SynColor	.\syntax\syncolor.vim	/^    command -nargs=* SynColor hi def <args>$/;"	c
SynColor	.\syntax\syncolor.vim	/^  command -nargs=* SynColor hi <args>$/;"	c
SynDisplay	.\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynDisplay	.\syntax\inform.vim	/^  command -nargs=+ SynDisplay syntax <args>$/;"	c
SynLink	.\syntax\doxygen.vim	/^    command -nargs=+ SynLink hi def link <args>$/;"	c
SynLink	.\syntax\syncolor.vim	/^    command -nargs=* SynLink hi def link <args>$/;"	c
SynLink	.\syntax\syncolor.vim	/^    command -nargs=* SynLink hi! link <args>$/;"	c
SynLink	.\syntax\syncolor.vim	/^  command -nargs=* SynLink hi link <args>$/;"	c
SynMenu	.\makemenu.vim	/^command! -nargs=* SynMenu call <SID>Syn(<q-args>)$/;"	c
SynOnOff	.\menu.vim	/^    fun s:SynOnOff()$/;"	f
SynSet	.\syntax\synload.vim	/^fun! s:SynSet()$/;"	f
SyntaxCSyntaxGroupItems	.\autoload\syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f
TOhtml	.\plugin\tohtml.vim	/^  command -range=% TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)$/;"	c
Tab	.\ftplugin\cobol.vim	/^function! s:Tab()$/;"	f
Tag	.\ftplugin\pdf.vim	/^function! s:Tag()$/;"	f
Tag2item	.\autoload\ccomplete.vim	/^function! s:Tag2item(val)$/;"	f
TagFiles	.\menu.vim	/^fun! s:TagFiles()$/;"	f
Tagcmd2extra	.\autoload\ccomplete.vim	/^function! s:Tagcmd2extra(cmd, name, fname)$/;"	f
Tagline2item	.\autoload\ccomplete.vim	/^function! s:Tagline2item(val, brackets)$/;"	f
TarBrowseSelect	.\autoload\tar.vim	/^fun! s:TarBrowseSelect()$/;"	f
TcshGetIndent	.\indent\tcsh.vim	/^function TcshGetIndent()$/;"	f
Test.String	.\macros\shellmenu.vim	/^imenu Test.String is empty [ x = "x$" ]hhi$/;"	m
Test.String	.\macros\shellmenu.vim	/^imenu Test.String is not empty [ x != "x$" ]hhi$/;"	m
Test.Strings	.\macros\shellmenu.vim	/^imenu Test.Strings is equal [ "" = "" ]hhhhhhhi$/;"	m
Test.Strings	.\macros\shellmenu.vim	/^imenu Test.Strings is not equal [ "" != "" ]hhhhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is equal [  -eq  ]hhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is greater equal [  -ge  ]hhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is greater than [  -gt  ]hhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is less equal [  -le  ]hhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is less than [  -lt  ]hhhhhhi$/;"	m
Test.Values	.\macros\shellmenu.vim	/^imenu Test.Values is not equal [  -ne  ]hhhhhhi$/;"	m
Test.existence	[	.\macros\shellmenu.vim	/^imenu Test.existence	[ -e  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - directory	[ -d  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - executable	[ -x  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - file		[ -f  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - file (not empty)	[ -s  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - readable	[ -r  ]hi$/;"	m
Test.existence	.\macros\shellmenu.vim	/^imenu Test.existence - writable	[ -w  ]hi$/;"	m
TestFiletypeFuncs	.\filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TexNewMathZone	.\syntax\tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
Texplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar       -count=0 -complete=dir	Texplore	call netrw#Explore(<count>,0,6        ,<q-args>)$/;"	c
TextWidth	.\menu.vim	/^fun! s:TextWidth()$/;"	f
ToggleGuiOption	.\menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
ToolBar.Paste		<C-R>+	.\menu.vim	/^  cnoremenu	 ToolBar.Paste		<C-R>+$/;"	m
ToolBar.Print		:hardcopy<CR>	.\menu.vim	/^    vnoremenu ToolBar.Print		:hardcopy<CR>$/;"	m
ToolBar.Print		:w	.\menu.vim	/^    vnoremenu ToolBar.Print		:w !lpr<CR>$/;"	m
ToolBar.Replace		y:promptrepl	.\menu.vim	/^    vnoremenu ToolBar.Replace		y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
TreeListMove	.\autoload\netrw.vim	/^fun! s:TreeListMove(dir)$/;"	f
USAGE	.\tools\ccfilter.c	/^const char USAGE[] =$/;"	v
USAGE	.\tools\shtags.pl	/^USAGE: $program [-kvwVx] [-t <file>] <files>$/;"	l
UWAGA	.\tutor\tutor.pl	/^	 UWAGA:$/;"	l
UWAGA	.\tutor\tutor.pl	/^  UWAGA: Litera  d  pojawi siê na dole ekranu. Vim czeka na wpisanie  w .$/;"	l
UWAGA	.\tutor\tutor.pl	/^  UWAGA: Przeczytaj ca³± lekcjê zanim wykonasz jakie¶ polecenia!!!$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA:  Mno¿nik pomiêdzy operatorem  d  i ruchem dzia³a podobnie do ruchu bez$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA:  Mo¿esz u¿ywaæ <BS> aby poprawiaæ b³êdy w czasie pisania.$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: :q!<ENTER> porzuca wszelkie zmiany jakie zrobi³e¶. W nastêpnych$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ wczytaæ wyj¶cie zewnêtrznego polecenia. Na przyk³ad$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Mo¿esz te¿ zobaczyæ pozycjê kursora w prawym, dolnym rogu ekranu.$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Pamiêtaj, by uczyæ siê æwicz±c, a nie pamiêciowo.$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Po wykonaniu kroku 2. zobaczysz tekst z Lekcji 5.3. Potem przejd¼$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Tryb Replace jest jak tryb Insert, ale ka¿dy znak usuwa istniej±cy$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Ucz siê przez æwiczenie, nie wkuwanie.$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Uzupe³nianie dzia³a dla wielu poleceñ. Spróbuj wcisn±æ CTRL-D i <TAB>.$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Wci¶niêcie  v  zaczyna tryb Wizualny. Mo¿esz poruszaæ kursorem, by$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Wci¶niêcie <ESC> przeniesie Ciê z powrotem do trybu Normal$/;"	l
UWAGA	.\tutor\tutor.pl	/^UWAGA: Wpisanie tylko ruchu w trybie Normal bez operatora przeniesie kursor$/;"	l
Unfinalise	.\ftplugin\debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	.\ftplugin\debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Update	.\optwin.vim	/^fun! <SID>Update(lnum, line, local, thiswin)$/;"	f
UpdateBuffersMenu	.\autoload\netrw.vim	/^fun! s:UpdateBuffersMenu()$/;"	f
Urgency	.\ftplugin\debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	.\tools\efm_perl.pl	/^Usage:$/;"	l
UseBufWinVars	.\autoload\netrw.vim	/^fun! s:UseBufWinVars()$/;"	f
UseVimball	.\plugin\vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball			call vimball#Vimball(1,<f-args>)$/;"	c
Uwaga	.\tutor\tutor.pl	/^Uwaga:  'b³ond' to nie jest metoda, by przeliterowaæ b³±d; 'b³ond' to b³±d.$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga:  Kiedy szukanie osi±gnie koniec pliku, bêdzie kontynuowane od pocz±tku$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga:  W ten sposób mo¿na wykonaæ wszystkie polecenia pow³oki.$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga:  Wszystkie polecenia  :  musz± byæ zakoñczone <ENTER>.$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga:  a ,  i  oraz  A  prowadz± do trybu Insert, jedyn± ró¿nic± jest miejsce,$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Aby ignorowaæ wielko¶æ liter dla jednego wyszukiwania: \/ignore\\c<ENTER>$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Aby usun±æ pod¶wietlanie dopasowañ, wpisz:   :nohlsearch$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Je¶li nie jeste¶ pewien czego¶ co wpisa³e¶, wci¶nij <ESC>, by wróciæ do$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Klawisze kursora tak¿e powinny dzia³aæ, ale u¿ywaj±c  hjkl  bêdziesz$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Ta funkcja jest bardzo u¿yteczna w debuggowaniu programu$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: Zauwa¿, ¿e gdyby¶ teraz wyszed³ z Vima, a nastêpnie wszed³ ponownie$/;"	l
Uwaga	.\tutor\tutor.pl	/^Uwaga: mo¿esz u¿yæ  y  jako operatora;  yw  kopiuje jeden wyraz.$/;"	l
VERSION	.\tools\efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VarNames	.\tools\pltags.pl	/^sub VarNames($)$/;"	s
VbGetIndent	.\indent\vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	.\ftplugin\vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
Vexplore	.\plugin\netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Vexplore	call netrw#Explore(<count>,1,4+<bang>0,<q-args>)$/;"	c
VimEnter	.\plugin\netrwPlugin.vim	/^fun! s:VimEnter(dirname)$/;"	f
VimballList	.\plugin\vimballPlugin.vim	/^com! -na=0                VimballList			call vimball#Vimball(0)$/;"	c
Vimuntar	.\plugin\tarPlugin.vim	/^com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)$/;"	c
WarnIfNotUnfinalised	.\ftplugin\debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
Wholematch	.\macros\matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Wydawca	.\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly) - wg 6. ang. wydania$/;"	l
Wydawca	.\tutor\tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly).$/;"	l
Wydawca	.\tutor\tutor.pl	/^	Wydawca: New Riders$/;"	l
Wydawca	.\tutor\tutor.pl	/^	Wydawca: O'Reilly & Associates Inc.$/;"	l
XMLent	.\ftplugin\xml.vim	/^command! -nargs=? XMLent call xmlcomplete#CreateEntConnection(<f-args>)$/;"	c
XMLns	.\ftplugin\xml.vim	/^command! -nargs=+ XMLns call xmlcomplete#CreateConnection(<f-args>)$/;"	c
Xf86confdeclopt	.\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86confValue,xf86confComment skipwhite$/;"	c
Xf86confdeclopt	.\syntax\xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
XmlIndentGet	.\indent\xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f
XmlIndentSum	.\indent\xml.vim	/^fun! <SID>XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentSynCheck	.\indent\xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f
XmlIndentWithPattern	.\indent\xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f
XxdBack	.\menu.vim	/^func! s:XxdBack()$/;"	f
XxdConv	.\menu.vim	/^func! s:XxdConv()$/;"	f
XxdFind	.\menu.vim	/^func! s:XxdFind()$/;"	f
ZipBrowseSelect	.\autoload\zip.vim	/^fun! s:ZipBrowseSelect()$/;"	f
["	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
[#	.\ftplugin\hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[%	.\macros\matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	.\macros\matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	.\macros\matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[M	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	.\ftplugin\abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\s*\\.','bW')<CR>$/;"	m
[[	.\ftplugin\hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	.\ftplugin\python.vim	/^nnoremap <silent> <buffer> [[ :call <SID>Python_jump('?^\\(class\\\\|def\\)')<cr>$/;"	m
[[	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[[	.\ftplugin\sql.vim	/^nmap <buffer> <silent> [[ :call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	.\ftplugin\sql.vim	/^vmap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	.\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[[	.\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[[	.\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> [[ m':call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[]	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	.\ftplugin\hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	.\ftplugin\sql.vim	/^nmap <buffer> <silent> [] :call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	.\ftplugin\sql.vim	/^vmap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	.\ftplugin\vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[]	.\ftplugin\vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[]	.\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> [] m':call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[m	.\ftplugin\python.vim	/^nnoremap <silent> <buffer> [m :call <SID>Python_jump('?^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
[m	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]"	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]#	.\ftplugin\hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]%	.\macros\matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	.\macros\matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	.\macros\matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]M	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	.\ftplugin\hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
][	.\ftplugin\sql.vim	/^nmap <buffer> <silent> ][ :call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	.\ftplugin\sql.vim	/^vmap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	.\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
][	.\ftplugin\vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
][	.\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> ][ m':call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
][	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
]]	.\ftplugin\abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	.\ftplugin\cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\.','W')<CR>$/;"	m
]]	.\ftplugin\hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	.\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]] :call <SID>Python_jump('\/^\\(class\\\\|def\\)')<cr>$/;"	m
]]	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	.\ftplugin\sql.vim	/^nmap <buffer> <silent> ]] :call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	.\ftplugin\sql.vim	/^vmap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	.\ftplugin\vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
]]	.\ftplugin\vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
]]	.\ftplugin\vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	.\ftplugin\vim.vim	/^nnoremap <silent><buffer> ]] m':call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	.\ftplugin\vim.vim	/^vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]m	.\ftplugin\python.vim	/^nnoremap <silent> <buffer> ]m :call <SID>Python_jump('\/^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
]m	.\ftplugin\ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
__ARGS	.\tools\xcmdsrv_client.c	32;"	d	file:
__CCFILTER_C__	.\tools\ccfilter.c	14;"	d	file:
_j	.\macros\justify.vim	/^nmap _j :%call Justify('tw',4)<CR>$/;"	m
_j	.\macros\justify.vim	/^vmap _j :call Justify('tw',4)<CR>$/;"	m
a%	.\macros\matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
ada#Completion	.\autoload\ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	.\autoload\ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	.\autoload\ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	.\autoload\ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	.\autoload\ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	.\autoload\ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	.\autoload\ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	.\autoload\ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	.\autoload\ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	.\autoload\ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	.\autoload\ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	.\autoload\ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	.\autoload\ada.vim	/^function ada#Word (...)$/;"	f
adacomplete#Complete	.\autoload\adacomplete.vim	/^function! adacomplete#Complete (findstart, base)$/;"	f
allsteps	.\ftplugin\cucumber.vim	/^function! s:allsteps()$/;"	f
at	.\syntax\sed.vim	/^let __at = char2nr("@")$/;"	v
b	.\macros\less.vim	/^noremap <script> b <C-B><SID>L$/;"	m
b:	.\syntax\liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:InPHPcode	.\indent\php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	.\indent\php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	.\indent\php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	.\indent\php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	.\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	.\indent\php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	.\indent\php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	.\indent\php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	.\indent\php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	.\indent\php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	.\indent\php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	.\indent\php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	.\indent\php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	.\indent\php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	.\indent\php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	.\indent\php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	.\indent\php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentphpescape	.\indent\php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	.\indent\php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	.\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	.\indent\php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:UserIsTypingComment	.\indent\php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:annotation_file_located	.\ftplugin\ocaml.vim	/^  let b:annotation_file_located = 0$/;"	v
b:autohotkey_syntax_sync_minlines	.\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = 50$/;"	v
b:autohotkey_syntax_sync_minlines	.\syntax\autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = g:autohotkey_syntax_sync_minlines$/;"	v
b:bdf_minlines	.\syntax\bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	.\syntax\bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:browsefilter	.\ftplugin\abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	.\ftplugin\ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	.\ftplugin\aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\c.vim	/^    let b:browsefilter = "C Source Files (*.c)\\t*.c\\n" .$/;"	v
b:browsefilter	.\ftplugin\c.vim	/^    let b:browsefilter = "C++ Source Files (*.cpp *.c++)\\t*.cpp;*.c++\\n" .$/;"	v
b:browsefilter	.\ftplugin\c.vim	/^    let b:browsefilter = "Ch Source Files (*.ch *.chf)\\t*.ch;*.chf\\n" .$/;"	v
b:browsefilter	.\ftplugin\cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	.\ftplugin\config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	.\ftplugin\cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	.\ftplugin\csh.vim	/^    let  b:browsefilter="csh Scripts (*.csh)\\t*.csh\\n" .$/;"	v
b:browsefilter	.\ftplugin\dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	.\ftplugin\dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	.\ftplugin\eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn)\\t*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn\\n" .$/;"	v
b:browsefilter	.\ftplugin\haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	.\ftplugin\ishd.vim	/^    let b:browsefilter = "InstallShield Files (*.rul)\\t*.rul\\n" .$/;"	v
b:browsefilter	.\ftplugin\java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	.\ftplugin\javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	v
b:browsefilter	.\ftplugin\jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	.\ftplugin\liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	.\ftplugin\liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	.\ftplugin\liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	.\ftplugin\msmessages.vim	/^  let b:browsefilter = "MS Message Files (*.mc)\\t*.mc\\n" .$/;"	v
b:browsefilter	.\ftplugin\occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	.\ftplugin\perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	.\ftplugin\perl6.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	.\ftplugin\php.vim	/^    let  b:browsefilter="PHP Files (*.php)\\t*.php\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	.\ftplugin\pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	.\ftplugin\python.vim	/^    let b:browsefilter = "Python Files (*.py)\\t*.py\\n" .$/;"	v
b:browsefilter	.\ftplugin\ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	.\ftplugin\sgml.vim	/^    let  b:browsefilter="SGML Files (*.sgml,*.sgm)\\t*.sgm*\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\sh.vim	/^    let  b:browsefilter="Bourne Shell Scripts (*.sh)\\t*.sh\\n" .$/;"	v
b:browsefilter	.\ftplugin\sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	.\ftplugin\svg.vim	/^    let  b:browsefilter="SVG Files (*.svg)\\t*.svg\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	.\ftplugin\tcsh.vim	/^    let  b:browsefilter="tcsh Scripts (*.tcsh)\\t*.tcsh\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	.\ftplugin\xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\xml.vim	/^    let  b:browsefilter="XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:browsefilter	.\ftplugin\xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	.\ftplugin\xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	.\syntax\lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	.\syntax\c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	.\syntax\c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	.\syntax\c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\syntax\calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	.\syntax\calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	.\syntax\calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\syntax\indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	.\syntax\indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	.\syntax\indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	.\syntax\lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	.\syntax\lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	.\syntax\lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	.\ftplugin\sql.vim	/^let b:comment_end = '\\\\(^\\\\s*'.b:comment_leader.'.*\\\\n\\\\)'.$/;"	v
b:comment_jump_over	.\ftplugin\sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	.\ftplugin\sql.vim	/^let b:comment_leader = '\\\\(--\\\\\\|\\\\\/\\\\\/\\\\\\|\\\\*\\\\\\|\\\\\/\\\\*\\\\\\|\\\\*\\\\\/\\\\)'$/;"	v
b:comment_skip_back	.\ftplugin\sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	.\ftplugin\sql.vim	/^let b:comment_start  = '^\\\\(\\\\s*'.b:comment_leader.'.*\\\\n\\\\)\\\\@<!'.$/;"	v
b:cucumber_root	.\ftplugin\cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_ftplugin	.\ftplugin\sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	.\indent\sqlanywhere.vim	/^let b:current_indent = "sqlanywhere"$/;"	v
b:current_syntax	.\syntax\a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	.\syntax\a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	.\syntax\aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	.\syntax\abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	.\syntax\abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	.\syntax\abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	.\syntax\abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	.\syntax\acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	.\syntax\ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	.\syntax\aflex.vim	/^let b:current_syntax = "aflex"$/;"	v
b:current_syntax	.\syntax\ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	.\syntax\alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	.\syntax\amiga.vim	/^let b:current_syntax = "amiga"$/;"	v
b:current_syntax	.\syntax\aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	.\syntax\ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	.\syntax\ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	.\syntax\antlr.vim	/^let b:current_syntax = "antlr"$/;"	v
b:current_syntax	.\syntax\apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	.\syntax\apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	.\syntax\arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	.\syntax\art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	.\syntax\asm.vim	/^let b:current_syntax = "asm"$/;"	v
b:current_syntax	.\syntax\asm68k.vim	/^let b:current_syntax = "asm68k"$/;"	v
b:current_syntax	.\syntax\asmh8300.vim	/^let b:current_syntax = "asmh8300"$/;"	v
b:current_syntax	.\syntax\asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	.\syntax\aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	.\syntax\aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	.\syntax\asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	.\syntax\asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	.\syntax\atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	.\syntax\autohotkey.vim	/^let b:current_syntax = "autohotkey"$/;"	v
b:current_syntax	.\syntax\automake.vim	/^let b:current_syntax = "automake"$/;"	v
b:current_syntax	.\syntax\ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	.\syntax\awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	.\syntax\ayacc.vim	/^let b:current_syntax = "ayacc"$/;"	v
b:current_syntax	.\syntax\b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	.\syntax\baan.vim	/^let b:current_syntax = "baan"$/;"	v
b:current_syntax	.\syntax\basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	.\syntax\bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	.\syntax\bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	.\syntax\bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	.\syntax\bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	.\syntax\blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	.\syntax\bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	.\syntax\btm.vim	/^let b:current_syntax = "btm"$/;"	v
b:current_syntax	.\syntax\bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	.\syntax\c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	.\syntax\cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	.\syntax\calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	.\syntax\catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	.\syntax\cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	.\syntax\cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	.\syntax\cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	.\syntax\cf.vim	/^let b:current_syntax = "cf"$/;"	v
b:current_syntax	.\syntax\cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	.\syntax\ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	.\syntax\chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	.\syntax\change.vim	/^let b:current_syntax = "change"$/;"	v
b:current_syntax	.\syntax\changelog.vim	/^let b:current_syntax = "changelog"$/;"	v
b:current_syntax	.\syntax\cheetah.vim	/^let b:current_syntax = "cheetah"$/;"	v
b:current_syntax	.\syntax\chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	.\syntax\chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	.\syntax\cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	.\syntax\clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	.\syntax\clipper.vim	/^let b:current_syntax = "clipper"$/;"	v
b:current_syntax	.\syntax\cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	.\syntax\cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	.\syntax\cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	.\syntax\conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	.\syntax\conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	.\syntax\config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	.\syntax\context.vim	/^let b:current_syntax = "context"$/;"	v
b:current_syntax	.\syntax\cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	.\syntax\crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	.\syntax\crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	.\syntax\cs.vim	/^let b:current_syntax = "cs"$/;"	v
b:current_syntax	.\syntax\csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	.\syntax\csh.vim	/^let b:current_syntax = "csh"$/;"	v
b:current_syntax	.\syntax\csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	.\syntax\css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	.\syntax\cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	.\syntax\cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	.\syntax\cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	.\syntax\cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	.\syntax\cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	.\syntax\cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	.\syntax\cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	.\syntax\cweb.vim	/^let b:current_syntax = "cweb"$/;"	v
b:current_syntax	.\syntax\cynlib.vim	/^let b:current_syntax = "cynlib"$/;"	v
b:current_syntax	.\syntax\cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	.\syntax\d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	.\syntax\datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	.\syntax\dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	.\syntax\dcl.vim	/^let b:current_syntax = "dcl"$/;"	v
b:current_syntax	.\syntax\debchangelog.vim	/^let b:current_syntax = "debchangelog"$/;"	v
b:current_syntax	.\syntax\debcontrol.vim	/^let b:current_syntax = "debcontrol"$/;"	v
b:current_syntax	.\syntax\debsources.vim	/^let b:current_syntax = "debsources"$/;"	v
b:current_syntax	.\syntax\def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	.\syntax\denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	.\syntax\desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	.\syntax\desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	.\syntax\dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	.\syntax\dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	.\syntax\diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	.\syntax\dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	.\syntax\diva.vim	/^let b:current_syntax = "diva"$/;"	v
b:current_syntax	.\syntax\django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	.\syntax\docbk.vim	/^let b:current_syntax = "docbk"$/;"	v
b:current_syntax	.\syntax\dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	.\syntax\dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	.\syntax\dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	.\syntax\doxygen.vim	/^    let b:current_syntax = "doxygen"$/;"	v
b:current_syntax	.\syntax\doxygen.vim	/^    let b:current_syntax = b:current_syntax.'.doxygen'$/;"	v
b:current_syntax	.\syntax\doxygen.vim	/^    let b:current_syntax=b:doxygen_syntax_save$/;"	v
b:current_syntax	.\syntax\dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	.\syntax\dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	.\syntax\dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	.\syntax\dtml.vim	/^let b:current_syntax = "dtml"$/;"	v
b:current_syntax	.\syntax\dtrace.vim	/^let b:current_syntax = "dtrace"$/;"	v
b:current_syntax	.\syntax\dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	.\syntax\dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	.\syntax\dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	.\syntax\ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	.\syntax\edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	.\syntax\eiffel.vim	/^let b:current_syntax = "eiffel"$/;"	v
b:current_syntax	.\syntax\elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	.\syntax\elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	.\syntax\elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	.\syntax\erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	.\syntax\eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	.\syntax\esmtprc.vim	/^let b:current_syntax="esmtprc"$/;"	v
b:current_syntax	.\syntax\esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	.\syntax\esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	.\syntax\eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	.\syntax\eviews.vim	/^let b:current_syntax="eviews"$/;"	v
b:current_syntax	.\syntax\exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	.\syntax\expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	.\syntax\exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	.\syntax\fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	.\syntax\fasm.vim	/^let b:current_syntax = "fasm"$/;"	v
b:current_syntax	.\syntax\fdcc.vim	/^let b:current_syntax = "fdcc"$/;"	v
b:current_syntax	.\syntax\fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	.\syntax\fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	.\syntax\flexwiki.vim	/^let b:current_syntax="FlexWiki"$/;"	v
b:current_syntax	.\syntax\focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	.\syntax\form.vim	/^  let b:current_syntax = "form"$/;"	v
b:current_syntax	.\syntax\forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	.\syntax\fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	.\syntax\foxpro.vim	/^let b:current_syntax = "foxpro"$/;"	v
b:current_syntax	.\syntax\framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	.\syntax\freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	.\syntax\fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	.\syntax\fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	.\syntax\fvwm2m4.vim	/^let b:current_syntax = 'fvwm2m4'$/;"	v
b:current_syntax	.\syntax\gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	.\syntax\gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	.\syntax\gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	.\syntax\git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	.\syntax\gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	.\syntax\gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	.\syntax\gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	.\syntax\gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	.\syntax\gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	.\syntax\gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	.\syntax\gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	.\syntax\gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	.\syntax\grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	.\syntax\gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	.\syntax\groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	.\syntax\group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	.\syntax\grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	.\syntax\gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	.\syntax\gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	.\syntax\haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	.\syntax\hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	.\syntax\haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	.\syntax\haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	.\syntax\hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	.\syntax\hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	.\syntax\help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	.\syntax\hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	.\syntax\hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	.\syntax\hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	.\syntax\hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	.\syntax\html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	.\syntax\htmlcheetah.vim	/^let b:current_syntax = "htmlcheetah"$/;"	v
b:current_syntax	.\syntax\htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	.\syntax\htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	.\syntax\htmlos.vim	/^let b:current_syntax = "htmlos"$/;"	v
b:current_syntax	.\syntax\ia64.vim	/^let b:current_syntax = "ia64"$/;"	v
b:current_syntax	.\syntax\ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	.\syntax\icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	.\syntax\icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	.\syntax\idl.vim	/^let b:current_syntax = "idl"$/;"	v
b:current_syntax	.\syntax\idlang.vim	/^let b:current_syntax = "idlang"$/;"	v
b:current_syntax	.\syntax\indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	.\syntax\inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	.\syntax\initex.vim	/^let b:current_syntax = "initex"$/;"	v
b:current_syntax	.\syntax\initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	.\syntax\inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	.\syntax\ishd.vim	/^let b:current_syntax = "ishd"$/;"	v
b:current_syntax	.\syntax\iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	.\syntax\ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	.\syntax\jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	.\syntax\jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	.\syntax\jargon.vim	/^let b:current_syntax = "jargon"$/;"	v
b:current_syntax	.\syntax\java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	.\syntax\javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	.\syntax\javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	.\syntax\jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	.\syntax\jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	.\syntax\jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	.\syntax\jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	.\syntax\kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	.\syntax\kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	.\syntax\kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	.\syntax\kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	.\syntax\lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	.\syntax\latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	.\syntax\ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	.\syntax\ldapconf.vim	/^let b:current_syntax = "ldapconf"$/;"	v
b:current_syntax	.\syntax\ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	.\syntax\lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	.\syntax\lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	.\syntax\lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	.\syntax\libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	.\syntax\lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	.\syntax\lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	.\syntax\limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	.\syntax\liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	.\syntax\lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	.\syntax\lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	.\syntax\litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	.\syntax\loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	.\syntax\logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	.\syntax\logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	.\syntax\lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	.\syntax\lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	.\syntax\lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	.\syntax\lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	.\syntax\lscript.vim	/^let b:current_syntax = "lscript"$/;"	v
b:current_syntax	.\syntax\lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	.\syntax\lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	.\syntax\lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	.\syntax\lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	.\syntax\m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	.\syntax\mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	.\syntax\mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	.\syntax\mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	.\syntax\make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	.\syntax\man.vim	/^let b:current_syntax = "man"$/;"	v
b:current_syntax	.\syntax\manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	.\syntax\maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	.\syntax\markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	.\syntax\masm.vim	/^let b:current_syntax = "masm"$/;"	v
b:current_syntax	.\syntax\mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	.\syntax\master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	.\syntax\matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	.\syntax\maxima.vim	/^let b:current_syntax = "maxima"$/;"	v
b:current_syntax	.\syntax\mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	.\syntax\messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	.\syntax\mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	.\syntax\mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	.\syntax\mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	.\syntax\mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	.\syntax\mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	.\syntax\mmix.vim	/^let b:current_syntax = "mmix"$/;"	v
b:current_syntax	.\syntax\mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	.\syntax\modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	.\syntax\model.vim	/^let b:current_syntax = "model"$/;"	v
b:current_syntax	.\syntax\modsim3.vim	/^let b:current_syntax = "modsim3"$/;"	v
b:current_syntax	.\syntax\modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	.\syntax\modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	.\syntax\monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	.\syntax\moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	.\syntax\mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	.\syntax\mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	.\syntax\mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	.\syntax\msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	.\syntax\msmessages.vim	/^let b:current_syntax = "msmessages"$/;"	v
b:current_syntax	.\syntax\msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	.\syntax\mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	.\syntax\muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	.\syntax\mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	.\syntax\named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	.\syntax\nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	.\syntax\nasm.vim	/^let b:current_syntax = "nasm"$/;"	v
b:current_syntax	.\syntax\nastran.vim	/^let b:current_syntax = "nastran"$/;"	v
b:current_syntax	.\syntax\natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	.\syntax\ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	.\syntax\netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	.\syntax\netrw.vim	/^let   b:current_syntax = "netrwlist"$/;"	v
b:current_syntax	.\syntax\nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	.\syntax\nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	.\syntax\nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	.\syntax\obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	.\syntax\objc.vim	/^let b:current_syntax = "objc"$/;"	v
b:current_syntax	.\syntax\objcpp.vim	/^let b:current_syntax = "objcpp"$/;"	v
b:current_syntax	.\syntax\ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	.\syntax\occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	.\syntax\omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	.\syntax\openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	.\syntax\opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	.\syntax\ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	.\syntax\pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	.\syntax\papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	.\syntax\pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	.\syntax\passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	.\syntax\pcap.vim	/^let b:current_syntax = "pcap"$/;"	v
b:current_syntax	.\syntax\pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	.\syntax\pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	.\syntax\perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	.\syntax\perl6.vim	/^let b:current_syntax = "perl6"$/;"	v
b:current_syntax	.\syntax\pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	.\syntax\pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	.\syntax\php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	.\syntax\pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	.\syntax\pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	.\syntax\pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	.\syntax\pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	.\syntax\pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	.\syntax\plaintex.vim	/^let b:current_syntax = "plaintex"$/;"	v
b:current_syntax	.\syntax\plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	.\syntax\plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	.\syntax\plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	.\syntax\po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	.\syntax\pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	.\syntax\postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	.\syntax\pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	.\syntax\povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	.\syntax\ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	.\syntax\ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	.\syntax\prescribe.vim	/^let b:current_syntax = "prescribe"$/;"	v
b:current_syntax	.\syntax\privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	.\syntax\procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	.\syntax\progress.vim	/^let b:current_syntax = "progress"$/;"	v
b:current_syntax	.\syntax\prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	.\syntax\promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	.\syntax\protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	.\syntax\psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	.\syntax\ptcap.vim	/^let b:current_syntax = "ptcap"$/;"	v
b:current_syntax	.\syntax\purifylog.vim	/^let b:current_syntax = "purifylog"$/;"	v
b:current_syntax	.\syntax\pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	.\syntax\python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	.\syntax\qf.vim	/^let b:current_syntax = "qf"$/;"	v
b:current_syntax	.\syntax\quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	.\syntax\r.vim	/^let b:current_syntax="r"$/;"	v
b:current_syntax	.\syntax\racc.vim	/^let b:current_syntax = "racc"$/;"	v
b:current_syntax	.\syntax\radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	.\syntax\ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	.\syntax\rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	.\syntax\rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	.\syntax\rcslog.vim	/^let b:current_syntax = "rcslog"$/;"	v
b:current_syntax	.\syntax\readline.vim	/^let b:current_syntax = "readline"$/;"	v
b:current_syntax	.\syntax\rebol.vim	/^let b:current_syntax = "rebol"$/;"	v
b:current_syntax	.\syntax\registry.vim	/^let b:current_syntax = "registry"$/;"	v
b:current_syntax	.\syntax\remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	.\syntax\resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	.\syntax\reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	.\syntax\rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	.\syntax\rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	.\syntax\rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	.\syntax\rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	.\syntax\rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	.\syntax\robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	.\syntax\rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	.\syntax\rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	.\syntax\rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	.\syntax\rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	.\syntax\ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	.\syntax\samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	.\syntax\sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	.\syntax\sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	.\syntax\sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	.\syntax\scheme.vim	/^let b:current_syntax = "scheme"$/;"	v
b:current_syntax	.\syntax\scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	.\syntax\screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	.\syntax\scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	.\syntax\sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	.\syntax\sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	.\syntax\sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	.\syntax\sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	.\syntax\sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	.\syntax\services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	.\syntax\setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	.\syntax\sgml.vim	/^let b:current_syntax = "sgml"$/;"	v
b:current_syntax	.\syntax\sgmldecl.vim	/^let b:current_syntax = "sgmldecl"$/;"	v
b:current_syntax	.\syntax\sgmllnx.vim	/^let b:current_syntax = "sgmllnx"$/;"	v
b:current_syntax	.\syntax\sh.vim	/^ let b:current_syntax = "bash"$/;"	v
b:current_syntax	.\syntax\sh.vim	/^ let b:current_syntax = "ksh"$/;"	v
b:current_syntax	.\syntax\sh.vim	/^ let b:current_syntax = "sh"$/;"	v
b:current_syntax	.\syntax\sicad.vim	/^let b:current_syntax = "sicad"$/;"	v
b:current_syntax	.\syntax\sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	.\syntax\simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	.\syntax\sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	.\syntax\sindacmp.vim	/^let b:current_syntax = "sindacmp"$/;"	v
b:current_syntax	.\syntax\sindaout.vim	/^let b:current_syntax = "sindaout"$/;"	v
b:current_syntax	.\syntax\sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	.\syntax\skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	.\syntax\sl.vim	/^let b:current_syntax = "sl"$/;"	v
b:current_syntax	.\syntax\slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	.\syntax\slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	.\syntax\slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	.\syntax\slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	.\syntax\slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	.\syntax\slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	.\syntax\slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	.\syntax\sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	.\syntax\smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	.\syntax\smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	.\syntax\smil.vim	/^let b:current_syntax = "smil"$/;"	v
b:current_syntax	.\syntax\smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	.\syntax\sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	.\syntax\snnsnet.vim	/^let b:current_syntax = "snnsnet"$/;"	v
b:current_syntax	.\syntax\snnspat.vim	/^let b:current_syntax = "snnspat"$/;"	v
b:current_syntax	.\syntax\snnsres.vim	/^let b:current_syntax = "snnsres"$/;"	v
b:current_syntax	.\syntax\snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	.\syntax\spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	.\syntax\specman.vim	/^let b:current_syntax = "specman"$/;"	v
b:current_syntax	.\syntax\spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	.\syntax\splint.vim	/^let b:current_syntax = "splint"$/;"	v
b:current_syntax	.\syntax\spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	.\syntax\spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	.\syntax\sqlanywhere.vim	/^let b:current_syntax = "sqlanywhere"$/;"	v
b:current_syntax	.\syntax\sqlforms.vim	/^let b:current_syntax = "sqlforms"$/;"	v
b:current_syntax	.\syntax\sqlinformix.vim	/^let b:current_syntax = "sqlinformix"$/;"	v
b:current_syntax	.\syntax\sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	.\syntax\sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	.\syntax\sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	.\syntax\squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	.\syntax\sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	.\syntax\sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	.\syntax\st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	.\syntax\stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	.\syntax\stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	.\syntax\strace.vim	/^let b:current_syntax = "strace"$/;"	v
b:current_syntax	.\syntax\sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	.\syntax\svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	.\syntax\svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	.\syntax\sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	.\syntax\tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	.\syntax\tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	.\syntax\tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	.\syntax\takcmp.vim	/^let b:current_syntax = "takcmp"$/;"	v
b:current_syntax	.\syntax\takout.vim	/^let b:current_syntax = "takout"$/;"	v
b:current_syntax	.\syntax\taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	.\syntax\taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	.\syntax\tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	.\syntax\tcsh.vim	/^let b:current_syntax = 'tcsh'$/;"	v
b:current_syntax	.\syntax\terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	.\syntax\tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	.\syntax\texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	.\syntax\texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	.\syntax\tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	.\syntax\tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	.\syntax\tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	.\syntax\tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	.\syntax\tpp.vim	/^let b:current_syntax = "tpp"$/;"	v
b:current_syntax	.\syntax\trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	.\syntax\tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	.\syntax\tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	.\syntax\tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	.\syntax\tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	.\syntax\uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	.\syntax\udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	.\syntax\udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	.\syntax\udevrules.vim	/^let b:current_syntax = "udevrules"$/;"	v
b:current_syntax	.\syntax\uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	.\syntax\updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	.\syntax\valgrind.vim	/^let b:current_syntax = "valgrind"$/;"	v
b:current_syntax	.\syntax\vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	.\syntax\vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	.\syntax\verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	.\syntax\verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	.\syntax\vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	.\syntax\vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	.\syntax\vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	.\syntax\viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	.\syntax\virata.vim	/^let b:current_syntax = "virata"$/;"	v
b:current_syntax	.\syntax\vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	.\syntax\voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	.\syntax\vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	.\syntax\vsejcl.vim	/^let b:current_syntax = "vsejcl"$/;"	v
b:current_syntax	.\syntax\wdiff.vim	/^let b:current_syntax = "wdiff"$/;"	v
b:current_syntax	.\syntax\web.vim	/^let b:current_syntax = "web"$/;"	v
b:current_syntax	.\syntax\webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	.\syntax\wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	.\syntax\winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	.\syntax\wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	.\syntax\wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	.\syntax\wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	.\syntax\wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	.\syntax\xbl.vim	/^let b:current_syntax = "xbl"$/;"	v
b:current_syntax	.\syntax\xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	.\syntax\xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	.\syntax\xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	.\syntax\xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	.\syntax\xkb.vim	/^let b:current_syntax = "xkb"$/;"	v
b:current_syntax	.\syntax\xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	.\syntax\xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	.\syntax\xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	.\syntax\xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	.\syntax\xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	.\syntax\xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	.\syntax\xxd.vim	/^let b:current_syntax = "xxd"$/;"	v
b:current_syntax	.\syntax\yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	.\syntax\yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	.\syntax\z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	.\syntax\zsh.vim	/^let b:current_syntax = "zsh"$/;"	v
b:curret_syntax	.\syntax\tasm.vim	/^let b:curret_syntax = "tasm"$/;"	v
b:did_ftplugin	.\ftplugin\a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	.\ftplugin\alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\c.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\changelog.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\context.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\csh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\ftplugin\debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\ftplugin\denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\dtrace.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\flexwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_ftplugin	.\ftplugin\fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\haskell.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\initex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ishd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\javascript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\lua.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\man.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\msmessages.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	.\ftplugin\occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\perl6.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\php.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\python.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\racc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sgml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	.\ftplugin\sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\svg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\tcsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\udevrules.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\vim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.\ftplugin\zsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	.\indent\ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	.\indent\awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\c.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\changelog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cpp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\dtrace.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\eiffel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\erlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\idlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\ishd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\mma.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\objc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\perl6.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\sh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\sqlanywhere.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	.\indent\tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\tcsh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\vim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\xml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\indent\yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.\syntax\spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:docbk_type	.\syntax\docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	.\syntax\docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	.\syntax\docbksgml.vim	/^let b:docbk_type="sgml"$/;"	v
b:docbk_type	.\syntax\docbkxml.vim	/^let b:docbk_type="xml"$/;"	v
b:doxygen_syntax_save	.\syntax\doxygen.vim	/^    let b:doxygen_syntax_save=b:current_syntax$/;"	v
b:enforce_freedesktop_standard	.\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 0$/;"	v
b:enforce_freedesktop_standard	.\syntax\desktop.vim	/^	let b:enforce_freedesktop_standard = 1$/;"	v
b:eruby_nest_level	.\syntax\eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	.\syntax\eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\ftplugin\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	.\syntax\eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	.\indent\eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	.\syntax\eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	.\syntax\eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:extfname	.\syntax\tex.vim	/^let b:extfname=expand("%:e")$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "elf"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "f77"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "f90"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "f95"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = "unknown"$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^    let b:fortran_dialect = matchstr(fortran_dialect,'\\<\\(f\\(9[05]\\|77\\)\\|elf\\|F\\)\\>')$/;"	v
b:fortran_dialect	.\syntax\fortran.vim	/^  let b:fortran_dialect = "unknown"$/;"	v
b:fortran_fixed_source	.\ftplugin\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\ftplugin\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	.\indent\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\indent\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\indent\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	.\syntax\fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\syntax\fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	.\syntax\fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	.\syntax\fortran.vim	/^  let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	.\syntax\framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	.\ftplugin\git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	.\ftplugin\git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	.\ftplugin\git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	.\ftplugin\gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:hs_chs	.\syntax\chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor .= 'f'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor .= 's'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor .= 't'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor = 'html40'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor = 'html401'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^                let b:html_omni_flavor = 'xhtml10'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^            let b:html_omni_flavor = 'html32'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^            let b:html_omni_flavor = 'html401t'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^            let b:html_omni_flavor = 'xhtml10s'$/;"	v
b:html_omni_flavor	.\ftplugin\html.vim	/^            let b:html_omni_flavor = 'xhtml11'$/;"	v
b:i	.\syntax\hitest.vim	/^   let b:i = b:i + 1$/;"	v
b:i	.\syntax\hitest.vim	/^let b:i = 1$/;"	v
b:indent_use_syntax	.\indent\perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	.\indent\perl6.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:is_bash	.\syntax\sh.vim	/^    let b:is_bash= 1$/;"	v
b:is_kornshell	.\syntax\sh.vim	/^    let b:is_kornshell= 1$/;"	v
b:is_sh	.\syntax\sh.vim	/^    let b:is_sh= 1$/;"	v
b:keymap	.\keymap\magyar_utf-8.vim	/^let b:keymap = "magyar"$/;"	v
b:keymap_name	.\keymap\accents.vim	/^let b:keymap_name = "acc"$/;"	v
b:keymap_name	.\keymap\arabic_utf-8.vim	/^let b:keymap_name = "arab"$/;"	v
b:keymap_name	.\keymap\bulgarian-bds.vim	/^let b:keymap_name = "bds"$/;"	v
b:keymap_name	.\keymap\bulgarian-phonetic.vim	/^let b:keymap_name = "pho"$/;"	v
b:keymap_name	.\keymap\canfr-win.vim	/^let b:keymap_name = "canfr"$/;"	v
b:keymap_name	.\keymap\croatian_cp1250.vim	/^let b:keymap_name = "croatian-cp1250"$/;"	v
b:keymap_name	.\keymap\croatian_iso-8859-2.vim	/^let b:keymap_name = "croatian-iso-8859-2"$/;"	v
b:keymap_name	.\keymap\croatian_utf-8.vim	/^let b:keymap_name = "croatian-UTF-8"$/;"	v
b:keymap_name	.\keymap\czech_utf-8.vim	/^let b:keymap_name = "czech"$/;"	v
b:keymap_name	.\keymap\dvorak.vim	/^let b:keymap_name = "en-dv"$/;"	v
b:keymap_name	.\keymap\esperanto_utf-8.vim	/^let b:keymap_name = "Eo"$/;"	v
b:keymap_name	.\keymap\greek_cp1253.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\keymap\greek_cp737.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\keymap\greek_iso-8859-7.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	.\keymap\greek_utf-8.vim	/^let b:keymap_name = "grk"$/;"	v
b:keymap_name	.\keymap\hebrew_cp1255.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\keymap\hebrew_iso-8859-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\keymap\hebrew_utf-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	.\keymap\hebrewp_cp1255.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\keymap\hebrewp_iso-8859-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\keymap\hebrewp_utf-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	.\keymap\kana.vim	/^let b:keymap_name = "kana"$/;"	v
b:keymap_name	.\keymap\lithuanian-baltic.vim	/^let b:keymap_name = "lt"$/;"	v
b:keymap_name	.\keymap\mongolian_utf-8.vim	/^let b:keymap_name = "mn"$/;"	v
b:keymap_name	.\keymap\persian-iranian_utf-8.vim	/^let b:keymap_name = "per"$/;"	v
b:keymap_name	.\keymap\pinyin.vim	/^let b:keymap_name = "py"$/;"	v
b:keymap_name	.\keymap\polish-slash_cp1250.vim	/^let b:keymap_name = "PL-slash-WIN"$/;"	v
b:keymap_name	.\keymap\polish-slash_cp852.vim	/^let b:keymap_name = "PL-slash-DOS"$/;"	v
b:keymap_name	.\keymap\polish-slash_iso-8859-2.vim	/^let b:keymap_name = "PL-slash-ISO"$/;"	v
b:keymap_name	.\keymap\polish-slash_utf-8.vim	/^let b:keymap_name = "PL-slash-UTF"$/;"	v
b:keymap_name	.\keymap\russian-dvorak.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\keymap\russian-jcuken.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\keymap\russian-jcukenwin.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\keymap\russian-yawerty.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	.\keymap\serbian-latin_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	.\keymap\serbian_cp1250.vim	/^let b:keymap_name = "serbian-cp1250"$/;"	v
b:keymap_name	.\keymap\serbian_cp1251.vim	/^let b:keymap_name = "serbian-cp1251"$/;"	v
b:keymap_name	.\keymap\serbian_iso-8859-2.vim	/^let b:keymap_name = "serbian-iso-8859-2"$/;"	v
b:keymap_name	.\keymap\serbian_iso-8859-5.vim	/^let b:keymap_name = "serbian-iso-8859-5"$/;"	v
b:keymap_name	.\keymap\serbian_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	.\keymap\sinhala-phonetic_utf-8.vim	/^let b:keymap_name = "sinhala"$/;"	v
b:keymap_name	.\keymap\slovak_cp1250.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\keymap\slovak_iso-8859-2.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\keymap\slovak_utf-8.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	.\keymap\tamil_tscii.vim	/^let b:keymap_name = "tamil_tscii"$/;"	v
b:keymap_name	.\keymap\thaana-phonetic_utf-8.vim	/^let b:keymap_name= "thaana"$/;"	v
b:keymap_name	.\keymap\ukrainian-dvorak.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	.\keymap\ukrainian-jcuken.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	.\keymap\vietnamese-viqr_utf-8.vim	/^let b:keymap_name = "vietnamese"$/;"	v
b:lhs_markup	.\syntax\lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	.\syntax\lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	.\syntax\lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	.\syntax\lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	.\syntax\lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	.\ftplugin\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	.\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\ftplugin\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	.\ftplugin\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\syntax\liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	.\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	.\syntax\liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	.\syntax\liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	.\syntax\liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	.\indent\liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:main_syntax	.\syntax\groff.vim	/^let b:main_syntax = "nroff"$/;"	v
b:match_ignorecase	.\ftplugin\abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\ftplugin\aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\ftplugin\cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\ftplugin\context.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\ftplugin\hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\ftplugin\ishd.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\ftplugin\lua.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\ftplugin\plaintex.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	.\ftplugin\vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\ftplugin\verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	.\ftplugin\vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	.\ftplugin\vim.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	.\ftplugin\xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_skip	.\ftplugin\c.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	.\ftplugin\context.vim	/^  let b:match_skip = 'r:\\\\\\@<!\\%(\\\\\\\\\\)*%'$/;"	v
b:match_skip	.\ftplugin\dtrace.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	.\ftplugin\ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	.\ftplugin\vim.vim	/^  let b:match_skip = 'getline(".") =~ "^\\\\s*sy\\\\%[ntax]\\\\s\\\\+region" ||$/;"	v
b:match_words	.\ftplugin\abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	.\ftplugin\ada.vim	/^   let b:match_words =$/;"	v
b:match_words	.\ftplugin\aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\c.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	.\ftplugin\cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	.\ftplugin\context.vim	/^  let b:match_words = '(:),\\[:],{:},\\\\(:\\\\),\\\\\\[:\\\\],' .$/;"	v
b:match_words	.\ftplugin\csc.vim	/^    let b:match_words=$/;"	v
b:match_words	.\ftplugin\csh.vim	/^    let b:match_words =$/;"	v
b:match_words	.\ftplugin\dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	.\ftplugin\dtrace.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	.\ftplugin\eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.\ftplugin\fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	.\ftplugin\hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	.\ftplugin\ishd.vim	/^    let b:match_words=$/;"	v
b:match_words	.\ftplugin\jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	.\ftplugin\liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	.\ftplugin\liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	.\ftplugin\liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	.\ftplugin\lua.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\matlab.vim	/^	let b:match_words = '\\<if\\>\\|\\<while\\>\\|\\<for\\>\\|\\<switch\\>:' .$/;"	v
b:match_words	.\ftplugin\ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	.\ftplugin\pascal.vim	/^    let b:match_words='\\<\\%(begin\\|case\\|try\\)\\>:\\<end\\>'$/;"	v
b:match_words	.\ftplugin\pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<endstream\\>,\\<xref\\>:\\<trailer\\>,<<:>>'$/;"	v
b:match_words	.\ftplugin\php.vim	/^    let b:match_words = '<?php:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:match_words	.\ftplugin\postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grestore\\>'$/;"	v
b:match_words	.\ftplugin\ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\sh.vim	/^    let b:match_words =$/;"	v
b:match_words	.\ftplugin\spec.vim	/^let b:match_words =$/;"	v
b:match_words	.\ftplugin\sql.vim	/^    let b:match_words =$/;"	v
b:match_words	.\ftplugin\tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	.\ftplugin\vb.vim	/^    let b:match_words=$/;"	v
b:match_words	.\ftplugin\verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	.\ftplugin\vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\vim.vim	/^  let b:match_words =$/;"	v
b:match_words	.\ftplugin\xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	.\ftplugin\xml.vim	/^    let b:match_words =$/;"	v
b:match_words	.\syntax\cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	.\ftplugin\ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:nroff_is_groff	.\syntax\groff.vim	/^let b:nroff_is_groff = 1$/;"	v
b:optionsset	.\indent\php.vim	/^let b:optionsset = 0$/;"	v
b:pdf_tagstack	.\ftplugin\pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:ruby_no_expensive	.\syntax\haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	.\syntax\ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:spell_options	.\syntax\groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	.\syntax\java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	.\syntax\wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	.\ftplugin\sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	.\ftplugin\sql.vim	/^    let b:sql_vis = 1$/;"	v
b:synhead	.\syntax\hitest.vim	/^	    let b:synhead = b:synhead."s"$/;"	v
b:synhead	.\syntax\hitest.vim	/^	 let b:synhead = b:synhead." - filetype"$/;"	v
b:synhead	.\syntax\hitest.vim	/^	 let b:synhead = b:synhead.":".@a$/;"	v
b:synhead	.\syntax\hitest.vim	/^   let b:synhead = "Syntax highlighting groups"$/;"	v
b:tex_stylish	.\syntax\tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	.\syntax\tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	.\syntax\tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:undo_ftplugin	.\ftplugin\a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	.\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	.\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:browsefilter"$/;"	v
b:undo_ftplugin	.\ftplugin\abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	.\ftplugin\abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	.\ftplugin\alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\c.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	.\ftplugin\calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\changelog.vim	/^    let b:undo_ftplugin .= " tw<"$/;"	v
b:undo_ftplugin	.\ftplugin\changelog.vim	/^  let b:undo_ftplugin = "setl com< fo< et< ai<"$/;"	v
b:undo_ftplugin	.\ftplugin\cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	.\ftplugin\cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	.\ftplugin\conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\context.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< sua< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\csh.vim	/^let b:undo_ftplugin = "setlocal commentstring< formatoptions<" .$/;"	v
b:undo_ftplugin	.\ftplugin\css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	.\ftplugin\cucumber.vim	/^  let b:undo_ftplugin .= "| sil! iunmap! <C-]>| sil! iunmap! <C-W>]| sil! iunmap! <C-W><C-]>| sil! iunmap! <C-W>}"$/;"	v
b:undo_ftplugin	.\ftplugin\cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	.\ftplugin\cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\debchangelog.vim	/^let b:undo_ftplugin = "setlocal tw< comments< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	.\ftplugin\debcontrol.vim	/^let b:undo_ftplugin = "setlocal tw< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	.\ftplugin\denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	.\ftplugin\dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\ftplugin\dtrace.vim	/^let b:undo_ftplugin = "setl fo< com< cms< isk<"$/;"	v
b:undo_ftplugin	.\ftplugin\elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	.\ftplugin\eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\flexwiki.vim	/^let b:undo_ftplugin = "setl tw< wrap< lbr< et< ts< fenc< bomb< ff<"$/;"	v
b:undo_ftplugin	.\ftplugin\fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc<"$/;"	v
b:undo_ftplugin	.\ftplugin\framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	.\ftplugin\fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	.\ftplugin\gitcommit.vim	/^    let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\ftplugin\gitcommit.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . "|setl tw<"$/;"	v
b:undo_ftplugin	.\ftplugin\gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	.\ftplugin\gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	.\ftplugin\gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	.\ftplugin\hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	.\ftplugin\haskell.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu<"$/;"	v
b:undo_ftplugin	.\ftplugin\hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\ftplugin\indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\initex.vim	/^let b:undo_ftplugin = "setl com< cms< define< include< sua<"$/;"	v
b:undo_ftplugin	.\ftplugin\java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	.\ftplugin\javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	v
b:undo_ftplugin	.\ftplugin\jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	.\ftplugin\liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	.\ftplugin\liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	.\ftplugin\logcheck.vim	/^let b:undo_ftplugin = "setl fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	.\ftplugin\m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\make.vim	/^let b:undo_ftplugin = "setl et< sts< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	.\ftplugin\manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< "$/;"	v
b:undo_ftplugin	.\ftplugin\mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\msmessages.vim	/^let b:undo_ftplugin = "setl fo< com< cms< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	.\ftplugin\muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	.\ftplugin\pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	.\ftplugin\pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	.\ftplugin\perl6.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk<" .$/;"	v
b:undo_ftplugin	.\ftplugin\php.vim	/^let b:undo_ftplugin = "setlocal commentstring< include< omnifunc<" .$/;"	v
b:undo_ftplugin	.\ftplugin\pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\plaintex.vim	/^let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\qf.vim	/^let b:undo_ftplugin = "setl stl<"$/;"	v
b:undo_ftplugin	.\ftplugin\quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\racc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< kp<"$/;"	v
b:undo_ftplugin	.\ftplugin\sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	.\ftplugin\screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\sgml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\sh.vim	/^let b:undo_ftplugin = "setlocal cms< | unlet! b:browsefilter b:match_words"$/;"	v
b:undo_ftplugin	.\ftplugin\sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\sql.vim	/^let b:undo_ftplugin = "setl comments<"$/;"	v
b:undo_ftplugin	.\ftplugin\sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\svg.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	.\ftplugin\tcsh.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	.\ftplugin\udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\udevrules.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	.\ftplugin\vim.vim	/^let b:undo_ftplugin = "setl fo< isk< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	.\ftplugin\xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\xml.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	.\ftplugin\xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	.\ftplugin\yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	.\ftplugin\zsh.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_indent	.\indent\bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\c.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\changelog.vim	/^let b:undo_indent = "setl ai<"$/;"	v
b:undo_indent	.\indent\cpp.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\cs.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\dtrace.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\ishd.vim	/^let b:undo_indent = "setl ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	.\indent\java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	.\indent\javascript.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	.\indent\lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	.\indent\lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	.\indent\rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	.\indent\vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:various	.\syntax\hitest.vim	/^let b:various = &highlight.',:Normal,:Cursor,:,'$/;"	v
b:vera_minlines	.\syntax\vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	.\syntax\vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	.\syntax\vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	.\ftplugin\vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\|package\\|procedure\\|process\\|record\\|units\\)'$/;"	v
b:xf86conf_xfree86_version	.\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	.\syntax\xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xml_indent_close	.\indent\xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	.\indent\xml.vim	/^    let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
bmenu_priority	.\menu.vim	/^  let bmenu_priority = 60$/;"	v
bsub	.\ftplugin\cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
buffer_shiftwidth	.\indent\sh.vim	/^function s:buffer_shiftwidth()$/;"	f
c_comment_strings	.\gvimrc_example.vim	/^  let c_comment_strings=1$/;"	v
capitalize	.\ftplugin\changelog.vim	/^  function! s:capitalize(word)$/;"	f
ccomplete#Complete	.\autoload\ccomplete.vim	/^function! ccomplete#Complete(findstart, base)$/;"	f
changelogMenu	.\ftplugin\debchangelog.vim	/^augroup changelogMenu$/;"	a
chars	.\syntax\xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	.\syntax\xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	.\syntax\xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	.\syntax\xpm.vim	/^let chars  = ""$/;"	v
chars	.\syntax\xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	.\syntax\xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	.\syntax\xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	.\syntax\xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	.\syntax\xpm2.vim	/^  let chars  = ""$/;"	v
check	.\autoload\gzip.vim	/^fun s:check(cmd)$/;"	f
check_shell	.\tools\shtags.pl	/^sub check_shell$/;"	s
chill_minlines	.\syntax\chill.vim	/^  let chill_minlines = 15$/;"	v
choose	.\ftplugin\gitrebase.vim	/^function! s:choose(word)$/;"	f
col1	.\syntax\colortest.vim	/^  let col1 = substitute(expand("<cword>"), '\\(\\a\\+\\)_on_\\a\\+', '\\1', "")$/;"	v
col2	.\syntax\colortest.vim	/^  let col2 = substitute(expand("<cword>"), '\\a\\+_on_\\(\\a\\+\\)', '\\1', "")$/;"	v
color	.\syntax\xpm.vim	/^		     let color = ""$/;"	v
color	.\syntax\xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\syntax\xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	.\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	.\syntax\xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	.\syntax\xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\syntax\xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	.\syntax\xpm.vim	/^let color  = ""$/;"	v
color	.\syntax\xpm2.vim	/^		let color = ""$/;"	v
color	.\syntax\xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\syntax\xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	.\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	.\syntax\xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	.\syntax\xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\syntax\xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	.\syntax\xpm2.vim	/^  let color  = ""$/;"	v
colors	.\syntax\xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	.\syntax\xpm.vim	/^let colors = 0$/;"	v
colors	.\syntax\xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	.\syntax\xpm2.vim	/^  let colors = 0$/;"	v
colors_name	.\colors\darkblue.vim	/^let colors_name = "darkblue"$/;"	v
colors_name	.\colors\default.vim	/^let colors_name = "default"$/;"	v
colors_name	.\colors\delek.vim	/^let colors_name = "delek"$/;"	v
colors_name	.\colors\evening.vim	/^let colors_name = "evening"$/;"	v
colors_name	.\colors\morning.vim	/^let colors_name = "morning"$/;"	v
colors_name	.\colors\peachpuff.vim	/^let colors_name = "peachpuff"$/;"	v
colors_name	.\colors\shine.vim	/^let colors_name = "shine"$/;"	v
colors_name	.\colors\slate.vim	/^let colors_name = "slate"$/;"	v
commProperty	.\tools\xcmdsrv_client.c	/^static Atom	commProperty = None;$/;"	v	file:
commWindow	.\tools\xcmdsrv_client.c	/^static Window	commWindow = None;$/;"	v	file:
count	.\indent\bst.vim	/^function! s:count(string,char)$/;"	f
count	.\indent\liquid.vim	/^function! s:count(string,pattern)$/;"	f
count_braces	.\indent\css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\indent\ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\indent\tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	.\indent\xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
cpo_save	.\ftplugin\hamster.vim	/^let cpo_save = &cpo$/;"	v
cpp	.\syntax\xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	.\syntax\xpm.vim	/^let cpp    = 0$/;"	v
cpp	.\syntax\xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	.\syntax\xpm2.vim	/^  let cpp    = 0$/;"	v
csc_minlines	.\syntax\csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
csscomplete#CompleteCSS	.\autoload\csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f
current_compiler	.\compiler\ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	.\compiler\bcc.vim	/^let current_compiler = "bcc"$/;"	v
current_compiler	.\compiler\bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	.\compiler\checkstyle.vim	/^let current_compiler = "checkstyle"$/;"	v
current_compiler	.\compiler\cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	.\compiler\cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	.\compiler\decada.vim	/^let current_compiler = "decada"$/;"	v
current_compiler	.\compiler\dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	.\compiler\eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	.\compiler\fortran_F.vim	/^let current_compiler = "fortran_F"$/;"	v
current_compiler	.\compiler\fortran_cv.vim	/^let current_compiler = "fortran_cv"$/;"	v
current_compiler	.\compiler\fortran_elf90.vim	/^let current_compiler = "fortran_elf90"$/;"	v
current_compiler	.\compiler\fortran_g77.vim	/^let current_compiler = "fortran_g77"$/;"	v
current_compiler	.\compiler\fortran_lf95.vim	/^let current_compiler = "fortran_lf95"$/;"	v
current_compiler	.\compiler\fpc.vim	/^let current_compiler = "fpc"$/;"	v
current_compiler	.\compiler\gcc.vim	/^let current_compiler = "gcc"$/;"	v
current_compiler	.\compiler\gnat.vim	/^let current_compiler = "gnat"$/;"	v
current_compiler	.\compiler\hp_acc.vim	/^let current_compiler = "hp_acc"$/;"	v
current_compiler	.\compiler\icc.vim	/^let current_compiler = "icc"$/;"	v
current_compiler	.\compiler\intel.vim	/^let current_compiler = "intel"$/;"	v
current_compiler	.\compiler\irix5_c.vim	/^let current_compiler = "irix5_c"$/;"	v
current_compiler	.\compiler\irix5_cpp.vim	/^let current_compiler = "irix5_cpp"$/;"	v
current_compiler	.\compiler\javac.vim	/^let current_compiler = "javac"$/;"	v
current_compiler	.\compiler\jikes.vim	/^let current_compiler = "jikes"$/;"	v
current_compiler	.\compiler\mcs.vim	/^let current_compiler = "mcs"$/;"	v
current_compiler	.\compiler\mips_c.vim	/^let current_compiler = "mips_c"$/;"	v
current_compiler	.\compiler\mipspro_c89.vim	/^let current_compiler = "mipspro_c89"$/;"	v
current_compiler	.\compiler\mipspro_cpp.vim	/^let current_compiler = "mipspro_cpp"$/;"	v
current_compiler	.\compiler\modelsim_vcom.vim	/^let current_compiler = "modelsim_vcom"$/;"	v
current_compiler	.\compiler\msvc.vim	/^let current_compiler = "msvc"$/;"	v
current_compiler	.\compiler\neato.vim	/^let current_compiler = "neato"$/;"	v
current_compiler	.\compiler\onsgmls.vim	/^let current_compiler = "onsgmls"$/;"	v
current_compiler	.\compiler\pbx.vim	/^let current_compiler = "pbx"$/;"	v
current_compiler	.\compiler\perl.vim	/^let current_compiler = "perl"$/;"	v
current_compiler	.\compiler\php.vim	/^let current_compiler = "php"$/;"	v
current_compiler	.\compiler\pyunit.vim	/^let current_compiler = "pyunit"$/;"	v
current_compiler	.\compiler\rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	.\compiler\rst.vim	/^let current_compiler = "rst"$/;"	v
current_compiler	.\compiler\ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	.\compiler\rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	.\compiler\se.vim	/^let current_compiler = "se"$/;"	v
current_compiler	.\compiler\splint.vim	/^let current_compiler = "splint"$/;"	v
current_compiler	.\compiler\tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	.\compiler\tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	.\compiler\tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	.\compiler\tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	.\compiler\tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	.\compiler\tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	.\compiler\xmllint.vim	/^let current_compiler = "xmllint"$/;"	v
current_compiler	.\compiler\xmlwf.vim	/^let current_compiler = "xmlwf"$/;"	v
cycle	.\ftplugin\gitrebase.vim	/^function! s:cycle()$/;"	f
d	.\macros\less.vim	/^noremap <script> d <C-D><SID>L$/;"	m
decada#Make	.\autoload\decada.vim	/^function decada#Make () dict					     " {{{1$/;"	f
decada#New	.\autoload\decada.vim	/^function decada#New ()						     " }}}1$/;"	f
decada#Set_Session	.\autoload\decada.vim	/^function decada#Set_Session (...) dict				     " {{{1$/;"	f
decada#Unit_Name	.\autoload\decada.vim	/^function decada#Unit_Name () dict				     " {{{1$/;"	f
decrease	.\ftplugin\cobol.vim	/^function! s:decrease(...)$/;"	f
def_comment	.\syntax\cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
def_keyword	.\syntax\cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
def_keywords	.\syntax\cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
def_match	.\syntax\cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
def_region	.\syntax\cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
deleted	.\spell\fixdup.vim	/^      let deleted += 1$/;"	v
deleted	.\spell\fixdup.vim	/^let deleted = 0$/;"	v
did_OPL_syntax_inits	.\syntax\opl.vim	/^    let did_OPL_syntax_inits = 1$/;"	v
did_VRML_syntax_inits	.\syntax\vrml.vim	/^    let did_VRML_syntax_inits = 1$/;"	v
did_a65_syntax_inits	.\syntax\a65.vim	/^    let did_a65_syntax_inits = 1$/;"	v
did_abap_syntax_inits	.\syntax\abap.vim	/^    let did_abap_syntax_inits = 1$/;"	v
did_abaqus_syn_inits	.\syntax\abaqus.vim	/^		let did_abaqus_syn_inits = 1$/;"	v
did_abc_syn_inits	.\syntax\abc.vim	/^    let did_abc_syn_inits = 1$/;"	v
did_abel_syn_inits	.\syntax\abel.vim	/^    let did_abel_syn_inits = 1$/;"	v
did_acedb_syn_inits	.\syntax\acedb.vim	/^    let did_acedb_syn_inits = 1$/;"	v
did_aflex_syntax_inits	.\syntax\aflex.vim	/^      let did_aflex_syntax_inits = 1$/;"	v
did_ahdl_syn_inits	.\syntax\ahdl.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_ahdl_syn_inits	.\syntax\ppd.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_amiga_syn_inits	.\syntax\amiga.vim	/^    let did_amiga_syn_inits = 1$/;"	v
did_aml_syntax_inits	.\syntax\aml.vim	/^    let did_aml_syntax_inits = 1$/;"	v
did_ampl_syntax_inits	.\syntax\ampl.vim	/^    let did_ampl_syntax_inits = 1$/;"	v
did_antlr_syntax_inits	.\syntax\antlr.vim	/^      let did_antlr_syntax_inits = 1$/;"	v
did_apache_syntax_inits	.\syntax\apache.vim	/^		let did_apache_syntax_inits = 1$/;"	v
did_apachestyle_syn_inits	.\syntax\apachestyle.vim	/^    let did_apachestyle_syn_inits = 1$/;"	v
did_asm68k_syntax_inits	.\syntax\asm68k.vim	/^    let did_asm68k_syntax_inits = 1$/;"	v
did_asm_syntax_inits	.\syntax\asm.vim	/^    let did_asm_syntax_inits = 1$/;"	v
did_asn_syn_inits	.\syntax\asn.vim	/^    let did_asn_syn_inits = 1$/;"	v
did_aspvbs_syn_inits	.\syntax\aspvbs.vim	/^    let did_aspvbs_syn_inits = 1$/;"	v
did_atlas_syntax_inits	.\syntax\atlas.vim	/^    let did_atlas_syntax_inits = 1$/;"	v
did_automake_syntax_inits	.\syntax\automake.vim	/^    let did_automake_syntax_inits = 1$/;"	v
did_ave_syn_inits	.\syntax\ave.vim	/^	let did_ave_syn_inits = 1$/;"	v
did_awk_syn_inits	.\syntax\awk.vim	/^    let did_awk_syn_inits = 1$/;"	v
did_ayacc_syntax_inits	.\syntax\ayacc.vim	/^      let did_ayacc_syntax_inits = 1$/;"	v
did_b_syntax_inits	.\syntax\b.vim	/^      let did_b_syntax_inits = 1$/;"	v
did_baan_syn_inits	.\syntax\baan.vim	/^    let did_baan_syn_inits = 1$/;"	v
did_basic_syntax_inits	.\syntax\basic.vim	/^    let did_basic_syntax_inits = 1$/;"	v
did_bc_syntax_inits	.\syntax\bc.vim	/^    let did_bc_syntax_inits = 1$/;"	v
did_bib_syn_inits	.\syntax\bib.vim	/^    let did_bib_syn_inits = 1$/;"	v
did_bind_zone_syn_inits	.\syntax\bindzone.vim	/^    let did_bind_zone_syn_inits = 1$/;"	v
did_blank_syntax_inits	.\syntax\blank.vim	/^    let did_blank_syntax_inits = 1$/;"	v
did_bst_syn_inits	.\syntax\bst.vim	/^        let did_bst_syn_inits = 1$/;"	v
did_btm_syntax_inits	.\syntax\btm.vim	/^    let did_btm_syntax_inits = 1$/;"	v
did_bzr_syn_inits	.\syntax\bzr.vim	/^    let did_bzr_syn_inits = 1$/;"	v
did_c_syn_inits	.\syntax\pf.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cabal_syn_inits	.\syntax\cabal.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cabal_syn_inits	.\syntax\obj.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cfg_syn_inits	.\syntax\cfg.vim	/^	let did_cfg_syn_inits = 1$/;"	v
did_ch_syntax_inits	.\syntax\ch.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_ch_syntax_inits	.\syntax\chill.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_change_syntax_inits	.\syntax\change.vim	/^    let did_change_syntax_inits = 1$/;"	v
did_changelog_syntax_inits	.\syntax\changelog.vim	/^    let did_changelog_syntax_inits = 1$/;"	v
did_cheetah_syn_inits	.\syntax\cheetah.vim	/^		let did_cheetah_syn_inits = 1$/;"	v
did_cl_syntax_inits	.\syntax\cl.vim	/^		let did_cl_syntax_inits = 1$/;"	v
did_clean_syntax_init	.\syntax\clean.vim	/^    let did_clean_syntax_init = 1$/;"	v
did_clipper_syntax_inits	.\syntax\clipper.vim	/^    let did_clipper_syntax_inits = 1$/;"	v
did_cmake_syntax_inits	.\syntax\cmake.vim	/^    let did_cmake_syntax_inits = 1$/;"	v
did_cobol_syntax_inits	.\syntax\cobol.vim	/^    let did_cobol_syntax_inits = 1$/;"	v
did_conf_syntax_inits	.\syntax\asterisk.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_conf_syntax_inits	.\syntax\asteriskvm.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\syntax\config.vim	/^    let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\syntax\fstab.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\syntax\resolv.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	.\syntax\sd.vim	/^                let did_config_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	.\syntax\cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_crontab_syn_inits	.\syntax\crontab.vim	/^    let did_crontab_syn_inits = 1$/;"	v
did_csc_syntax_inits	.\syntax\cdl.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csc_syntax_inits	.\syntax\csc.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csh_syntax_inits	.\syntax\csh.vim	/^    let did_csh_syntax_inits = 1$/;"	v
did_csp_syn_inits	.\syntax\csp.vim	/^    let did_csp_syn_inits = 1$/;"	v
did_css_syn_inits	.\syntax\css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	.\syntax\javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_cterm_syntax_inits	.\syntax\cterm.vim	/^    let did_cterm_syntax_inits = 1$/;"	v
did_cupl_syn_inits	.\syntax\cupl.vim	/^    let did_cupl_syn_inits = 1$/;"	v
did_cuplsim_syn_inits	.\syntax\cuplsim.vim	/^    let did_cuplsim_syn_inits = 1$/;"	v
did_cvs_syn_inits	.\syntax\cvs.vim	/^		let did_cvs_syn_inits = 1$/;"	v
did_cweb_syntax_inits	.\syntax\cweb.vim	/^    let did_cweb_syntax_inits = 1$/;"	v
did_cynlib_syntax_inits	.\syntax\cynlib.vim	/^    let did_cynlib_syntax_inits = 1$/;"	v
did_cynpp_syntax_inits	.\syntax\cynpp.vim	/^    let did_cynpp_syntax_inits = 1$/;"	v
did_dcd_syntax_inits	.\syntax\dcd.vim	/^    let did_dcd_syntax_inits = 1$/;"	v
did_dcl_syntax_inits	.\syntax\dcl.vim	/^    let did_dcl_syntax_inits = 1$/;"	v
did_debchangelog_syn_inits	.\syntax\debchangelog.vim	/^    let did_debchangelog_syn_inits = 1$/;"	v
did_debcontrol_syn_inits	.\syntax\debcontrol.vim	/^    let did_debcontrol_syn_inits = 1$/;"	v
did_def_syntax_inits	.\syntax\def.vim	/^    let did_def_syntax_inits = 1$/;"	v
did_desc_syntax_inits	.\syntax\desc.vim	/^    let did_desc_syntax_inits = 1$/;"	v
did_diva_syntax_inits	.\syntax\diva.vim	/^		let did_diva_syntax_inits = 1$/;"	v
did_django_syn_inits	.\syntax\django.vim	/^    let did_django_syn_inits = 1$/;"	v
did_docbk_syn_inits	.\syntax\docbk.vim	/^    let did_docbk_syn_inits = 1$/;"	v
did_dosbatch_syntax_inits	.\syntax\dosbatch.vim	/^    let did_dosbatch_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	.\syntax\desktop.vim	/^		let did_dosini_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	.\syntax\dosini.vim	/^    let did_dosini_syntax_inits = 1$/;"	v
did_dot_syntax_inits	.\syntax\dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_dracula_syn_inits	.\syntax\dracula.vim	/^    let did_dracula_syn_inits = 1$/;"	v
did_drchip_netrwlist_syntax	.\syntax\netrw.vim	/^ let did_drchip_netrwlist_syntax= 1$/;"	v
did_drchip_tags_inits	.\syntax\tags.vim	/^    let did_drchip_tags_inits = 1$/;"	v
did_dtd_syn_inits	.\syntax\dtd.vim	/^	let did_dtd_syn_inits = 1$/;"	v
did_dtml_syntax_inits	.\syntax\dtml.vim	/^    let did_dtml_syntax_inits = 1$/;"	v
did_dummy_syn_inits	.\syntax\ist.vim	/^    let did_dummy_syn_inits = 1$/;"	v
did_dylan_intr_syntax_inits	.\syntax\dylanintr.vim	/^    let did_dylan_intr_syntax_inits = 1$/;"	v
did_dylan_lid_syntax_inits	.\syntax\dylanlid.vim	/^    let did_dylan_lid_syntax_inits = 1$/;"	v
did_dylan_syntax_inits	.\syntax\dylan.vim	/^    let did_dylan_syntax_inits = 1$/;"	v
did_ecd_syn_inits	.\syntax\ecd.vim	/^    let did_ecd_syn_inits = 1$/;"	v
did_edif_syntax_inits	.\syntax\edif.vim	/^    let did_edif_syntax_inits = 1$/;"	v
did_eiffel_syntax_inits	.\syntax\eiffel.vim	/^    let did_eiffel_syntax_inits = 1$/;"	v
did_elf_syn_inits	.\syntax\elf.vim	/^		let did_elf_syn_inits = 1$/;"	v
did_elmfilt_syntax_inits	.\syntax\elmfilt.vim	/^    let did_elmfilt_syntax_inits = 1$/;"	v
did_erlang_inits	.\syntax\erlang.vim	/^        let did_erlang_inits = 1$/;"	v
did_esqlc_syntax_inits	.\syntax\esqlc.vim	/^    let did_esqlc_syntax_inits = 1$/;"	v
did_esterel_syntax_inits	.\syntax\esterel.vim	/^    let did_esterel_syntax_inits = 1$/;"	v
did_exim_syntax_inits	.\syntax\exim.vim	/^		let did_exim_syntax_inits = 1$/;"	v
did_expect_syntax_inits	.\syntax\expect.vim	/^    let did_expect_syntax_inits = 1$/;"	v
did_exports_syntax_inits	.\syntax\exports.vim	/^    let did_exports_syntax_inits = 1$/;"	v
did_fdcc_syn_inits	.\syntax\fdcc.vim	/^    let did_fdcc_syn_inits = 1$/;"	v
did_fgl_syntax_inits	.\syntax\fgl.vim	/^    let did_fgl_syntax_inits = 1$/;"	v
did_focexec_syntax_inits	.\syntax\focexec.vim	/^    let did_focexec_syntax_inits = 1$/;"	v
did_form_syn_inits	.\syntax\form.vim	/^    let did_form_syn_inits = 1$/;"	v
did_forth_syn_inits	.\syntax\forth.vim	/^	let did_forth_syn_inits = 1$/;"	v
did_fortran_syn_inits	.\syntax\fortran.vim	/^    let did_fortran_syn_inits = 1$/;"	v
did_foxpro_syn_inits	.\syntax\foxpro.vim	/^	let did_foxpro_syn_inits = 1$/;"	v
did_gdb_syn_inits	.\syntax\gdb.vim	/^    let did_gdb_syn_inits = 1$/;"	v
did_gdmo_syntax_inits	.\syntax\gdmo.vim	/^    let did_gdmo_syntax_inits = 1$/;"	v
did_gedcom_syntax_inits	.\syntax\gedcom.vim	/^    let did_gedcom_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	.\syntax\gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_gp_syn_inits	.\syntax\gp.vim	/^    let did_gp_syn_inits = 1$/;"	v
did_groovy_syn_inits	.\syntax\groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_gs_syn_inits	.\syntax\grads.vim	/^	let did_gs_syn_inits = 1$/;"	v
did_gtkrc_syntax_inits	.\syntax\gkrellmrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_gtkrc_syntax_inits	.\syntax\gtkrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_hamster_syn_inits	.\syntax\hamster.vim	/^        let did_hamster_syn_inits = 1$/;"	v
did_hb_syntax_inits	.\syntax\hb.vim	/^    let did_hb_syntax_inits = 1$/;"	v
did_hercules_syntax_inits	.\syntax\hercules.vim	/^    let did_hercules_syntax_inits = 1$/;"	v
did_hex_syntax_inits	.\syntax\hex.vim	/^    let did_hex_syntax_inits = 1$/;"	v
did_hitachi_syntax_inits	.\syntax\asmh8300.vim	/^    let did_hitachi_syntax_inits = 1$/;"	v
did_hog_syn_inits	.\syntax\hog.vim	/^    let did_hog_syn_inits = 1$/;"	v
did_hs_syntax_inits	.\syntax\haskell.vim	/^    let did_hs_syntax_inits = 1$/;"	v
did_html_syn_inits	.\syntax\html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_htmlos_syn_inits	.\syntax\htmlos.vim	/^    let did_htmlos_syn_inits = 1$/;"	v
did_ia64_syn_inits	.\syntax\ia64.vim	/^		let did_ia64_syn_inits = 1$/;"	v
did_icon_syn_inits	.\syntax\icon.vim	/^    let did_icon_syn_inits = 1$/;"	v
did_idl_syntax_inits	.\syntax\idl.vim	/^  let did_idl_syntax_inits = 1$/;"	v
did_idlang_syn_inits	.\syntax\idlang.vim	/^    let did_idlang_syn_inits = 1$/;"	v
did_indent_on	.\indent.vim	/^let did_indent_on = 1$/;"	v
did_inform_syn_inits	.\syntax\inform.vim	/^    let did_inform_syn_inits = 1$/;"	v
did_inittab_syntax_inits	.\syntax\inittab.vim	/^    let did_inittab_syntax_inits = 1$/;"	v
did_install_default_menus	.\menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	.\menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_is_syntax_inits	.\syntax\ishd.vim	/^    let did_is_syntax_inits = 1$/;"	v
did_iss_syntax_inits	.\syntax\iss.vim	/^    let did_iss_syntax_inits = 1$/;"	v
did_jal_syn_inits	.\syntax\jal.vim	/^  let did_jal_syn_inits = 1$/;"	v
did_jam_syn_inits	.\syntax\jam.vim	/^    let did_jam_syn_inits = 1$/;"	v
did_jargon_syntax_inits	.\syntax\jargon.vim	/^		let did_jargon_syntax_inits = 1$/;"	v
did_java_syn_inits	.\syntax\java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_javascript_syn_inits	.\syntax\javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jess_syntax_inits	.\syntax\jess.vim	/^    let did_jess_syntax_inits = 1$/;"	v
did_jgraph_syn_inits	.\syntax\jgraph.vim	/^    let did_jgraph_syn_inits = 1$/;"	v
did_jproperties_syntax_inits	.\syntax\jproperties.vim	/^    let did_jproperties_syntax_inits = 1$/;"	v
did_jsp_syn_inits	.\syntax\jsp.vim	/^    let did_jsp_syn_inits = 1$/;"	v
did_kix_syn_inits	.\syntax\kix.vim	/^		let did_kix_syn_inits=1$/;"	v
did_kscript_syntax_inits	.\syntax\kscript.vim	/^    let did_kscript_syntax_inits = 1$/;"	v
did_kwt_syn_inits	.\syntax\kwt.vim	/^	let did_kwt_syn_inits = 1$/;"	v
did_lace_syntax_inits	.\syntax\lace.vim	/^    let did_lace_syntax_inits = 1$/;"	v
did_latte_syntax_inits	.\syntax\latte.vim	/^    let did_latte_syntax_inits = 1$/;"	v
did_ldif_syn_inits	.\syntax\ldif.vim	/^    let did_ldif_syn_inits = 1$/;"	v
did_lifelines_syn_inits	.\syntax\lifelines.vim	/^    let did_lifelines_syn_inits = 1$/;"	v
did_lilo_syntax_inits	.\syntax\lilo.vim	/^    let did_lilo_syntax_inits = 1$/;"	v
did_lite_syn_inits	.\syntax\lite.vim	/^    let did_lite_syn_inits = 1$/;"	v
did_load_filetypes	.\filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_ftplugin	.\ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_logtalk_syn_inits	.\syntax\logtalk.vim	/^		let did_logtalk_syn_inits = 1$/;"	v
did_lotos_syntax_inits	.\syntax\lotos.vim	/^    let did_lotos_syntax_inits = 1$/;"	v
did_lout_syn_inits	.\syntax\lout.vim	/^		let did_lout_syn_inits = 1$/;"	v
did_lpc_syn_inits	.\syntax\lpc.vim	/^    let did_lpc_syn_inits = 1$/;"	v
did_lprolog_syntax_inits	.\syntax\lprolog.vim	/^    let did_lprolog_syntax_inits = 1$/;"	v
did_lscript_syntax_inits	.\syntax\lscript.vim	/^    let did_lscript_syntax_inits = 1$/;"	v
did_lss_syntax_inits	.\syntax\lss.vim	/^    let did_lss_syntax_inits = 1$/;"	v
did_lua_syntax_inits	.\syntax\lua.vim	/^    let did_lua_syntax_inits = 1$/;"	v
did_m4_syn_inits	.\syntax\m4.vim	/^    let did_m4_syn_inits = 1$/;"	v
did_macro_syntax_inits	.\syntax\vmasm.vim	/^    let did_macro_syntax_inits = 1$/;"	v
did_mailcap_syntax_inits	.\syntax\mailcap.vim	/^    let did_mailcap_syntax_inits = 1$/;"	v
did_make_syn_inits	.\syntax\make.vim	/^    let did_make_syn_inits = 1$/;"	v
did_man_syn_inits	.\syntax\man.vim	/^    let did_man_syn_inits = 1$/;"	v
did_maplev_syntax_inits	.\syntax\maple.vim	/^    let did_maplev_syntax_inits = 1$/;"	v
did_masm_syntax_inits	.\syntax\masm.vim	/^    let did_masm_syntax_inits = 1$/;"	v
did_mason_syn_inits	.\syntax\mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_master_syntax_inits	.\syntax\master.vim	/^    let did_master_syntax_inits = 1$/;"	v
did_matlab_syntax_inits	.\syntax\matlab.vim	/^    let did_matlab_syntax_inits = 1$/;"	v
did_maxima_syntax_inits	.\syntax\maxima.vim	/^    let did_maxima_syntax_inits = 1$/;"	v
did_mel_syntax_inits	.\syntax\mel.vim	/^    let did_mel_syntax_inits = 1$/;"	v
did_menu_trans	.\lang\menu_af_af.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ca_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_chinese_gb.936.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_chinese_taiwan.950.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_cs_cz.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_czech_czech_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_czech_czech_republic.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_de_de.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_en_gb.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_eo.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_es_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_fi_fi.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_fr_fr.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_hu_hu.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_hu_hu.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_it_it.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ja_jp.euc-jp.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ja_jp.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_japanese_japan.932.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ko_kr.euckr.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ko_kr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_nl_nl.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_no_no.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_pl_pl.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_pl_pl.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_polish_poland.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_pt_br.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_pt_pt.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ru_ru.koi8-r.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_ru_ru.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sk_sk.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sl_si.cp1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sl_si.latin2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sl_si.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_slovak_slovak_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sr_rs.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sr_rs.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sr_rs.iso_8859-5.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sr_rs.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_sv_se.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_uk_ua.cp1251.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_uk_ua.koi8-u.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_vi_vn.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_zh_cn.gb2312.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_zh_cn.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	.\lang\menu_zh_tw.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_mf_syntax_inits	.\syntax\mf.vim	/^    let did_mf_syntax_inits = 1$/;"	v
did_mgl_syn_inits	.\syntax\mgl.vim	/^    let did_mgl_syn_inits = 1$/;"	v
did_mgp_syn_inits	.\syntax\mgp.vim	/^    let did_mgp_syn_inits = 1$/;"	v
did_mgp_syn_inits	.\syntax\mgp.vim	/^  let did_mgp_syn_inits = 1$/;"	v
did_mma_syn_inits	.\syntax\mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_mmix_syntax_inits	.\syntax\mmix.vim	/^    let did_mmix_syntax_inits = 1$/;"	v
did_mmp_syntax_inits	.\syntax\mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_modsim3_syntax_inits	.\syntax\modsim3.vim	/^    let did_modsim3_syntax_inits = 1$/;"	v
did_modula2_syntax_inits	.\syntax\modula2.vim	/^    let did_modula2_syntax_inits = 1$/;"	v
did_modula3_syntax_inits	.\syntax\modula3.vim	/^    let did_modula3_syntax_inits = 1$/;"	v
did_monk_syntax_inits	.\syntax\monk.vim	/^    let did_monk_syntax_inits = 1$/;"	v
did_mp_syntax_inits	.\syntax\mp.vim	/^    let did_mp_syntax_inits = 1$/;"	v
did_msidl_syntax_inits	.\syntax\msidl.vim	/^    let did_msidl_syntax_inits = 1$/;"	v
did_msql_syn_inits	.\syntax\msql.vim	/^    let did_msql_syn_inits = 1$/;"	v
did_mupad_syntax_inits	.\syntax\mupad.vim	/^    let did_mupad_syntax_inits = 1$/;"	v
did_mush_syntax_inits	.\syntax\mush.vim	/^    let did_mush_syntax_inits = 1$/;"	v
did_muttrc_syntax_inits	.\syntax\muttrc.vim	/^    let did_muttrc_syntax_inits = 1$/;"	v
did_mysql_syn_inits	.\syntax\mysql.vim	/^    let did_mysql_syn_inits = 1$/;"	v
did_named_syn_inits	.\syntax\named.vim	/^    let did_named_syn_inits = 1$/;"	v
did_nasm_syntax_inits	.\syntax\nasm.vim	/^    let did_nasm_syntax_inits = 1$/;"	v
did_nastran_syntax_inits	.\syntax\nastran.vim	/^     let did_nastran_syntax_inits = 1$/;"	v
did_natural_syntax_inits	.\syntax\natural.vim	/^    let did_natural_syntax_inits = 1$/;"	v
did_ncf_syntax_inits	.\syntax\ncf.vim	/^	let did_ncf_syntax_inits = 1$/;"	v
did_nqc_syn_inits	.\syntax\nqc.vim	/^    let did_nqc_syn_inits = 1$/;"	v
did_nroff_syn_inits	.\syntax\nroff.vim	/^		let did_nroff_syn_inits = 1$/;"	v
did_nsys_syn_inits	.\syntax\nsis.vim	/^    let did_nsys_syn_inits = 1$/;"	v
did_objc_syntax_inits	.\syntax\objc.vim	/^    let did_objc_syntax_inits = 1$/;"	v
did_ocaml_syntax_inits	.\syntax\ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_occam_syntax_inits	.\syntax\occam.vim	/^    let did_occam_syntax_inits = 1$/;"	v
did_omnimark_syntax_inits	.\syntax\omnimark.vim	/^    let did_omnimark_syntax_inits = 1$/;"	v
did_openroad_syntax_inits	.\syntax\openroad.vim	/^		let did_openroad_syntax_inits = 1$/;"	v
did_optwin_syntax_inits	.\optwin.vim	/^    let did_optwin_syntax_inits = 1$/;"	v
did_ora_syn_inits	.\syntax\ora.vim	/^    let did_ora_syn_inits = 1$/;"	v
did_pascal_syn_inits	.\syntax\pascal.vim	/^    let did_pascal_syn_inits = 1$/;"	v
did_pcap_syntax_inits	.\syntax\pcap.vim	/^    let did_pcap_syntax_inits = 1$/;"	v
did_pccts_syntax_inits	.\syntax\pccts.vim	/^    let did_pccts_syntax_inits = 1$/;"	v
did_perl6_syntax_inits	.\syntax\perl6.vim	/^        let did_perl6_syntax_inits = 1$/;"	v
did_php_syn_inits	.\syntax\php.vim	/^    let did_php_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	.\syntax\pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_pike_syntax_inits	.\syntax\pike.vim	/^    let did_pike_syntax_inits = 1$/;"	v
did_pilrc_syntax_inits	.\syntax\pilrc.vim	/^	let did_pilrc_syntax_inits = 1$/;"	v
did_pine_syn_inits	.\syntax\pine.vim	/^    let did_pine_syn_inits = 1$/;"	v
did_plm_syntax_inits	.\syntax\plm.vim	/^    let did_plm_syntax_inits = 1$/;"	v
did_plsql_syn_inits	.\syntax\plsql.vim	/^    let did_plsql_syn_inits = 1$/;"	v
did_po_syn_inits	.\syntax\po.vim	/^    let did_po_syn_inits = 1$/;"	v
did_pod_syntax_inits	.\syntax\pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_postscr_syntax_inits	.\syntax\postscr.vim	/^    let did_postscr_syntax_inits = 1$/;"	v
did_ppwiz_syn_inits	.\syntax\ppwiz.vim	/^		let did_ppwiz_syn_inits = 1$/;"	v
did_prescribe_syn_inits	.\syntax\prescribe.vim	/^    let did_prescribe_syn_inits = 1$/;"	v
did_procmail_syntax_inits	.\syntax\procmail.vim	/^    let did_procmail_syntax_inits = 1$/;"	v
did_progress_syntax_inits	.\syntax\progress.vim	/^	let did_progress_syntax_inits = 1$/;"	v
did_prolog_syn_inits	.\syntax\prolog.vim	/^    let did_prolog_syn_inits = 1$/;"	v
did_psf_syntax_inits	.\syntax\psf.vim	/^    let did_psf_syntax_inits = 1$/;"	v
did_ptcap_syntax_inits	.\syntax\ptcap.vim	/^	let did_ptcap_syntax_inits = 1$/;"	v
did_purifyLog_syntax_inits	.\syntax\purifylog.vim	/^    let did_purifyLog_syntax_inits = 1$/;"	v
did_pyrex_syntax_inits	.\syntax\pyrex.vim	/^    let did_pyrex_syntax_inits = 1$/;"	v
did_python_syn_inits	.\syntax\python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_r_syn_inits	.\syntax\eviews.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	.\syntax\gretl.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	.\syntax\r.vim	/^    let did_r_syn_inits = 1$/;"	v
did_radiance_syn_inits	.\syntax\radiance.vim	/^    let did_radiance_syn_inits = 1$/;"	v
did_ratpoison_syn_inits	.\syntax\ratpoison.vim	/^    let did_ratpoison_syn_inits = 1$/;"	v
did_rc_syntax_inits	.\syntax\rc.vim	/^    let did_rc_syntax_inits = 1$/;"	v
did_rcs_syn_inits	.\syntax\rcs.vim	/^    let did_rcs_syn_inits = 1$/;"	v
did_rcslog_syntax_inits	.\syntax\rcslog.vim	/^    let did_rcslog_syntax_inits = 1$/;"	v
did_rebol_syntax_inits	.\syntax\rebol.vim	/^    let did_rebol_syntax_inits = 1$/;"	v
did_registry_syntax_inits	.\syntax\registry.vim	/^    let did_registry_syntax_inits = 1$/;"	v
did_remind_syn_inits	.\syntax\remind.vim	/^    let did_remind_syn_inits = 1$/;"	v
did_reva_syntax_inits	.\syntax\reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rexx_syn_inits	.\syntax\rexx.vim	/^    let did_rexx_syn_inits = 1$/;"	v
did_rhelp_syntax_inits	.\syntax\rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_rib_syntax_inits	.\syntax\rib.vim	/^    let did_rib_syntax_inits = 1$/;"	v
did_robots_syntax_inits	.\syntax\robots.vim	/^    let did_robots_syntax_inits = 1$/;"	v
did_rpcgen_syntax_inits	.\syntax\rpcgen.vim	/^    let did_rpcgen_syntax_inits = 1$/;"	v
did_rpl_syntax_inits	.\syntax\rpl.vim	/^    let did_rpl_syntax_inits = 1$/;"	v
did_rtf_syntax_inits	.\syntax\rtf.vim	/^    let did_rtf_syntax_inits = 1$/;"	v
did_samba_syn_inits	.\syntax\samba.vim	/^    let did_samba_syn_inits = 1$/;"	v
did_sas_syntax_inits	.\syntax\sas.vim	/^      let did_sas_syntax_inits = 1$/;"	v
did_sather_syn_inits	.\syntax\sather.vim	/^    let did_sather_syn_inits = 1$/;"	v
did_scheme_syntax_inits	.\syntax\scheme.vim	/^    let did_scheme_syntax_inits = 1$/;"	v
did_scilab_syntax_inits	.\syntax\scilab.vim	/^		let did_scilab_syntax_inits = 1$/;"	v
did_sdl_syn_inits	.\syntax\sdl.vim	/^	let did_sdl_syn_inits = 1$/;"	v
did_sed_syntax_inits	.\syntax\sed.vim	/^	let did_sed_syntax_inits = 1$/;"	v
did_sgmldecl_syntax_init	.\syntax\sgmldecl.vim	/^    let did_sgmldecl_syntax_init = 1$/;"	v
did_sgmllnx_syn_inits	.\syntax\sgmllnx.vim	/^    let did_sgmllnx_syn_inits = 1$/;"	v
did_sicad_syntax_inits	.\syntax\sicad.vim	/^    let did_sicad_syntax_inits = 1$/;"	v
did_simula_syntax_inits	.\syntax\simula.vim	/^	let did_simula_syntax_inits = 1$/;"	v
did_sinda_syntax_inits	.\syntax\sinda.vim	/^    let did_sinda_syntax_inits = 1$/;"	v
did_sindacmp_syntax_inits	.\syntax\sindacmp.vim	/^    let did_sindacmp_syntax_inits = 1$/;"	v
did_sindaout_syntax_inits	.\syntax\sindaout.vim	/^    let did_sindaout_syntax_inits = 1$/;"	v
did_skill_syntax_inits	.\syntax\skill.vim	/^    let did_skill_syntax_inits = 1$/;"	v
did_sl_syntax_inits	.\syntax\sl.vim	/^    let did_sl_syntax_inits = 1$/;"	v
did_slang_syntax_inits	.\syntax\slang.vim	/^    let did_slang_syntax_inits = 1$/;"	v
did_slice_syn_inits	.\syntax\slice.vim	/^    let did_slice_syn_inits = 1$/;"	v
did_slrnrc_syntax_inits	.\syntax\slrnrc.vim	/^    let did_slrnrc_syntax_inits = 1$/;"	v
did_slrnsc_syntax_inits	.\syntax\slrnsc.vim	/^    let did_slrnsc_syntax_inits = 1$/;"	v
did_smarty_syn_inits	.\syntax\smarty.vim	/^    let did_smarty_syn_inits = 1$/;"	v
did_smil_syntax_inits	.\syntax\sm.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smil_syntax_inits	.\syntax\smil.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smith_syntax_inits	.\syntax\smith.vim	/^    let did_smith_syntax_inits = 1$/;"	v
did_sml_syntax_inits	.\syntax\sml.vim	/^    let did_sml_syntax_inits = 1$/;"	v
did_snnsnet_syn_inits	.\syntax\snnsnet.vim	/^    let did_snnsnet_syn_inits = 1$/;"	v
did_snnspat_syn_inits	.\syntax\snnspat.vim	/^    let did_snnspat_syn_inits = 1$/;"	v
did_snnsres_syn_inits	.\syntax\snnsres.vim	/^    let did_snnsres_syn_inits = 1$/;"	v
did_snobol4_syntax_inits	.\syntax\snobol4.vim	/^    let did_snobol4_syntax_inits = 1$/;"	v
did_spec_syntax_inits	.\syntax\spec.vim	/^    let did_spec_syntax_inits = 1$/;"	v
did_specman_syn_inits	.\syntax\specman.vim	/^    let did_specman_syn_inits = 1$/;"	v
did_spice_syntax_inits	.\syntax\spice.vim	/^    let did_spice_syntax_inits = 1$/;"	v
did_splint_syntax_inits	.\syntax\splint.vim	/^    let did_splint_syntax_inits = 1$/;"	v
did_spup_syn_inits	.\syntax\spup.vim	/^		let did_spup_syn_inits = 1$/;"	v
did_sql_syn_inits	.\syntax\sqlanywhere.vim	/^        let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	.\syntax\sqlinformix.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	.\syntax\sqloracle.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sqlforms_syn_inits	.\syntax\sqlforms.vim	/^	let did_sqlforms_syn_inits = 1$/;"	v
did_sqlj_syn_inits	.\syntax\sqlj.vim	/^    let did_sqlj_syn_inits = 1$/;"	v
did_sqr_syn_inits	.\syntax\sqr.vim	/^    let did_sqr_syn_inits = 1$/;"	v
did_squid_syntax_inits	.\syntax\squid.vim	/^    let did_squid_syntax_inits = 1$/;"	v
did_sshconfig_syntax_inits	.\syntax\sshconfig.vim	/^    let did_sshconfig_syntax_inits = 1$/;"	v
did_sshdconfig_syntax_inits	.\syntax\sshdconfig.vim	/^    let did_sshdconfig_syntax_inits = 1$/;"	v
did_st_syntax_inits	.\syntax\st.vim	/^    let did_st_syntax_inits = 1$/;"	v
did_stp_syn_inits	.\syntax\stp.vim	/^    let did_stp_syn_inits = 1$/;"	v
did_strace_syntax_inits	.\syntax\strace.vim	/^		let did_strace_syntax_inits = 1$/;"	v
did_svn_syn_inits	.\syntax\svn.vim	/^    let did_svn_syn_inits = 1$/;"	v
did_tads_syn_inits	.\syntax\tads.vim	/^    let did_tads_syn_inits = 1$/;"	v
did_tak_syntax_inits	.\syntax\tak.vim	/^    let did_tak_syntax_inits = 1$/;"	v
did_takcmp_syntax_inits	.\syntax\takcmp.vim	/^    let did_takcmp_syntax_inits = 1$/;"	v
did_takout_syntax_inits	.\syntax\takout.vim	/^    let did_takout_syntax_inits = 1$/;"	v
did_tasm_syntax_inits	.\syntax\tasm.vim	/^    let did_tasm_syntax_inits = 1$/;"	v
did_tcl_syntax_inits	.\syntax\tcl.vim	/^    let did_tcl_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\syntax\lhaskell.vim	/^    let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\syntax\tex.vim	/^ let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	.\syntax\tex.vim	/^ let did_tex_syntax_inits= 2$/;"	v
did_texinfo_syn_inits	.\syntax\texinfo.vim	/^    let did_texinfo_syn_inits = 1$/;"	v
did_texmf_syntax_inits	.\syntax\texmf.vim	/^    let did_texmf_syntax_inits = 1$/;"	v
did_tf_syn_inits	.\syntax\tf.vim	/^    let did_tf_syn_inits = 1$/;"	v
did_tidy_syn_inits	.\syntax\tidy.vim	/^    let did_tidy_syn_inits = 1$/;"	v
did_tli_syntax_inits	.\syntax\tli.vim	/^    let did_tli_syntax_inits = 1$/;"	v
did_toolbar_tmenu	.\menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tpp_syn_inits	.\syntax\tpp.vim	/^    let did_tpp_syn_inits = 1$/;"	v
did_trasys_syntax_inits	.\syntax\trasys.vim	/^    let did_trasys_syntax_inits = 1$/;"	v
did_tsalt_syntax_inits	.\syntax\tsalt.vim	/^    let did_tsalt_syntax_inits = 1$/;"	v
did_tsscl_syntax_inits	.\syntax\tsscl.vim	/^    let did_tsscl_syntax_inits = 1$/;"	v
did_tssgm_syntax_inits	.\syntax\tssgm.vim	/^    let did_tssgm_syntax_inits = 1$/;"	v
did_tssop_syntax_inits	.\syntax\tssop.vim	/^    let did_tssop_syntax_inits = 1$/;"	v
did_uc_syntax_inits	.\syntax\uc.vim	/^    let did_uc_syntax_inits = 1$/;"	v
did_uil_syn_inits	.\syntax\uil.vim	/^    let did_uil_syn_inits = 1$/;"	v
did_vb_syntax_inits	.\syntax\vb.vim	/^		let did_vb_syntax_inits = 1$/;"	v
did_vera_syn_inits	.\syntax\vera.vim	/^    let did_vera_syn_inits = 1$/;"	v
did_verilog_syn_inits	.\syntax\verilog.vim	/^      let did_verilog_syn_inits = 1$/;"	v
did_verilogams_syn_inits	.\syntax\verilogams.vim	/^      let did_verilogams_syn_inits = 1$/;"	v
did_vhdl_syntax_inits	.\syntax\vhdl.vim	/^    let did_vhdl_syntax_inits = 1$/;"	v
did_virata_syntax_inits	.\syntax\virata.vim	/^    let did_virata_syntax_inits = 1$/;"	v
did_vsejcl_syntax	.\syntax\vsejcl.vim	/^    let did_vsejcl_syntax = 1$/;"	v
did_wdiff_syn_inits	.\syntax\wdiff.vim	/^    let did_wdiff_syn_inits = 1$/;"	v
did_wdiff_syn_inits	.\syntax\wdiff.vim	/^  let did_wdiff_syn_inits = 1$/;"	v
did_webmacro_syn_inits	.\syntax\webmacro.vim	/^    let did_webmacro_syn_inits = 1$/;"	v
did_wget_syn_inits	.\syntax\wget.vim	/^    let did_wget_syn_inits = 1$/;"	v
did_winbatch_syntax_inits	.\syntax\winbatch.vim	/^    let did_winbatch_syntax_inits = 1$/;"	v
did_wml_syn_inits	.\syntax\wml.vim	/^    let did_wml_syn_inits = 1$/;"	v
did_wml_syn_inits	.\syntax\wml.vim	/^  let did_wml_syn_inits = 1$/;"	v
did_wsml_syn_inits	.\syntax\wsml.vim	/^       let did_wsml_syn_inits = 1$/;"	v
did_xdefaults_syntax_inits	.\syntax\xdefaults.vim	/^    let did_xdefaults_syntax_inits = 1$/;"	v
did_xkb_syntax_inits	.\syntax\xkb.vim	/^		let did_xkb_syntax_inits = 1$/;"	v
did_xmath_syntax_inits	.\syntax\xmath.vim	/^    let did_xmath_syntax_inits = 1$/;"	v
did_xpm2_syntax_inits	.\syntax\xpm2.vim	/^    let did_xpm2_syntax_inits = 1$/;"	v
did_xpm_syntax_inits	.\syntax\xpm.vim	/^    let did_xpm_syntax_inits = 1$/;"	v
did_xxd_syntax_inits	.\syntax\xxd.vim	/^    let did_xxd_syntax_inits = 1$/;"	v
did_z8a_syntax_inits	.\syntax\z8a.vim	/^    let did_z8a_syntax_inits = 1$/;"	v
diffcomplete	.\ftplugin\gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
dodigits	.\ftplugin\pdf.vim	/^function! s:dodigits(digits)$/;"	f
dolu	.\tutor\tutor.cs	/^  2. Dr¾ klávesu pro pohyb dolu (j), dokud se její funkce nezopakuje.$/;"	m
doobject	.\ftplugin\pdf.vim	/^function! s:doobject(string)$/;"	f
dosbatch_cmdextversion	.\syntax\dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
doxygengroup	.\syntax\doxygen.vim	/^    aug doxygengroup$/;"	a
dprint	.\autoload\rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dtd_cpo_save__	.\syntax\dtd.vim	/^    let __dtd_cpo_save__ = &cpo$/;"	v
e	.\macros\less.vim	/^map e <CR>$/;"	m
echogets	.\tools\ccfilter.c	/^char *echogets(char *s, int echo) {$/;"	f
encoding	.\keymap\hebrew.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	.\keymap\hebrew.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	.\keymap\hebrew.vim	/^let encoding = &enc$/;"	v
encoding	.\keymap\hebrewp.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	.\keymap\hebrewp.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	.\keymap\hebrewp.vim	/^let encoding = &enc$/;"	v
encoding	.\keymap\persian.vim	/^	let encoding = 'utf-8'$/;"	v
encoding	.\keymap\persian.vim	/^let encoding = &enc$/;"	v
encoding	.\keymap\polish-slash.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\keymap\polish-slash.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\keymap\polish-slash.vim	/^let encoding = &enc$/;"	v
encoding	.\keymap\serbian.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\keymap\serbian.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\keymap\serbian.vim	/^let encoding = &enc$/;"	v
encoding	.\keymap\slovak.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	.\keymap\slovak.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	.\keymap\slovak.vim	/^let encoding = &enc$/;"	v
end	.\vimtutor.bat	/^:end$/;"	l
escape	.\autoload\gzip.vim	/^fun s:escape(name)$/;"	f
f	.\macros\less.vim	/^map f <Space>$/;"	m
filename	.\indent\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	.\indent\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	.\indent\sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	.\syntax\sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	.\syntax\sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	.\syntax\sql.vim	/^let filename = 'sqloracle'$/;"	v
filetypedetect	.\filetype.vim	/^augroup filetypedetect$/;"	a
filetypeindent	.\indent.vim	/^augroup filetypeindent$/;"	a
filetypeplugin	.\ftplugin.vim	/^augroup filetypeplugin$/;"	a
find_continued_lnum	.\indent\sh.vim	/^function! s:find_continued_lnum(lnum)$/;"	f
first_line	.\ftplugin\changelog.vim	/^  function! s:first_line(string)$/;"	f
fix_beginfigs	.\ftplugin\mp.vim	/^  function! s:fix_beginfigs()$/;"	f
fortran_free_source	.\syntax\sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	.\syntax\tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	.\syntax\trasys.vim	/^let fortran_free_source=1$/;"	v
g	.\macros\less.vim	/^noremap <script> g gg<SID>L$/;"	m
g%	.\macros\matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	.\macros\matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	.\macros\matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:GetLatestVimScripts_allowautoinstall	.\autoload\getscript.vim	/^ let g:GetLatestVimScripts_allowautoinstall= 1$/;"	v
g:GetLatestVimScripts_mv	.\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "mv"$/;"	v
g:GetLatestVimScripts_mv	.\autoload\getscript.vim	/^   let g:GetLatestVimScripts_mv= "ren"$/;"	v
g:GetLatestVimScripts_options	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options = ""$/;"	v
g:GetLatestVimScripts_options	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= ""$/;"	v
g:GetLatestVimScripts_options	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-q -O"$/;"	v
g:GetLatestVimScripts_options	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_options= "-s -O"$/;"	v
g:GetLatestVimScripts_wget	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget    = 'echo "GetLatestVimScripts needs wget or curl"'$/;"	v
g:GetLatestVimScripts_wget	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "curl"$/;"	v
g:GetLatestVimScripts_wget	.\autoload\getscript.vim	/^  let g:GetLatestVimScripts_wget= "wget"$/;"	v
g:ada#Comment	.\autoload\ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	.\autoload\ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	.\autoload\ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	.\autoload\ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\autoload\ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\autoload\ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	.\autoload\ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	.\autoload\ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_default_compiler	.\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	.\ftplugin\ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:bmenu_max_pathlen	.\menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:changelog_date_end_entry_search	.\ftplugin\changelog.vim	/^    let g:changelog_date_end_entry_search = '^\\s*$'$/;"	v
g:changelog_date_entry_search	.\ftplugin\changelog.vim	/^    let g:changelog_date_entry_search = '^\\s*%d\\_s*%u'$/;"	v
g:changelog_dateformat	.\ftplugin\changelog.vim	/^      let g:changelog_dateformat = "%Y-%m-%d"$/;"	v
g:changelog_dateformat	.\ftplugin\changelog.vim	/^      let g:changelog_dateformat = g:changelog_timeformat$/;"	v
g:changelog_new_date_format	.\ftplugin\changelog.vim	/^    let g:changelog_new_date_format = "%d  %u\\n\\n\\t* %c\\n\\n"$/;"	v
g:changelog_new_entry_format	.\ftplugin\changelog.vim	/^    let g:changelog_new_entry_format = "\\t* %c"$/;"	v
g:colors_name	.\colors\blue.vim	/^let g:colors_name = "blue"$/;"	v
g:colors_name	.\colors\desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	.\colors\elflord.vim	/^let g:colors_name = "elflord"$/;"	v
g:colors_name	.\colors\koehler.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	.\colors\molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	.\colors\murphy.vim	/^let g:colors_name = "murphy"$/;"	v
g:colors_name	.\colors\pablo.vim	/^let g:colors_name = "pablo"$/;"	v
g:colors_name	.\colors\ron.vim	/^let g:colors_name = "ron"$/;"	v
g:colors_name	.\colors\torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	.\colors\zellner.vim	/^let g:colors_name = "zellner"$/;"	v
g:context_include	.\syntax\context.vim	/^  let g:context_include = ['mp', 'javascript', 'xml']$/;"	v
g:ctags_command	.\menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	.\menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:cucumber_languages	.\syntax\cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:debchangelog_listbugs_severities	.\ftplugin\debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishlist'$/;"	v
g:decada	.\compiler\decada.vim	/^   let g:decada = decada#New ()$/;"	v
g:did_changelog_ftplugin	.\ftplugin\debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	.\ftplugin\cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ocaml_switch	.\ftplugin\ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	.\ftplugin\ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:doxygen_end_punctuation	.\syntax\doxygen.vim	/^      let g:doxygen_end_punctuation='[.]'$/;"	v
g:eruby_default_subtype	.\ftplugin\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	.\syntax\eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:ft_ignore_pat	.\filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	.\ftplugin\sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	.\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	.\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	.\ftplugin\sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	.\ftplugin\sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:getscript_cygwin	.\autoload\getscript.vim	/^   let g:getscript_cygwin= 0$/;"	v
g:getscript_cygwin	.\autoload\getscript.vim	/^   let g:getscript_cygwin= 1$/;"	v
g:getscript_cygwin	.\autoload\getscript.vim	/^  let g:getscript_cygwin= 0$/;"	v
g:gnat	.\compiler\gnat.vim	/^   let g:gnat = gnat#New ()$/;"	v
g:haml_self_closing_tags	.\indent\haml.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:is_kornshell	.\syntax\sh.vim	/^   let g:is_kornshell= g:is_posix$/;"	v
g:liquid_default_subtype	.\ftplugin\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	.\syntax\liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	.\syntax\liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_2html_plugin	.\plugin\tohtml.vim	/^let g:loaded_2html_plugin = 'vim7.3_v6'$/;"	v
g:loaded_getscript	.\autoload\getscript.vim	/^let g:loaded_getscript= "v32"$/;"	v
g:loaded_getscriptPlugin	.\plugin\getscriptPlugin.vim	/^let g:loaded_getscriptPlugin = "v32"$/;"	v
g:loaded_matchparen	.\plugin\matchparen.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_netrw	.\autoload\netrw.vim	/^let g:loaded_netrw = "v140"$/;"	v
g:loaded_netrwFileHandlers	.\autoload\netrwFileHandlers.vim	/^let g:loaded_netrwFileHandlers= "v10"$/;"	v
g:loaded_netrwPlugin	.\plugin\netrwPlugin.vim	/^let g:loaded_netrwPlugin = "v140"$/;"	v
g:loaded_netrwSettings	.\autoload\netrwSettings.vim	/^let g:loaded_netrwSettings = "v13"$/;"	v
g:loaded_sql_completion	.\autoload\sqlcomplete.vim	/^let g:loaded_sql_completion = 100$/;"	v
g:loaded_syntax_completion	.\autoload\syntaxcomplete.vim	/^let g:loaded_syntax_completion = 70$/;"	v
g:loaded_tar	.\autoload\tar.vim	/^let g:loaded_tar= "v26"$/;"	v
g:loaded_tarPlugin	.\plugin\tarPlugin.vim	/^let g:loaded_tarPlugin = "v26"$/;"	v
g:loaded_vimball	.\autoload\vimball.vim	/^let g:loaded_vimball = "v31"$/;"	v
g:loaded_vimballPlugin	.\plugin\vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v31"$/;"	v
g:loaded_zip	.\autoload\zip.vim	/^let g:loaded_zip= "v23"$/;"	v
g:loaded_zipPlugin	.\plugin\zipPlugin.vim	/^let g:loaded_zipPlugin = "v23"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_choices = " &Unikso \\n &Dos \\n &Mak \\n &Rezigni "$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Peru "$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annuler "$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n¥­¥ã¥ó¥»¥ë(&C)"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nã­ã£ã³ã»ã«(&C)"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nLZ(&C)"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nï&ÔÍÅÎÁ"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nÐ&ÑÐ¼ÐµÐ½Ð°"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&PrekliÄi"$/;"	v
g:menutrans_fileformat_choices	.\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Há»§y bá»"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccioneu el format per escriure el fitxer."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_fileformat_dialog = "Wählen Sie ein Datei-Format aus"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Elektu la formaton de la skribonta dosiero."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccione el formato para escribir el archivo"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_dialog = "Anaa tiedoston kirjoitusmuoto."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_dialog = "Choisissez le format dans lequel écrire le fichier."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Válaszd ki a fájl formátumát"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_fileformat_dialog = "VÃ¡laszd ki a fÃ¡jl formÃ¡tumÃ¡t"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_fileformat_dialog = "Scegli formato con cui scrivere il file"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_dialog = "¥Õ¥¡¥¤¥ë½ÐÎÏ¤ÎºÝ¤Î²þ¹Ôµ­¹æ¤Î·Á¼°¤òÁª¤ó¤Ç¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ãã¡ã¤ã«åºåã®éã®æ¹è¡è¨å·ã®å½¢å¼ãé¸ãã§ãã ãã."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_dialog = "t@CoÍÌÛÌüsLÌ`®ðIñÅ­¾³¢."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_fileformat_dialog = "Selecteer formaat voor het schrijven van het bestand"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_fileformat_dialog = "Velg filformat som filen skal lagres med"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w ktÃ³rym ten plik ma byÄ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_pt_br.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_pt_pt.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_dialog = "÷ÙÂÅÒÉÔÅ ÆÏÒÍÁÔ ÆÁÊÌÁ."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_ru_ru.vim	/^let g:menutrans_fileformat_dialog = "ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ°Ð¹Ð»Ð°."$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_dialog = "¸×ÐÑÕàØâÕ Òàáâã ÔÐâÞâÕÚÕ"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ÐÐ·Ð°Ð±ÐµÑÐ¸ÑÐµ Ð²ÑÑÑÑ Ð´Ð°ÑÐ¾ÑÐµÐºÐµ"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_sv_se.latin1.vim	/^let g:menutrans_fileformat_dialog = "Välj filformat som filen ska sparas med"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_fileformat_dialog = "Âèáåð³òü ôîðìàò ôàéëó"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_fileformat_dialog = "÷ÉÂÅÒ¦ÔØ ÆÏÒÍÁÔ ÆÁÊÌÕ"$/;"	v
g:menutrans_fileformat_dialog	.\lang\menu_vi_vn.vim	/^let g:menutrans_fileformat_dialog = "HÃ£y chá»n Äá»nh dáº¡ng táº­p tin."$/;"	v
g:menutrans_help_dialog	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduïu el terme sobre el qual necessiteu ajuda.\\n\\nUseu el prefix i_ per ordres d'entrada (p.ex.: i_CTRL-X)\\nUseu el prefix c_ per ordres de la línia d'ordres (p.ex.: c_<Del>)\\nUseu el prefix ' per noms d'opcions (p.ex.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_help_dialog = "Geben Sie einen Befehl oder ein Wort ein, für das Sie Hilfe benötigen:\\n\\nVerwenden Sie i_ für Eingabe ('input') Befehle (z.B.: i_CTRL-X)\\nVerwenden Sie c_ für Befehls-Zeilen ('command-line') Befehle (z.B.: c_<Del>)\\nVerwenden Sie ' für Options-Namen (z.B.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_help_dialog = "Tajpu komandon aÅ­ serÄendan vorton en la helparo.\\n\\nAldonu i_ por la komandoj de la enmeta reÄimo (ekz: i_CTRL-X)\\nAldonu c_ por redakto de la komanda linio (ekz: c_<Del>)\\nÄirkaÅ­i la opciojn per apostrofoj (ekz: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduzca un nombre de comando o palabra para obtener ayuda;\\n\\nAnteponga i_ para comandos de entrada (e.g.: i_CTRL-X)\\nAnteponga c_ para comandos de la línea de comandos (e.g.: c_<Del>)\\nAnteponga ` para un nombre de opción (e.g.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_help_dialog = "Anna komento tai sana, jota haetaan ohjeesta.\\n\\nAloita i_:llä syöttötilan komentoja varten (esim. i_CTRL-X)\\nAloita c_:llä komentoriviä varten (esim. c_<Del>)\\nKirjoita asetukset puolilainausmerkkeijin (esim. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_help_dialog = "Entrez une commande ou un mot à rechercher dans l'aide.\\n\\nAjoutez i_ pour les commandes du mode Insertion (ex: i_CTRL-X)\\nAjoutez c_ pour l'édition de la ligne de commande (ex: c_<Del>)\\nEntourez les options avec des apostrophes (ex: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_help_dialog = "Batti un comando o una parola per cercare aiuto:\\n\\nPremetti i_ per comandi in modo Input (ad.es.: i_CTRL-X)\\nPremetti c_ per comandi che editano la linea-comandi (ad.es.: c_<Del>)\\nPremetti ' per un nome di opzione (ad.es.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_help_dialog = "¥Ø¥ë¥×¤ò¸¡º÷¤·¤¿¤¤¥³¥Þ¥ó¥É¤â¤·¤¯¤ÏÃ±¸ì¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n\\nÁÞÆþ¥â¡¼¥É¤Î¥³¥Þ¥ó¥É¤Ë¤Ï i_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: i_CTRL-X)\\n¥³¥Þ¥ó¥É¥é¥¤¥óÊÔ½¸¥³¥Þ¥ó¥É¤Ë¤Ï c_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: c_<Del>)\\n¥ª¥×¥·¥ç¥ó¤ÎÌ¾Á°¤Ë¤Ï ' ¤òÉÕ²Ã¤·¤Þ¤¹. (Îã: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_help_dialog = "ãã«ããæ¤ç´¢ãããã³ãã³ããããã¯åèªãå¥åãã¦ãã ãã:\\n\\næ¿å¥ã¢ã¼ãã®ã³ãã³ãã«ã¯ i_ ãåé ­ã«ä»å ãã¾ã. (ä¾: i_CTRL-X)\\nã³ãã³ãã©ã¤ã³ç·¨éã³ãã³ãã«ã¯ c_ ãåé ­ã«ä»å ãã¾ã. (ä¾: c_<Del>)\\nãªãã·ã§ã³ã®ååã«ã¯ ' ãä»å ãã¾ã. (ä¾: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_help_dialog = "wvðõµ½¢R}hàµ­ÍPêðüÍµÄ­¾³¢:\\n\\n}ü[hÌR}hÉÍ i_ ðæªÉtÁµÜ·. (á: i_CTRL-X)\\nR}hCÒWR}hÉÍ c_ ðæªÉtÁµÜ·. (á: c_<Del>)\\nIvVÌ¼OÉÍ ' ðtÁµÜ·. (á: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_help_dialog = "Skriv en kommando eller ord du vil ha hjelp om:\\n\\nLegg til i_ i begynnelsen for inndatametoder (f.eks.: i_CTRL-X)\\nLegg til c_ i begynnelsen for kommandoer som redigerer kommandolinjen (f.eks.: c_<Del>)\\nLegg til ' i begynnelsen for et valgnavn (f.eks.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_pt_br.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\lang\menu_pt_pt.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_help_dialog = "÷×ÅÄÉÔÅ ËÏÍÁÎÄÕ ÉÌÉ ÓÌÏ×Ï ÄÌÑ ÐÏÉÓËÁ:\\n\\näÏÂÁ×ØÔÅ i_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ÒÅÖÉÍÁ ÷ÓÔÁ×ËÉ (ÎÁÐÒÉÍÅÒ, i_CTRL-X)\\näÏÂÁ×ØÔÅ c_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ïÂÙÞÎÏÇÏ ÒÅÖÉÍÁ (ÎÁÐÒÉÍÅÒ, Ó_<Del>)\\näÏÂÁ×ØÔÅ ' ÄÌÑ ÐÏÉÓËÁ ÓÐÒÁ×ËÉ ÐÏ ÏÐÃÉÉ (ÎÁÐÒÉÍÅÒ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_ru_ru.vim	/^let g:menutrans_help_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð¸Ð»Ð¸ ÑÐ»Ð¾Ð²Ð¾ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ°:\\n\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ i_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÑÐµÐ¶Ð¸Ð¼Ð° ÐÑÑÐ°Ð²ÐºÐ¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, i_CTRL-X)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ c_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÐÐ±ÑÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, Ñ_<Del>)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ ' Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ¿ÑÐ°Ð²ÐºÐ¸ Ð¿Ð¾ Ð¾Ð¿ÑÐ¸Ð¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero ¾elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero Å¾elite pomoÄ:\\n\\nUporabite predpono i_ za ukaze v naÄinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	.\lang\menu_vi_vn.vim	/^let g:menutrans_help_dialog = "HÃ£y nháº­p cÃ¢u lá»nh hoáº·c tá»« khÃ³a tÃ¬m kiáº¿m:\\n\\nThÃªm i_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» Nháº­p Input (VÃ­ dá»¥, i_CTRL-X)\\nThÃªm c_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» soáº¡n tháº£o dÃ²ng lá»nh (VÃ­ dá»¥, Ñ_<Del>)\\nThÃªm ' Äá» tÃ¬m kiáº¿m trá»£ giÃºp cho má»t tÃ¹y chá»n (vÃ­ dá»¥, 'shiftwidth')"$/;"	v
g:menutrans_no_file	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_no_file = "[Cap fitxer]"$/;"	v
g:menutrans_no_file	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_no_file = "[Keine Datei]"$/;"	v
g:menutrans_no_file	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_no_file = "[Neniu dosiero]"$/;"	v
g:menutrans_no_file	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_no_file = "[Sin archivo]"$/;"	v
g:menutrans_no_file	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_no_file = "[Ei tiedostoja]"$/;"	v
g:menutrans_no_file	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_no_file = "[Aucun fichier]"$/;"	v
g:menutrans_no_file	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_no_file = "[Senza nome]"$/;"	v
g:menutrans_no_file	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_no_file = "[ÌµÂê]"$/;"	v
g:menutrans_no_file	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_no_file = "[ç¡é¡]"$/;"	v
g:menutrans_no_file	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_no_file = "[³è]"$/;"	v
g:menutrans_no_file	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_no_file = "[Uten navn]"$/;"	v
g:menutrans_no_file	.\lang\menu_pt_br.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	.\lang\menu_pt_pt.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_path_dialog	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduïu les ubicacions on cercar fitxers.\\nSepareu els noms dels directoris amb una coma."$/;"	v
g:menutrans_path_dialog	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_path_dialog = "Geben Sie Such-Pfade für Dateien ein.\\nTrennen Sie die Verzeichnis-Namen durch Kommata."$/;"	v
g:menutrans_path_dialog	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_path_dialog = "Tajpu la vojon de serÄo de dosieroj.\\nDisigu la dosierujojn per komoj."$/;"	v
g:menutrans_path_dialog	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduzca la ruta de búsqueda para los archivos.\\nSepare los nombres de los directorios con una coma."$/;"	v
g:menutrans_path_dialog	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_path_dialog = "Anna tiedostojen hakupolku.\\nErota hakemistot pilkuin."$/;"	v
g:menutrans_path_dialog	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_path_dialog = "Entrez le chemin de recherche des fichiers.\\nSéparez les répertoires par des virgules."$/;"	v
g:menutrans_path_dialog	.\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Írd be a keresett fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_path_dialog	.\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_path_dialog = "Ãrd be a keresett fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_path_dialog	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_path_dialog = "Batti percorso di ricerca per i file.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_path_dialog	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_path_dialog = "¥Õ¥¡¥¤¥ë¤Î¸¡º÷¥Ñ¥¹¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_path_dialog	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_path_dialog = "ãã¡ã¤ã«ã®æ¤ç´¢ãã¹ãå¥åãã¦ãã ãã:\\nãã£ã¬ã¯ããªåã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_path_dialog	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_path_dialog = "t@CÌõpXðüÍµÄ­¾³¢:\\nfBNg¼ÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_path_dialog	.\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_path_dialog = "Typ het zoekpad voor bestanden.\\nGebruik commas tussen de padnamen."$/;"	v
g:menutrans_path_dialog	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_path_dialog = "Skriv søkesti for filer.\\nSkill katalognavn med komma."$/;"	v
g:menutrans_path_dialog	.\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Wprowad¼ ¶cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	.\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_path_dialog = "WprowadÅº ÅcieÅ¼kÄ poszukiwania plikÃ³w.\\nProszÄ rozdzielaÄ nazwy katalogÃ³w przecinkiem."$/;"	v
g:menutrans_path_dialog	.\lang\menu_polish_poland.1250.vim	/^let g:menutrans_path_dialog = "Wprowad cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	.\lang\menu_pt_br.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	.\lang\menu_pt_pt.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_path_dialog = "õËÁÖÉÔÅ ÐÕÔØ ÄÌÑ ÐÏÉÓËÁ ÆÁÊÌÏ×.\\néÍÅÎÁ ËÁÔÁÌÏÇÏ× ÒÁÚÄÅÌÑÀÔÓÑ ÚÁÐÑÔÙÍÉ."$/;"	v
g:menutrans_path_dialog	.\lang\menu_ru_ru.vim	/^let g:menutrans_path_dialog = "Ð£ÐºÐ°Ð¶Ð¸ÑÐµ Ð¿ÑÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ°Ð¹Ð»Ð¾Ð².\\nÐÐ¼ÐµÐ½Ð° ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ð¾Ð² ÑÐ°Ð·Ð´ÐµÐ»ÑÑÑÑÑ Ð·Ð°Ð¿ÑÑÑÐ¼Ð¸."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loÄite z vejico."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_path_dialog = "ÃÝÕáØâÕ ßãâ ßàÕâàÐÓÕ ×Ð ÔÐâÞâÕÚÕ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ ÔØàÕÚâÞàØøãÜÐ."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_path_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¿ÑÑ Ð¿ÑÐµÑÑÐ°Ð³Ðµ Ð·Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð° Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸ÑÑÐ¼Ð°."$/;"	v
g:menutrans_path_dialog	.\lang\menu_sv_se.latin1.vim	/^let g:menutrans_path_dialog = "Skriv in sökväg för filer.\\nSeparera katalognamn med komma"$/;"	v
g:menutrans_path_dialog	.\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_path_dialog = "Âêàæ³òü øëÿõ ïîøóêó ôàéë³â\\nÐîçä³ëÿéòå íàçâè äèðåêòîð³é êîìàìè."$/;"	v
g:menutrans_path_dialog	.\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_path_dialog = "÷ËÁÖ¦ÔØ ÛÌÑÈ ÐÏÛÕËÕ ÆÁÊÌ¦×\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ÄÉÒÅËÔÏÒ¦Ê ËÏÍÁÍÉ."$/;"	v
g:menutrans_path_dialog	.\lang\menu_vi_vn.vim	/^let g:menutrans_path_dialog = "HÃ£y chá» ra ÄÆ°á»ng dáº«n Äá» tÃ¬m kiáº¿m táº­p tin.\\nTÃªn cá»§a thÆ° má»¥c phÃ¢n cÃ¡ch nhau bá»i dáº¥u pháº©y."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduïu els noms dels fitxers d'etiquetes.\\nSepareu els noms amb una coma."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_tags_dialog = "Geben Sie die Namen der 'tag'-Dateien ein.\\nTrennen Sie die Namen durch Kommata."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_tags_dialog = "Tajpu la nomojn de dosieroj de etikedoj.\\nDisigu la nomojn per komoj."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduzca los nombres de los archivos de tags.\\nSepare los nombres con una coma."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_tags_dialog = "Anna tägitiedostojen nimet.\\nErota tidostot pilkuin."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_tags_dialog = "Entrez les noms des fichiers d'étiquettes.\\nSéparez les noms par des virgules."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Írd be a tag fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_tags_dialog	.\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_tags_dialog = "Ãrd be a tag fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_tags_dialog	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_tags_dialog = "Batti nome dei file di tag.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_tags_dialog = "¥¿¥°¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\nÌ¾Á°¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_tags_dialog = "ã¿ã°ãã¡ã¤ã«ã®ååãå¥åãã¦ãã ãã:\\nååã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_tags_dialog = "^Ot@CÌ¼OðüÍµÄ­¾³¢:\\n¼OÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_tags_dialog = "Typ namen van tag bestanden.\\nGebruik commas tussen de namen."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_tags_dialog = "Skriv navn på tagfiler.\\nSkill navnene med komma."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plikÃ³w tagÃ³w.\\nProszÄ rozdzielaÄ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_polish_poland.1250.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_pt_br.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_pt_pt.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_tags_dialog = "÷×ÅÄÉÔÅ ÉÍÅÎÁ ÆÁÊÌÏ× ÍÅÔÏË (ÞÅÒÅÚ ÚÁÐÑÔÕÀ).\\n"$/;"	v
g:menutrans_tags_dialog	.\lang\menu_ru_ru.vim	/^let g:menutrans_tags_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° ÑÐ°Ð¹Ð»Ð¾Ð² Ð¼ÐµÑÐ¾Ðº (ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ).\\n"$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaÄkami ('tag').\\nImana loÄite z vejicami."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_tags_dialog = "ÃÝÕáØâÕ ØÜÕÝÐ ÔÐâÞâÕÚÐ áÐ Þ×ÝÐÚÐÜÐ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_tags_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐ° ÑÐ° Ð¾Ð·Ð½Ð°ÐºÐ°Ð¼Ð°\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð°."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_sv_se.latin1.vim	/^let g:menutrans_tags_dialog = "Skriv in namn på taggfiler.\\nSeparera namn med komma."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_tags_dialog = "Âêàæ³òü íàçâè ôàéë³â ïîì³òîê\\nÐîçä³ëÿéòå íàçâè êîìàìè."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_tags_dialog = "÷ËÁÖ¦ÔØ ÎÁÚ×É ÆÁÊÌ¦× ÐÏÍ¦ÔÏË\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ËÏÍÁÍÉ."$/;"	v
g:menutrans_tags_dialog	.\lang\menu_vi_vn.vim	/^let g:menutrans_tags_dialog = "Nháº­p tÃªn táº­p tin tháº» ghi (phÃ¢n cÃ¡ch bá»i dáº¥u pháº©y).\\n"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_ca_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduïu la nova amplada del text (0 per infinit): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_de_de.latin1.vim	/^let g:menutrans_textwidth_dialog = "Geben Sie eine neue Text-Breite ein (oder 0, um die Formatierung abzuschalten)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_eo.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Tajpu la novan larÄon de teksto\\n(0 por malÅalti formatigon)."$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_es_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduzca el nuevo ancho del texto (0 para desactivar el quiebre de línea): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_fi_fi.latin1.vim	/^let g:menutrans_textwidth_dialog = "Anna uusi tekstin leveys\\n(0 poistaa käytöstä)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_fr_fr.latin1.vim	/^let g:menutrans_textwidth_dialog = "Entrez la nouvelle largeur du texte\\n(0 pour désactiver le formattage)."$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Írd be a szöveg szélességét (0 = formázás kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_hu_hu.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ãrd be a szÃ¶veg szÃ©lessÃ©gÃ©t (0 = formÃ¡zÃ¡s kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_it_it.latin1.vim	/^let g:menutrans_textwidth_dialog = "Batti nuova lunghezza linea (0 per inibire la formattazione): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_ja_jp.euc-jp.vim	/^let g:menutrans_textwidth_dialog = "¥Æ¥­¥¹¥È¤ÎÉý('textwidth')¤òÀßÄê¤·¤Æ¤¯¤À¤µ¤¤ (0¤ÇÀ°·Á¤òÌµ¸ú²½):"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_ja_jp.utf-8.vim	/^let g:menutrans_textwidth_dialog = "ãã­ã¹ãã®å¹('textwidth')ãè¨­å®ãã¦ãã ãã (0ã§æ´å½¢ãç¡å¹å):"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_japanese_japan.932.vim	/^let g:menutrans_textwidth_dialog = "eLXgÌ('textwidth')ðÝèµÄ­¾³¢ (0Å®`ð³ø»):"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_nl_nl.latin1.vim	/^let g:menutrans_textwidth_dialog = "Typ de nieuwe tekst breedte (0 om formatteren uit the schakelen): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_no_no.latin1.vim	/^	let g:menutrans_textwidth_dialog = "Velg ny tekstbredde (0 for å forhindre formatering): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Wprowad¼ now± szeroko¶æ tekstu (0 wy³±cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_pl_pl.utf-8.vim	/^let g:menutrans_textwidth_dialog = "WprowadÅº nowÄ szerokoÅÄ tekstu (0 wyÅÄcza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_polish_poland.1250.vim	/^let g:menutrans_textwidth_dialog = "Wprowad now¹ szerokoæ tekstu (0 wy³¹cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_pt_br.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_pt_pt.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_ru_ru.koi8-r.vim	/^let g:menutrans_textwidth_dialog = "÷×ÅÄÉÔÅ ÛÉÒÉÎÕ ÔÅËÓÔÁ ÄÌÑ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ.\\näÌÑ ÏÔÍÅÎÙ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ ××ÅÄÉÔÅ 0."$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_ru_ru.vim	/^let g:menutrans_textwidth_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° Ð´Ð»Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ.\\nÐÐ»Ñ Ð¾ÑÐ¼ÐµÐ½Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð²Ð²ÐµÐ´Ð¸ÑÐµ 0."$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sl_si.cp1250.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sl_si.latin2.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo ¹irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sl_si.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo Å¡irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sr_rs.ascii.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu sirinu teksta (0 sprecava prelom)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu ¹irinu teksta (0 spreèava prelom)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_textwidth_dialog = "ÃÝÕáØâÕ ÝÞÒã èØàØÝã âÕÚáâÐ (0 áßàÕçÐÒÐ ßàÕÛÞÜ)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sr_rs.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð¾Ð²Ñ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° (0 ÑÐ¿ÑÐµÑÐ°Ð²Ð° Ð¿ÑÐµÐ»Ð¾Ð¼)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_sv_se.latin1.vim	/^let g:menutrans_textwidth_dialog = "Välj ny textbredd (0 för att förhindra formatering): "$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_uk_ua.cp1251.vim	/^let g:menutrans_textwidth_dialog = "Âêàæ³òü íîâó øèðèíó òåêñòó (0 äëÿ â³äì³íè ôîìàòóâàííÿ)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_uk_ua.koi8-u.vim	/^let g:menutrans_textwidth_dialog = "÷ËÁÖ¦ÔØ ÎÏ×Õ ÛÉÒÉÎÕ ÔÅËÓÔÕ (0 ÄÌÑ ×¦ÄÍ¦ÎÉ ÆÏÍÁÔÕ×ÁÎÎÑ)"$/;"	v
g:menutrans_textwidth_dialog	.\lang\menu_vi_vn.vim	/^let g:menutrans_textwidth_dialog = "HÃ£y nháº­p chiá»u rá»ng vÄn báº£n má»i.\\nNháº­p 0 Äá» há»§y bá»."$/;"	v
g:netrw_cursorline	.\autoload\netrw.vim	/^ let g:netrw_cursorline= 1$/;"	v
g:netrw_cygwin	.\autoload\netrw.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\autoload\netrw.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\autoload\netrw.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\autoload\tar.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\autoload\tar.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\autoload\tar.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\autoload\vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	.\autoload\vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	.\autoload\vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_dav_cmd	.\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "cadaver"$/;"	v
g:netrw_dav_cmd	.\autoload\netrw.vim	/^  let g:netrw_dav_cmd	= "curl"$/;"	v
g:netrw_dav_cmd	.\autoload\netrw.vim	/^  let g:netrw_dav_cmd   = ""$/;"	v
g:netrw_fetch_cmd	.\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= ""$/;"	v
g:netrw_fetch_cmd	.\autoload\netrw.vim	/^  let g:netrw_fetch_cmd	= "fetch -o"$/;"	v
g:netrw_ftp_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_cmd	= "ftp"$/;"	v
g:netrw_ftp_list_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "dir"$/;"	v
g:netrw_ftp_list_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_list_cmd     = "ls -lF"$/;"	v
g:netrw_ftp_sizelist_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "dir"$/;"	v
g:netrw_ftp_sizelist_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "ls -slF"$/;"	v
g:netrw_ftp_timelist_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "dir"$/;"	v
g:netrw_ftp_timelist_cmd	.\autoload\netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "ls -tlF"$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd	= ""$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "curl"$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "fetch"$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd	= "wget"$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd = "elinks"$/;"	v
g:netrw_http_cmd	.\autoload\netrw.vim	/^  let g:netrw_http_cmd = "links"$/;"	v
g:netrw_ignorenetrc	.\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_ignorenetrc	.\autoload\netrw.vim	/^  let g:netrw_ignorenetrc= 1$/;"	v
g:netrw_list_cmd	.\autoload\netrw.vim	/^  let g:netrw_list_cmd= ""$/;"	v
g:netrw_list_cmd	.\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME:"$/;"	v
g:netrw_list_cmd	.\autoload\netrw.vim	/^  let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa"$/;"	v
g:netrw_list_cmd	.\autoload\netrw.vim	/^ let g:netrw_list_cmd= g:netrw_list_cmd." -l"$/;"	v
g:netrw_liststyle	.\autoload\netrw.vim	/^ let g:netrw_liststyle= s:THINLIST$/;"	v
g:netrw_localcopycmd	.\autoload\netrw.vim	/^   let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	.\autoload\netrw.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\autoload\netrw.vim	/^  let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	.\autoload\netrw.vim	/^  let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\autoload\tar.vim	/^    let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	.\autoload\tar.vim	/^    let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	.\autoload\tar.vim	/^   let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	.\autoload\tar.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localmovecmd	.\autoload\netrw.vim	/^   let g:netrw_localmovecmd= "move"$/;"	v
g:netrw_localmovecmd	.\autoload\netrw.vim	/^   let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	.\autoload\netrw.vim	/^  let g:netrw_localmovecmd= ""$/;"	v
g:netrw_localmovecmd	.\autoload\netrw.vim	/^  let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_scp_cmd	.\autoload\netrw.vim	/^   let g:netrw_scp_cmd ="pscp -i C:\\\\private.ppk"$/;"	v
g:netrw_sort_sequence	.\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:netrw_sort_sequence	.\autoload\netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\<core\\%(\\.\\d\\+\\)\\=\\>,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:omni_sql_ignorecase	.\autoload\sqlcomplete.vim	/^    let g:omni_sql_ignorecase = &ignorecase$/;"	v
g:omni_sql_include_owner	.\autoload\sqlcomplete.vim	/^            let g:omni_sql_include_owner = 1$/;"	v
g:omni_sql_include_owner	.\autoload\sqlcomplete.vim	/^    let g:omni_sql_include_owner = 0$/;"	v
g:omni_sql_precache_syntax_groups	.\autoload\sqlcomplete.vim	/^    let g:omni_sql_precache_syntax_groups = [$/;"	v
g:omni_sql_use_tbl_alias	.\autoload\sqlcomplete.vim	/^    let g:omni_sql_use_tbl_alias = 'a'$/;"	v
g:omni_syntax_group_exclude_lifelines	.\syntax\lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_ignorecase	.\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_minimum_length	.\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_use_iskeyword	.\autoload\syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:rubycomplete_buffer_loading	.\autoload\rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	.\autoload\rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	.\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	.\autoload\rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	.\autoload\rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:sh_fold_enabled	.\syntax\sh.vim	/^ let g:sh_fold_enabled= 0$/;"	v
g:spell_clean_limit	.\spell\cleanadd.vim	/^  let g:spell_clean_limit = 1$/;"	v
g:spellfile_URL	.\autoload\spellfile.vim	/^    let g:spellfile_URL = 'ftp:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:spellfile_URL	.\autoload\spellfile.vim	/^    let g:spellfile_URL = 'http:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:tar_browseoptions	.\autoload\tar.vim	/^ let g:tar_browseoptions= "Ptf"$/;"	v
g:tar_cmd	.\autoload\tar.vim	/^ let g:tar_cmd= "tar"$/;"	v
g:tar_copycmd	.\autoload\tar.vim	/^ let g:tar_copycmd= g:netrw_localcopycmd$/;"	v
g:tar_extractcmd	.\autoload\tar.vim	/^ let g:tar_extractcmd= "tar -xf"$/;"	v
g:tar_readoptions	.\autoload\tar.vim	/^ let g:tar_readoptions= "OPxf"$/;"	v
g:tar_shq	.\autoload\tar.vim	/^   let g:tar_shq= "'"$/;"	v
g:tar_shq	.\autoload\tar.vim	/^   let g:tar_shq= '"'$/;"	v
g:tar_shq	.\autoload\tar.vim	/^  let g:tar_shq= "'"$/;"	v
g:tar_shq	.\autoload\tar.vim	/^  let g:tar_shq= &shq$/;"	v
g:tar_writeoptions	.\autoload\tar.vim	/^ let g:tar_writeoptions= "uf"$/;"	v
g:tex_fold_enabled	.\syntax\tex.vim	/^ let g:tex_fold_enabled= 0$/;"	v
g:tex_no_error	.\syntax\tex.vim	/^ let g:tex_no_error= 1$/;"	v
g:vhdl_indent_genportmap	.\indent\vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	.\indent\vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vimball_mkdir	.\autoload\vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	.\autoload\vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	.\autoload\vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimsyn_embed	.\syntax\vim.vim	/^ let g:vimsyn_embed= "lmpPr"$/;"	v
g:vimsyn_maxlines	.\syntax\vim.vim	/^ let g:vimsyn_maxlines= g:vim_maxlines$/;"	v
g:vimsyn_minlines	.\syntax\vim.vim	/^ let g:vimsyn_minlines= g:vim_minlines$/;"	v
g:vimsyn_noerror	.\syntax\vim.vim	/^ let g:vimsyn_noerror= g:vimsyntax_noerror$/;"	v
g:xmldata_html32	.\autoload\xml\html32.vim	/^let g:xmldata_html32 = {$/;"	v
g:xmldata_html401s	.\autoload\xml\html401s.vim	/^let g:xmldata_html401s = {$/;"	v
g:xmldata_html401t	.\autoload\xml\html401f.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html401t	.\autoload\xml\html401t.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html40s	.\autoload\xml\html40s.vim	/^let g:xmldata_html40s = {$/;"	v
g:xmldata_html40t	.\autoload\xml\html40f.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html40t	.\autoload\xml\html40t.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_xhtml10f	.\autoload\xml\xhtml10f.vim	/^let g:xmldata_xhtml10f = {$/;"	v
g:xmldata_xhtml10s	.\autoload\xml\xhtml10s.vim	/^let g:xmldata_xhtml10s = {$/;"	v
g:xmldata_xhtml10t	.\autoload\xml\xhtml10t.vim	/^let g:xmldata_xhtml10t = {$/;"	v
g:xmldata_xhtml11	.\autoload\xml\xhtml11.vim	/^let g:xmldata_xhtml11 = {$/;"	v
g:xmldata_xsd	.\autoload\xml\xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xmldata_xsl	.\autoload\xml\xsl.vim	/^let g:xmldata_xsl = {$/;"	v
g:zip_shq	.\autoload\zip.vim	/^  let g:zip_shq= "'"$/;"	v
g:zip_shq	.\autoload\zip.vim	/^  let g:zip_shq= &shq$/;"	v
g:zip_shq	.\autoload\zip.vim	/^  let g:zip_shq= '"'$/;"	v
g:zip_unzipcmd	.\autoload\zip.vim	/^ let g:zip_unzipcmd= "unzip"$/;"	v
g:zip_zipcmd	.\autoload\zip.vim	/^ let g:zip_zipcmd= "zip"$/;"	v
g<C-]>	.\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	.\ftplugin\ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<C-]>	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g<LeftMouse>	<C-RightMouse>	.\macros\swapmous.vim	/^noremap	 g<LeftMouse>	<C-RightMouse>$/;"	m
g<RightMouse>	<C-LeftMouse>	.\macros\swapmous.vim	/^noremap	 g<RightMouse>	<C-LeftMouse>$/;"	m
g]	.\ftplugin\ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
gdb_minlines	.\syntax\gdb.vim	/^  let gdb_minlines = 10$/;"	v
gdzie	.\tutor\tutor.pl	/^  gdzie:$/;"	l
gecos_name	.\ftplugin\changelog.vim	/^  function! s:gecos_name(login)$/;"	f
generate_suffix_groups	.\syntax\hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
getAuthor	.\ftplugin\debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
getField	.\ftplugin\debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
getscript#GetLatestVimScripts	.\autoload\getscript.vim	/^fun! getscript#GetLatestVimScripts()$/;"	f
gitdiffcached	.\ftplugin\gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
gnat#Find	.\autoload\gnat.vim	/^function gnat#Find () dict					     " {{{1$/;"	f
gnat#Get_Command	.\autoload\gnat.vim	/^function gnat#Get_Command (Command) dict			     " {{{1$/;"	f
gnat#Insert_Tags_Header	.\autoload\gnat.vim	/^function gnat#Insert_Tags_Header ()				  " {{{1$/;"	f
gnat#Make	.\autoload\gnat.vim	/^function gnat#Make () dict					     " {{{1$/;"	f
gnat#New	.\autoload\gnat.vim	/^function gnat#New ()						     " {{{1$/;"	f
gnat#Pretty	.\autoload\gnat.vim	/^function gnat#Pretty () dict					     " {{{1$/;"	f
gnat#Set_Project_File	.\autoload\gnat.vim	/^function gnat#Set_Project_File (...) dict			     " {{{1$/;"	f
gnat#Set_Session	.\autoload\gnat.vim	/^function gnat#Set_Session (...) dict				     " {{{1$/;"	f
gnat#Tags	.\autoload\gnat.vim	/^function gnat#Tags () dict					     " {{{1$/;"	f
got_x_error	.\tools\xcmdsrv_client.c	/^static int	got_x_error = FALSE;$/;"	v	file:
groovy_minlines	.\syntax\groovy.vim	/^  let groovy_minlines = 10$/;"	v
gx	.\plugin\netrwPlugin.vim	/^  nmap <unique> gx <Plug>NetrwBrowseX$/;"	m
gzip	.\plugin\gzip.vim	/^augroup gzip$/;"	a
gzip#appre	.\autoload\gzip.vim	/^fun gzip#appre(cmd)$/;"	f
gzip#read	.\autoload\gzip.vim	/^fun gzip#read(cmd)$/;"	f
gzip#write	.\autoload\gzip.vim	/^fun gzip#write(cmd)$/;"	f
h	.\macros\less.vim	/^noremap h :call <SID>Help()<CR>$/;"	m
highlight_types	.\syntax\spup.vim	/^    let highlight_types = 1$/;"	v
highlighttest	.\syntax\hitest.vim	/^aug highlighttest$/;"	a
hostname	.\ftplugin\changelog.vim	/^  function! s:hostname()$/;"	f
html_no_rendering	.\syntax\spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	.\autoload\htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	.\autoload\htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadData	.\autoload\htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
http	.\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/viedyt.htm$/;"	l
http	.\tutor\tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/vilek.htm$/;"	l
i	.\ftplugin\html.vim	/^        let i += 1$/;"	v
i	.\ftplugin\html.vim	/^    let i = 1$/;"	v
i	.\syntax\xpm.vim	/^   let i = i + 1$/;"	v
i	.\syntax\xpm.vim	/^let i      = 1$/;"	v
i	.\syntax\xpm2.vim	/^    let i = i + 1$/;"	v
i	.\syntax\xpm2.vim	/^  let i      = 1$/;"	v
icon_minlines	.\syntax\icon.vim	/^  let icon_minlines = 15$/;"	v
include_syntax	.\syntax\context.vim	/^function! s:include_syntax(name, group)$/;"	f
increase	.\ftplugin\cobol.vim	/^function! s:increase(...)$/;"	f
indent_to_innermost_parentheses	.\indent\dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
indent_value	.\indent\sh.vim	/^function! s:indent_value(option)$/;"	f
is_bash	.\syntax\initng.vim	/^let is_bash = 1$/;"	v
is_case	.\indent\sh.vim	/^function! s:is_case(line)$/;"	f
is_case_break	.\indent\sh.vim	/^function! s:is_case_break(line)$/;"	f
is_case_ended	.\indent\sh.vim	/^function! s:is_case_ended(line)$/;"	f
is_case_label	.\indent\sh.vim	/^function! s:is_case_label(line, pnum)$/;"	f
is_continuation_line	.\indent\sh.vim	/^function! s:is_continuation_line(line)$/;"	f
iskKeep	.\syntax\vim.vim	/^ let iskKeep= &isk$/;"	v
j	.\ftplugin\flexwiki.vim	/^  nmap <buffer> j      gj$/;"	m
j	.\ftplugin\flexwiki.vim	/^  vmap <buffer> j      gj$/;"	m
j	.\macros\less.vim	/^map j <CR>$/;"	m
java_highlight_all	.\syntax\java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	.\syntax\java.vim	/^  let java_minlines = 10$/;"	v
javascriptcomplete#CompleteJS	.\autoload\javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f
jproperties_lines	.\syntax\jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	.\syntax\jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	.\syntax\jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jump	.\ftplugin\cucumber.vim	/^function! s:jump(command,count)$/;"	f
k	.\ftplugin\flexwiki.vim	/^  nmap <buffer> k      gk$/;"	m
k	.\ftplugin\flexwiki.vim	/^  vmap <buffer> k      gk$/;"	m
k	.\macros\less.vim	/^noremap <script> k <C-Y><SID>L$/;"	m
lang	.\spell\check_locales.vim	/^  let lang = substitute(item.text, '.*LANG=\\(\\S\\+\\).*', '\\1', '')$/;"	v
lex	.\indent\dtd.vim	/^function s:lex(input, start, ...)$/;"	f
lex1	.\indent\dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
line	.\ftplugin\html.vim	/^        let line = getline(i)$/;"	v
line	.\ftplugin\html.vim	/^    let line = ""$/;"	v
lnum	.\spell\fixdup.vim	/^  let lnum += 1$/;"	v
lnum	.\spell\fixdup.vim	/^let lnum = 2$/;"	v
loaded_gzip	.\plugin\gzip.vim	/^let loaded_gzip = 1$/;"	v
loaded_less	.\macros\less.vim	/^let loaded_less = 1$/;"	v
loaded_matchit	.\macros\matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_rrhelper	.\plugin\rrhelper.vim	/^let loaded_rrhelper = 1$/;"	v
loaded_spellfile_plugin	.\plugin\spellfile.vim	/^let loaded_spellfile_plugin = 1$/;"	v
login	.\ftplugin\changelog.vim	/^  function! s:login()$/;"	f
lua_subversion	.\syntax\lua.vim	/^  let lua_subversion = 0$/;"	v
lua_subversion	.\syntax\lua.vim	/^  let lua_subversion = 1$/;"	v
lua_version	.\syntax\lua.vim	/^  let lua_version = 5$/;"	v
main	.\tools\blink.c	/^main()$/;"	f
main	.\tools\ccfilter.c	/^int main( int argc, char *argv[] )$/;"	f
main	.\tools\xcmdsrv_client.c	/^main(int argc, char **argv)$/;"	f
main_syntax	.\syntax\aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	.\syntax\aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	.\syntax\css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	.\syntax\eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	.\syntax\fvwm2m4.vim	/^  let main_syntax = 'fvwm2m4'$/;"	v
main_syntax	.\syntax\groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	.\syntax\gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	.\syntax\haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	.\syntax\html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\syntax\htmlcheetah.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\syntax\htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	.\syntax\htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	.\syntax\htmlos.vim	/^  let main_syntax = 'htmlos'$/;"	v
main_syntax	.\syntax\java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	.\syntax\javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	.\syntax\jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	.\syntax\liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	.\syntax\lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	.\syntax\m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	.\syntax\mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	.\syntax\msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	.\syntax\ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	.\syntax\pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	.\syntax\php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	.\syntax\plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	.\syntax\smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	.\syntax\smil.vim	/^  let main_syntax = 'smil'$/;"	v
main_syntax	.\syntax\spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	.\syntax\texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	.\syntax\tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	.\syntax\tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	.\syntax\uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	.\syntax\webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	.\syntax\wml.vim	/^  let main_syntax = 'wml'$/;"	v
matchparen	.\plugin\matchparen.vim	/^augroup matchparen$/;"	a
mel_minlines	.\syntax\mel.vim	/^  let mel_minlines=15$/;"	v
menutrans_help_dialog	.\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_help_dialog = "Írd be a kívánt szót vagy parancsot:\\n\\n A szövegbeviteli parancsok elé írj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszõ parancsok elé c_-t (pl.: c_<Del>)\\nA változókat a ' jellel vedd körül (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_hu_hu.utf-8.vim	/^let menutrans_help_dialog = "Ãrd be a kÃ­vÃ¡nt szÃ³t vagy parancsot:\\n\\n A szÃ¶vegbeviteli parancsok elÃ© Ã­rj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszÅ parancsok elÃ© c_-t (pl.: c_<Del>)\\nA vÃ¡ltozÃ³kat a ' jellel vedd kÃ¶rÃ¼l (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_nl_nl.latin1.vim	/^let menutrans_help_dialog = "Typ een commando of woord om help voor te vinden:\\n\\nVoeg i_ in voor Input mode commandos (bijv. i_CTRL-X)\\nVoeg c_ in voor een commando-regel edit commando (bijv. c_<Del>)\\nVoeg ' in \\voor een optie naam (bijv. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_help_dialog = "Wprowad¼ komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_pl_pl.utf-8.vim	/^let menutrans_help_dialog = "WprowadÅº komendÄ lub sÅowo, aby otrzymaÄ pomoc o:\\n\\nPrzedrostek i_ oznacza komendÄ trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendÄ edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwÄ opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_polish_poland.1250.vim	/^let menutrans_help_dialog = "Wprowad komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_sr_rs.ascii.vim	/^let menutrans_help_dialog = "Unesite naredbu ili rec cije pojasnjenje trazite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog rezima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_help_dialog = "Unesite naredbu ili reè èije poja¹njenje tra¾ite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog re¾ima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_help_dialog = "ÃÝÕáØâÕ ÝÐàÕÔÑã ØÛØ àÕç çØøÕ ßÞøÐèúÕúÕ âàÐÖØâÕ:\\n\\n´ÞÔÐøâÕ i_ ×Ð ÝÐàÕÔÑÕ ãÝÞáÐ (Ýßà. i_CTRL-X)\\n´ÞÔÐøâÕ c_ ×Ð ÝÐàÕÔÑÕ ÚÞÜÐÝÔÝÞÓ àÕÖØÜÐ (Ýßà. á_<Del>)\\n´ÞÔÐøâÕ ' ×Ð ØÜÕÝÐ ÞßæØøÐ (Ýßà. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_sr_rs.utf-8.vim	/^let menutrans_help_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð°ÑÐµÐ´Ð±Ñ Ð¸Ð»Ð¸ ÑÐµÑ ÑÐ¸ÑÐµ Ð¿Ð¾ÑÐ°ÑÑÐµÑÐµ ÑÑÐ°Ð¶Ð¸ÑÐµ:\\n\\nÐÐ¾Ð´Ð°ÑÑÐµ i_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÑÐ½Ð¾ÑÐ° (Ð½Ð¿Ñ. i_CTRL-X)\\nÐÐ¾Ð´Ð°ÑÑÐµ c_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð½Ð¾Ð³ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð¿Ñ. Ñ_<Del>)\\nÐÐ¾Ð´Ð°ÑÑÐµ ' Ð·Ð° Ð¸Ð¼ÐµÐ½Ð° Ð¾Ð¿ÑÐ¸ÑÐ° (Ð½Ð¿Ñ. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_sv_se.latin1.vim	/^let menutrans_help_dialog = "Skriv in ett kommando eller ord som du vill söka hjälp på:\\n\\nBörja med i_ för infogninglägeskommandon (t.ex. i_CTRL-X)\\nBörja med c_ för kommandoradredigeringskommandon (t.ex. c_<Del>)\\nBörja med ' för ett inställningsnamn (t.ex. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_uk_ua.cp1251.vim	/^let menutrans_help_dialog = "Âêàæ³òü êîìàíäó àáî ñëîâî äëÿ ïîøóêó:\\n\\nÄîäàéòå i_ äëÿ êîìàíä ðåæèìó âñòàâêè (íàïð. i_CTRL-X)\\nÄîäàéòå i_ äëÿ êîìàíäíîãî ðåæèìó (íàïð. ñ_<Del>)\\nÄîäàéòå ' äëÿ ïîçíà÷åííÿ íàçâè îïö³¿ (íàïð. 'shiftwidth')"$/;"	v
menutrans_help_dialog	.\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_help_dialog = "÷ËÁÖ¦ÔØ ËÏÍÁÎÄÕ ÁÂÏ ÓÌÏ×Ï ÄÌÑ ÐÏÛÕËÕ:\\n\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄ ÒÅÖÉÍÕ ×ÓÔÁ×ËÉ (ÎÁÐÒ. i_CTRL-X)\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄÎÏÇÏ ÒÅÖÉÍÕ (ÎÁÐÒ. Ó_<Del>)\\näÏÄÁÊÔÅ ' ÄÌÑ ÐÏÚÎÁÞÅÎÎÑ ÎÁÚ×É ÏÐÃ¦§ (ÎÁÐÒ. 'shiftwidth')"$/;"	v
menutrans_no_file	.\lang\menu_hu_hu.iso_8859-2.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	.\lang\menu_hu_hu.utf-8.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	.\lang\menu_nl_nl.latin1.vim	/^let menutrans_no_file = "[Geen Bestand]"$/;"	v
menutrans_no_file	.\lang\menu_pl_pl.iso_8859-2.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\lang\menu_pl_pl.utf-8.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\lang\menu_polish_poland.1250.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	.\lang\menu_ru_ru.koi8-r.vim	/^let menutrans_no_file = "[îÅÔ ÆÁÊÌÁ]"$/;"	v
menutrans_no_file	.\lang\menu_ru_ru.vim	/^let menutrans_no_file = "[ÐÐµÑ ÑÐ°Ð¹Ð»Ð°]"$/;"	v
menutrans_no_file	.\lang\menu_sr_rs.ascii.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	.\lang\menu_sr_rs.iso_8859-2.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	.\lang\menu_sr_rs.iso_8859-5.vim	/^let menutrans_no_file = "[½ÕÜÐ ÔÐâÞâÕÚÕ]"$/;"	v
menutrans_no_file	.\lang\menu_sr_rs.utf-8.vim	/^let menutrans_no_file = "[ÐÐµÐ¼Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ]"$/;"	v
menutrans_no_file	.\lang\menu_sv_se.latin1.vim	/^let menutrans_no_file = "[Ingen fil]"$/;"	v
menutrans_no_file	.\lang\menu_uk_ua.cp1251.vim	/^let menutrans_no_file = "[Íåìàº\\ Ôàéëà]"$/;"	v
menutrans_no_file	.\lang\menu_uk_ua.koi8-u.vim	/^let menutrans_no_file = "[îÅÍÁ¤\\ æÁÊÌÁ]"$/;"	v
menutrans_no_file	.\lang\menu_vi_vn.vim	/^let menutrans_no_file = "[khÃ´ng cÃ³ táº­p tin]"$/;"	v
mfplain_mp_macros	.\syntax\mp.vim	/^  let mfplain_mp_macros = 0 " Set this to '1' to include these macro names$/;"	v
mupad_cmdextversion	.\syntax\mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mv_DEtools	.\syntax\maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	.\syntax\maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	.\syntax\maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	.\syntax\maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	.\syntax\maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	.\syntax\maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	.\syntax\maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	.\syntax\maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	.\syntax\maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	.\syntax\maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	.\syntax\maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	.\syntax\maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	.\syntax\maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	.\syntax\maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	.\syntax\maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	.\syntax\maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	.\syntax\maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	.\syntax\maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	.\syntax\maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	.\syntax\maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	.\syntax\maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	.\syntax\maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	.\syntax\maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	.\syntax\maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	.\syntax\maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	.\syntax\maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	.\syntax\maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	.\syntax\maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	.\syntax\maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	.\syntax\maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	.\syntax\maple.vim	/^  let mv_totorder   = 1$/;"	v
n	.\syntax\xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	.\syntax\xpm.vim	/^	 let n = n + 1$/;"	v
n	.\syntax\xpm.vim	/^let n      = 0$/;"	v
n	.\syntax\xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	.\syntax\xpm2.vim	/^	let n = n + 1$/;"	v
n	.\syntax\xpm2.vim	/^  let n      = 0$/;"	v
name	.\ftplugin\changelog.vim	/^  function! s:name(login)$/;"	f
netrw#ErrorMsg	.\autoload\netrw.vim	/^fun! netrw#ErrorMsg(level,msg,errnum)$/;"	f
netrw#Explore	.\autoload\netrw.vim	/^fun! netrw#Explore(indx,dosplit,style,...)$/;"	f
netrw#LocalBrowseCheck	.\autoload\netrw.vim	/^fun! netrw#LocalBrowseCheck(dirname)$/;"	f
netrw#NetRead	.\autoload\netrw.vim	/^fun! netrw#NetRead(mode,...)$/;"	f
netrw#NetSource	.\autoload\netrw.vim	/^fun! netrw#NetSource(...)$/;"	f
netrw#NetWrite	.\autoload\netrw.vim	/^fun! netrw#NetWrite(...) range$/;"	f
netrw#NetrwBrowseX	.\autoload\netrw.vim	/^fun! netrw#NetrwBrowseX(fname,remote)$/;"	f
netrw#NetrwClean	.\autoload\netrw.vim	/^fun! netrw#NetrwClean(sys)$/;"	f
netrw#NetrwObtain	.\autoload\netrw.vim	/^fun! netrw#NetrwObtain(islocal,fname,...)$/;"	f
netrw#NetrwRestorePosn	.\autoload\netrw.vim	/^fun! netrw#NetrwRestorePosn(...)$/;"	f
netrw#NetrwSavePosn	.\autoload\netrw.vim	/^fun! netrw#NetrwSavePosn()$/;"	f
netrw#Nread	.\autoload\netrw.vim	/^fun! netrw#Nread(mode,fname)$/;"	f
netrw#RFC2396	.\autoload\netrw.vim	/^fun! netrw#RFC2396(fname)$/;"	f
netrw#WinPath	.\autoload\netrw.vim	/^fun! netrw#WinPath(path)$/;"	f
netrwFileHandlers#Invoke	.\autoload\netrwFileHandlers.vim	/^fun! netrwFileHandlers#Invoke(exten,fname)$/;"	f
netrwSettings#NetrwSettings	.\autoload\netrwSettings.vim	/^fun! netrwSettings#NetrwSettings()$/;"	f
new_changelog_entry	.\ftplugin\changelog.vim	/^  function! s:new_changelog_entry()$/;"	f
no_executable	.\vimtutor.bat	/^:no_executable$/;"	l
not_supported	.\spell\check_locales.vim	/^let not_supported = []$/;"	v
notag	.\ftplugin\pdf.vim	/^function! s:notag()$/;"	f
nqc_minlines	.\syntax\nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	.\syntax\nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
ntaction	.\vimtutor.bat	/^:ntaction$/;"	l
oneline_comments	.\syntax\spup.vim	/^    let oneline_comments = 2$/;"	v
open_changelog	.\ftplugin\changelog.vim	/^  function! s:open_changelog()$/;"	f
optionalblock	.\indent\cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
optwin	.\optwin.vim	/^augroup optwin$/;"	a
other_mf_macros	.\syntax\mf.vim	/^  let other_mf_macros = 1 " Set this to '0' if your code gets too colourful$/;"	v
other_mf_macros	.\syntax\mp.vim	/^let other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
other_mp_macros	.\syntax\mp.vim	/^  let other_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
p	.\macros\less.vim	/^map p %$/;"	m
passwd_field	.\ftplugin\changelog.vim	/^  function! s:passwd_field(line, field)$/;"	f
paste#Paste	.\autoload\paste.vim	/^  func! paste#Paste()$/;"	f
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd = {'n': ":call paste#Paste()<CR>"}$/;"	v
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd = {'n': "\\"=@+.'xy'<CR>gPFx\\"_2x"}$/;"	v
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<BS><Esc>' . paste#paste_cmd['n'] . 'gi'$/;"	v
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd['i'] = 'x<Esc>' . paste#paste_cmd['n'] . '"_s'$/;"	v
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>' . paste#paste_cmd['n']$/;"	v
paste#paste_cmd	.\autoload\paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>gix<Esc>' . paste#paste_cmd['n'] . '"_x'$/;"	v
pattern	.\syntax\cucumber.vim	/^function! s:pattern(key)$/;"	f
perlpath	.\ftplugin\perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	.\ftplugin\perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	.\ftplugin\perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	.\ftplugin\perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
permute_suffixes	.\syntax\hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
pfmain_syntax_init	.\syntax\pfmain.vim	/^		let pfmain_syntax_init = 1$/;"	v
php_alt_assignByReference	.\syntax\php.vim	/^    let php_alt_assignByReference = 1$/;"	v
php_alt_comparisons	.\syntax\php.vim	/^    let php_alt_comparisons = 1$/;"	v
php_parent_error_close	.\syntax\php.vim	/^  let php_parent_error_close=1$/;"	v
php_parent_error_open	.\syntax\php.vim	/^  let php_parent_error_open=1$/;"	v
php_special_functions	.\syntax\php.vim	/^    let php_special_functions = 1$/;"	v
php_sync_method	.\indent\php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	.\syntax\php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	.\syntax\php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#CompletePHP	.\autoload\phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base)$/;"	f
phpcomplete#GetClassContents	.\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassContents(file, name) " {{{$/;"	f
phpcomplete#GetClassLocation	.\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname) " {{{$/;"	f
phpcomplete#GetClassName	.\autoload\phpcomplete.vim	/^function! phpcomplete#GetClassName(scontext) " {{{$/;"	f
phpcomplete#LoadData	.\autoload\phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f
plain_mf_macros	.\syntax\mf.vim	/^  let plain_mf_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plain_mf_macros	.\syntax\mp.vim	/^let plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
plain_mp_macros	.\syntax\mp.vim	/^  let plain_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
polecenia	.\tutor\tutor.pl	/^  polecenia:$/;"	l
position_cursor	.\ftplugin\changelog.vim	/^  function! s:position_cursor()$/;"	f
postscr_level	.\syntax\postscr.vim	/^  let postscr_level = 2$/;"	v
ppwiz_highlight_defs	.\syntax\ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	.\syntax\ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
prevgood	.\indent\bst.vim	/^function! s:prevgood(lnum)$/;"	f
prevgood	.\indent\cobol.vim	/^function! s:prevgood(lnum)$/;"	f
prevnonblanknoncomment	.\indent\css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	.\indent\ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	.\indent\tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
progressbar.calculate_ticks	.\syntax\2html.vim	/^  func! s:progressbar.calculate_ticks(pb_len)$/;"	f
progressbar.incr	.\syntax\2html.vim	/^  func! s:progressbar.incr( ... )$/;"	f
progressbar.paint	.\syntax\2html.vim	/^  func! s:progressbar.paint()$/;"	f
python3complete#Complete	.\autoload\python3complete.vim	/^function! python3complete#Complete(findstart, base)$/;"	f
python_space_error_highlight	.\syntax\python.vim	/^  let python_space_error_highlight = 1$/;"	v
pythoncomplete#Complete	.\autoload\pythoncomplete.vim	/^function! pythoncomplete#Complete(findstart, base)$/;"	f
q	.\macros\less.vim	/^noremap q :q<CR>$/;"	m
r	.\macros\less.vim	/^noremap <script> r <C-L><SID>L$/;"	m
registryProperty	.\tools\xcmdsrv_client.c	/^static Atom	registryProperty = None;$/;"	v	file:
remove_continuation	.\indent\make.vim	/^function s:remove_continuation(line)$/;"	f
repeat	.\ftplugin\cobol.vim	/^function! s:repeat(str,count)$/;"	f
ruby_minlines	.\syntax\ruby.vim	/^    let ruby_minlines = 50$/;"	v
rubycomplete#Complete	.\autoload\rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	.\autoload\rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
s	.\syntax\xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	.\syntax\xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	.\syntax\xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	.\syntax\xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	.\syntax\xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	.\syntax\xpm2.vim	/^    let s = getline(i)$/;"	v
s:AdaBlockStart	.\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|project\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:AdaBlockStart	.\indent\ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:ColonEnd	.\indent\occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	.\indent\occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	.\indent\occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:ColonStart	.\indent\occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommentLine	.\indent\occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:ERROR	.\autoload\netrw.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	.\autoload\vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	.\autoload\zip.vim	/^let s:ERROR          = 2$/;"	v
s:ES	.\indent\vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:FirstLevelIndent	.\indent\occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\|VALOF\\|CLAIM\\|FORKING\\)\\>\\|\\(--.*\\)\\@<!\\(\\<PROC\\>\\|??\\|\\<CASE\\>\\s*\\(--.*\\)\\=\\_$\\)'$/;"	v
s:FirstLevelNonColonEndIndent	.\indent\occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	.\autoload\ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:HtmlEndline	.\syntax\2html.vim	/^  let s:HtmlEndline = '<br' . s:tag_close$/;"	v
s:HtmlEndline	.\syntax\2html.vim	/^let s:HtmlEndline = ''$/;"	v
s:HtmlSpace	.\syntax\2html.vim	/^  let s:HtmlSpace = '\\' . s:LeadingSpace$/;"	v
s:HtmlSpace	.\syntax\2html.vim	/^let s:HtmlSpace = ' '$/;"	v
s:LeadingSpace	.\syntax\2html.vim	/^  let s:LeadingSpace = '&nbsp;'$/;"	v
s:LeadingSpace	.\syntax\2html.vim	/^let s:LeadingSpace = ' '$/;"	v
s:NC	.\indent\vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	.\indent\vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NOTE	.\autoload\netrw.vim	/^ let s:NOTE    = 0$/;"	v
s:NOTE	.\autoload\zip.vim	/^let s:NOTE           = 0$/;"	v
s:PHP_startindenttag	.\indent\php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:ReferenceName	.\syntax\rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\+\\%([_.-][[:alnum:]]\\+\\)*'$/;"	v
s:SQLBlockEnd	.\indent\sqlanywhere.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	.\indent\sqlanywhere.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SecondLevelIndent	.\indent\occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CASE\\>\\s*\\(--.*\\)\\=\\_$'$/;"	v
s:SecondLevelNonColonEndIndent	.\indent\occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:USAGE	.\autoload\vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:WARNING	.\autoload\netrw.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	.\autoload\vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	.\autoload\zip.vim	/^let s:WARNING        = 1$/;"	v
s:adverbs	.\syntax\perl6.vim	/^    let s:adverbs = [$/;"	v
s:after	.\syntax\perl6.vim	/^    let s:after  = "\\\\%(\\\\_s*:!\\\\?\\\\K\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)*\\\\%(([^)]*)\\\\|\\\\[[^\\\\]]*]\\\\|<[^>]*>\\\\|Â«[^Â»]*Â»\\\\|{[^}]*}\\\\)\\\\?\\\\)*\\\\_s*\\\\)\\\\@<="$/;"	v
s:after_keyword	.\syntax\perl6.vim	/^let s:after_keyword = "\\\\)\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)\\\\@!\\""$/;"	v
s:allfolds	.\syntax\2html.vim	/^let s:allfolds = []$/;"	v
s:ant_cpo_save	.\syntax\ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:assignment_rx	.\indent\make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:attr	.\syntax\2html.vim	/^  let s:attr = ""$/;"	v
s:attr	.\syntax\2html.vim	/^  let s:attr = s:CSS1(s:id)$/;"	v
s:attributes	.\indent\haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:autoinstall	.\autoload\getscript.vim	/^  let s:autoinstall= $HOME."\/".s:dotvim$/;"	v
s:autoinstall	.\autoload\getscript.vim	/^  let s:autoinstall= g:GetLatestVimScripts_autoinstalldir"$/;"	v
s:autoinstall	.\autoload\getscript.vim	/^let s:autoinstall= ""$/;"	v
s:autoresetoptions	.\indent\php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	.\indent\php.vim	/^let s:autoresetoptions = 0$/;"	v
s:beflet	.\indent\ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:beflet	.\indent\sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|;\\)\\s*$'$/;"	v
s:before	.\syntax\perl6.vim	/^    let s:before = "syn region p6StringQ matchgroup=p6Quote start=\\"\\\\%("$/;"	v
s:before_keyword	.\syntax\perl6.vim	/^let s:before_keyword = " display \\"\\\\%(\\\\k\\\\|\\\\K\\\\@<=[-']\\\\)\\\\@<!\\\\%("$/;"	v
s:bgc	.\syntax\2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	.\syntax\2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(hlID("Normal"), "bg#", s:whatterm))$/;"	v
s:block_regex	.\indent\ruby.vim	/^let s:block_regex =$/;"	v
s:blockstart	.\indent\php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:bmenu_wait	.\menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:both	.\syntax\perl6.vim	/^let s:both = [s:infix_a_pattern, s:infix_n_pattern]$/;"	v
s:browsefilter	.\ftplugin\ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\ftplugin\aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	.\ftplugin\config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	.\ftplugin\eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.\ftplugin\eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	.\ftplugin\haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.\ftplugin\haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	.\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	.\ftplugin\jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	.\ftplugin\php.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\php.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	.\ftplugin\sgml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\sgml.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\ftplugin\svg.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\svg.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	.\ftplugin\tcsh.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\tcsh.vim	/^let s:browsefilter = "csh Files (*.csh)\\t*.csh\\n" .$/;"	v
s:browsefilter	.\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	.\ftplugin\xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	.\ftplugin\xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.\ftplugin\xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:byte_pattern	.\syntax\cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:cache_list	.\autoload\syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_name	.\autoload\syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:class	.\ftplugin\php.vim	/^let s:class = '\\(abstract\\s\\+\\|final\\s\\+\\)*class'$/;"	v
s:code	.\ftplugin\ruby.vim	/^    let s:code = "print ($: + begin; require %q{rubygems}; Gem.all_load_paths.sort.uniq; rescue LoadError; []; end).join(%q{,})"$/;"	v
s:col	.\syntax\2html.vim	/^	let s:col = s:col + 1$/;"	v
s:col	.\syntax\2html.vim	/^    let s:col = 1$/;"	v
s:comment_rx	.\indent\make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:concealinfo	.\syntax\2html.vim	/^	let s:concealinfo = synconcealed(s:lnum, s:col)$/;"	v
s:concealinfo	.\syntax\2html.vim	/^    let s:concealinfo = [0, '']$/;"	v
s:conditionalEnd	.\ftplugin\matlab.vim	/^	let s:conditionalEnd = '\\(([^()]*\\)\\@!\\<end\\>\\([^()]*)\\)\\@!'$/;"	v
s:conditional_directive_rx	.\indent\make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:continuation_regex	.\indent\ruby.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.,:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:continuation_regex2	.\indent\ruby.vim	/^let s:continuation_regex2 =$/;"	v
s:continuation_rx	.\indent\make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	.\indent\make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:cpo_sav	.\autoload\tohtml.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	.\syntax\2html.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	.\compiler\ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\fortran_g77.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\gcc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\mcs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\onsgmls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\se.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\splint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\xmllint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\compiler\xmlwf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	.\ftplugin\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\changelog.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\dtrace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\haskell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\msmessages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\ftplugin\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\perl6.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\indent\sh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\optwin.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\plugin\matchparen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\scripts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\synmenu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\autohotkey.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\doxygen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\initex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\ldapconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\plaintex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\synload.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\xbl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.\syntax\zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	.\ftplugin\ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cposet	.\compiler\fortran_F.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\compiler\fortran_cv.vim	/^let s:cposet = &cpoptions$/;"	v
s:cposet	.\compiler\fortran_elf90.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\compiler\fortran_lf95.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\ftplugin\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\ftplugin\ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	.\indent\fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cs_cpo_save	.\syntax\cs.vim	/^let s:cs_cpo_save = &cpo$/;"	v
s:cterm_color	.\syntax\2html.vim	/^    let s:cterm_color = {0: "#000000", 1: "#c00000", 2: "#008000", 3: "#804000", 4: "#0000c0", 5: "#c000c0", 6: "#008080", 7: "#c0c0c0", 8: "#808080", 9: "#ff6060", 10: "#00ff00", 11: "#ffff00", 12: "#8080ff", 13: "#ff40ff", 14: "#00ffff", 15: "#ffffff"}$/;"	v
s:cterm_color	.\syntax\2html.vim	/^    let s:cterm_color = {0: "#808080", 1: "#ff6060", 2: "#00ff00", 3: "#ffff00", 4: "#8080ff", 5: "#ff40ff", 6: "#00ffff", 7: "#ffffff"}$/;"	v
s:cur_menu_char	.\makemenu.vim	/^let s:cur_menu_char = ""$/;"	v
s:cur_menu_item	.\makemenu.vim	/^let s:cur_menu_item = 0$/;"	v
s:cur_menu_name	.\makemenu.vim	/^let s:cur_menu_name = ""$/;"	v
s:cur_menu_nr	.\makemenu.vim	/^let s:cur_menu_nr = 0$/;"	v
s:current_syntax	.\syntax\2html.vim	/^  let s:current_syntax = 'none'$/;"	v
s:current_syntax	.\syntax\2html.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	.\syntax\2html.vim	/^  let s:current_syntax = w:current_syntax$/;"	v
s:defaultORcase	.\indent\php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:delims	.\syntax\perl6.vim	/^let s:delims = [$/;"	v
s:did_ft	.\syntax\syntax.vim	/^  let s:did_ft = 0$/;"	v
s:did_ft	.\syntax\syntax.vim	/^  let s:did_ft = 1$/;"	v
s:diff_id	.\syntax\2html.vim	/^	let s:diff_id = diff_hlID(s:lnum, s:col)$/;"	v
s:diff_id	.\syntax\2html.vim	/^    let s:diff_id = 0$/;"	v
s:diff_id_name	.\syntax\2html.vim	/^	  let s:diff_id_name = synIDattr(s:diff_id, "name", s:whatterm)$/;"	v
s:diff_id_name	.\syntax\2html.vim	/^    let s:diff_id_name = ""$/;"	v
s:diffattr	.\syntax\2html.vim	/^    let s:diffattr = diff_hlID(s:lnum, 1)$/;"	v
s:difffillchar	.\syntax\2html.vim	/^  let s:difffillchar = '-'$/;"	v
s:difffillchar	.\syntax\2html.vim	/^let s:difffillchar = &fillchars[matchend(&fillchars, 'diff:')]$/;"	v
s:dotvim	.\autoload\getscript.vim	/^  let s:dotvim= ".vim"$/;"	v
s:dotvim	.\autoload\getscript.vim	/^  let s:dotvim= "vimfiles"$/;"	v
s:dtd_cpo_save	.\syntax\dtd.vim	/^    let s:dtd_cpo_save = &cpo$/;"	v
s:encoding	.\keymap\croatian.vim	/^	let s:encoding = 'cp1250'$/;"	v
s:encoding	.\keymap\croatian.vim	/^	let s:encoding = 'iso-8859-2'$/;"	v
s:encoding	.\keymap\croatian.vim	/^let s:encoding = &enc$/;"	v
s:end	.\syntax\2html.vim	/^    let s:end = line("$")$/;"	v
s:end	.\syntax\2html.vim	/^  let s:end = html_end_line$/;"	v
s:end	.\syntax\2html.vim	/^  let s:end = line("$")$/;"	v
s:end	.\syntax\2html.vim	/^  let s:end = line('$')$/;"	v
s:end	.\syntax\2html.vim	/^let s:end=line('$')$/;"	v
s:end_conditional_directive_rx	.\indent\make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	.\indent\ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end\\>'$/;"	v
s:end_middle_regex	.\indent\ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue\\>\\|when\\|elsif\\)\\>'$/;"	v
s:end_skip_expr	.\indent\ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	.\indent\ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:endline	.\indent\php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:expandedtab	.\syntax\2html.vim	/^	  let s:expandedtab = substitute(s:expandedtab, '\\t', repeat(' ', s:i), '')$/;"	v
s:expandedtab	.\syntax\2html.vim	/^	let s:expandedtab = s:concealinfo[1]$/;"	v
s:expandedtab	.\syntax\2html.vim	/^	let s:expandedtab = strpart(s:line, s:startcol - 1, s:col - s:startcol)$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = "." . strpart(s:lang, 0, 2)$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = ".cs"$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = ".de"$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = ".nl"$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = ".pl"$/;"	v
s:ext	.\tutor\tutor.vim	/^      let s:ext = ".sk"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".cs.cp1250"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".el"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".el.cp737"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".el.utf-8"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".hr.cp1250"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".hu.cp1250"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".ja.euc"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".ja.sjis"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".ko.euc"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".pl.cp1250"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".sk.cp1250"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".tr.iso9"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".zh.big5"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = ".zh.euc"$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = '.hr'$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = '.hu'$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = '.ru'$/;"	v
s:ext	.\tutor\tutor.vim	/^    let s:ext = '.ru.cp1251'$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext .= '.utf-8'$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext = ""$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext = "." . $xx$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext = ".de"$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext = ".eo.utf-8"$/;"	v
s:ext	.\tutor\tutor.vim	/^  let s:ext = ".vi.utf-8"$/;"	v
s:ext	.\tutor\tutor.vim	/^let s:ext = ""$/;"	v
s:f	.\spell\cleanadd.vim	/^      let s:f = escape(s:fname, ' \\|<')$/;"	v
s:f	.\spell\cleanadd.vim	/^      let s:f = fnameescape(s:fname)$/;"	v
s:fgc	.\syntax\2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	.\syntax\2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(hlID("Normal"), "fg#", s:whatterm))$/;"	v
s:filler	.\syntax\2html.vim	/^  let s:filler = diff_filler(s:lnum)$/;"	v
s:firstfold	.\syntax\2html.vim	/^	  let s:firstfold = 0$/;"	v
s:firstfold	.\syntax\2html.vim	/^      let s:firstfold = 1$/;"	v
s:fname	.\syntax\colortest.vim	/^    let s:fname = escape(s:fname, ' \\|')$/;"	v
s:fname	.\syntax\colortest.vim	/^    let s:fname = fnameescape(s:fname)$/;"	v
s:fname	.\syntax\colortest.vim	/^  let s:fname = expand('<sfile>')$/;"	v
s:foldId	.\syntax\2html.vim	/^	let s:foldId = s:foldId + 1$/;"	v
s:foldId	.\syntax\2html.vim	/^let s:foldId = 0$/;"	v
s:foldcolumn	.\syntax\2html.vim	/^	let s:foldcolumn = s:level+1$/;"	v
s:foldcolumn	.\syntax\2html.vim	/^  let s:foldcolumn = &foldcolumn$/;"	v
s:folded_assignment_rx	.\indent\make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldfillchar	.\syntax\2html.vim	/^    let s:foldfillchar = '-'$/;"	v
s:foldfillchar	.\syntax\2html.vim	/^  let s:foldfillchar = &fillchars[matchend(&fillchars, 'fold:')]$/;"	v
s:foldstack	.\syntax\2html.vim	/^	let s:foldstack[0].id = s:foldId$/;"	v
s:foldstack	.\syntax\2html.vim	/^let s:foldstack = []$/;"	v
s:foldtext_save	.\syntax\2html.vim	/^  let s:foldtext_save = &foldtext$/;"	v
s:ft_rules_udev_rules_pattern	.\filetype.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	.\ftplugin\sql.vim	/^let s:ftplugin_sql_objects = $/;"	v
s:function	.\ftplugin\php.vim	/^let s:function = '\\(abstract\\s\\+\\|final\\s\\+\\|private\\s\\+\\|protected\\s\\+\\|public\\s\\+\\|static\\s\\+\\)*function'$/;"	v
s:hidden	.\syntax\hitest.vim	/^let s:hidden      = &hidden$/;"	v
s:htmlfont	.\syntax\2html.vim	/^  let s:htmlfont = "'". g:html_font . "', monospace"$/;"	v
s:htmlfont	.\syntax\2html.vim	/^  let s:htmlfont = "monospace"$/;"	v
s:i	.\ftplugin\ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	.\ftplugin\ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	.\ftplugin\ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	.\macros\less.vim	/^    let s:i = s:i + 1$/;"	v
s:i	.\macros\less.vim	/^  let s:i = 0$/;"	v
s:i	.\menu.vim	/^      let s:i = stridx(s:n, "\\n")$/;"	v
s:i	.\menu.vim	/^  let s:i = stridx(s:n, "\\n")$/;"	v
s:i	.\syntax\2html.vim	/^	      let s:i = &ts - (s:vcol % &ts)$/;"	v
s:i	.\syntax\2html.vim	/^	      let s:i = &ts$/;"	v
s:i	.\syntax\2html.vim	/^	    let s:i = &ts - ((s:idx + s:startcol - 1) % &ts)$/;"	v
s:i	.\syntax\help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:id	.\syntax\2html.vim	/^	let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	.\syntax\2html.vim	/^	let s:id = synIDtrans(s:id)$/;"	v
s:id	.\syntax\2html.vim	/^  let s:id = hlID('FoldColumn')$/;"	v
s:id	.\syntax\2html.vim	/^  let s:id = remove(s:idlist, 0)$/;"	v
s:id_name	.\syntax\2html.vim	/^	let s:id_name = 'Conceal'$/;"	v
s:id_name	.\syntax\2html.vim	/^	let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:id_name	.\syntax\2html.vim	/^  let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:idef	.\ftplugin\ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	.\ftplugin\ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	.\ftplugin\ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idlist	.\syntax\2html.vim	/^let s:idlist = []$/;"	v
s:idx	.\menu.vim	/^      let s:idx = s:idx + 10$/;"	v
s:idx	.\menu.vim	/^    let s:idx = 100$/;"	v
s:idx	.\menu.vim	/^  let s:idx = s:idx + 10$/;"	v
s:idx	.\menu.vim	/^let s:idx = 100$/;"	v
s:idx	.\optwin.vim	/^let s:idx = 1$/;"	v
s:idx	.\syntax\2html.vim	/^	  let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:idx	.\syntax\2html.vim	/^	let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:infix	.\syntax\perl6.vim	/^let s:infix = "!\\\\?\\\\%(" . s:infix . "\\\\)"$/;"	v
s:infix	.\syntax\perl6.vim	/^let s:infix = join(s:both, "\\\\|")$/;"	v
s:infix_a	.\syntax\perl6.vim	/^let s:infix_a = [$/;"	v
s:infix_a_long	.\syntax\perl6.vim	/^let s:infix_a_long = join(s:infix_a, " ")$/;"	v
s:infix_a_pattern	.\syntax\perl6.vim	/^let s:infix_a_pattern = join(s:infix_a_words, "\\\\|")$/;"	v
s:infix_a_words	.\syntax\perl6.vim	/^let s:infix_a_words = split(s:infix_a_long)$/;"	v
s:infix_assoc	.\syntax\perl6.vim	/^let s:infix_assoc = "!\\\\?\\\\%(" . s:infix_a_pattern . "\\\\)"$/;"	v
s:infix_n	.\syntax\perl6.vim	/^let s:infix_n = "but does <=> leg cmp \\\\.\\\\. \\\\.\\\\.\\\\^\\\\^ \\\\^\\\\.\\\\. \\\\^\\\\.\\\\.\\\\^"$/;"	v
s:infix_n_pattern	.\syntax\perl6.vim	/^let s:infix_n_pattern = join(s:infix_n_words, "\\\\|")$/;"	v
s:infix_n_words	.\syntax\perl6.vim	/^let s:infix_n_words = split(s:infix_n)$/;"	v
s:inheritance_dent	.\indent\eiffel.vim	/^let s:inheritance_dent = '\\s*\\(redefine\\|rename\\|export\\)\\>'$/;"	v
s:interface	.\ftplugin\php.vim	/^let s:interface = 'interface'$/;"	v
s:just_inserted_rule_rx	.\indent\make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:keepcpo	.\autoload\getscript.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	.\autoload\netrw.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\autoload\netrwFileHandlers.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\autoload\tar.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\autoload\vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\autoload\zip.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	.\plugin\getscriptPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	.\plugin\netrwPlugin.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	.\plugin\tarPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	.\plugin\vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keepcpo	.\plugin\zipPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keywords	.\syntax\perl6.vim	/^let s:keywords = {$/;"	v
s:lang	.\menu.vim	/^      let s:lang = ""$/;"	v
s:lang	.\menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	.\menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	.\menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	.\menu.vim	/^    let s:lang = v:lang$/;"	v
s:lang	.\tutor\tutor.vim	/^    let s:lang = $LANG$/;"	v
s:lang	.\tutor\tutor.vim	/^    let s:lang = $LC_ALL$/;"	v
s:lang	.\tutor\tutor.vim	/^    let s:lang = substitute(s:lang, '\\c@euro', '', '')$/;"	v
s:lang	.\tutor\tutor.vim	/^    let s:lang = v:lang$/;"	v
s:lang	.\tutor\tutor.vim	/^  let s:lang = ""$/;"	v
s:last_mps	.\macros\matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	.\macros\matchit.vim	/^let s:last_words = ":"$/;"	v
s:lazyredraw	.\syntax\hitest.vim	/^let s:lazyredraw  = &lazyredraw$/;"	v
s:len	.\syntax\2html.vim	/^	  let s:len = &columns$/;"	v
s:len	.\syntax\2html.vim	/^    let s:len = strlen(s:line)$/;"	v
s:length_pattern	.\syntax\cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\|\\d\\+\\)\\>'$/;"	v
s:letlim	.\indent\ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	.\indent\sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	.\indent\ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letpat	.\indent\sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:level	.\syntax\2html.vim	/^      let s:level = match(foldtextresult(s:lnum), '+-*\\zs[^-]') - 2$/;"	v
s:lim	.\indent\ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	.\indent\sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line	.\syntax\2html.vim	/^	  let s:line = s:line . repeat(' ', &columns - virtcol([s:lnum, s:len]) - s:margin)$/;"	v
s:line	.\syntax\2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line1	.\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\<env\\s\\+', '', '')$/;"	v
s:line1	.\scripts.vim	/^    let s:line1 = substitute(s:line1, '\\S\\+=\\S\\+', '', 'g')$/;"	v
s:line1	.\scripts.vim	/^let s:line1 = getline(1)$/;"	v
s:line2	.\scripts.vim	/^  let s:line2 = getline(2)$/;"	v
s:line3	.\scripts.vim	/^  let s:line3 = getline(3)$/;"	v
s:line4	.\scripts.vim	/^  let s:line4 = getline(4)$/;"	v
s:line5	.\scripts.vim	/^  let s:line5 = getline(5)$/;"	v
s:lines	.\ftplugin\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\ftplugin\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\syntax\2html.vim	/^    let s:lines[-1].="<\/span><\/span>"$/;"	v
s:lines	.\syntax\2html.vim	/^let s:lines = []$/;"	v
s:lines	.\syntax\eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	.\syntax\liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lmax	.\ftplugin\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\ftplugin\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	.\indent\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\indent\fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	.\syntax\fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	.\syntax\fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	.\ftplugin\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\ftplugin\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	.\indent\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\indent\fortran.vim	/^    let s:ln=1$/;"	v
s:ln	.\syntax\fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	.\syntax\fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	.\makemenu.vim	/^let s:lnum = line(".") - 1$/;"	v
s:lnum	.\makemenu.vim	/^let s:lnum = s:lnum + 1$/;"	v
s:lnum	.\optwin.vim	/^let s:lnum = line("$")$/;"	v
s:lnum	.\scripts.vim	/^	let s:lnum += 1$/;"	v
s:lnum	.\scripts.vim	/^      let s:lnum += 1$/;"	v
s:lnum	.\scripts.vim	/^      let s:lnum = 1$/;"	v
s:lnum	.\scripts.vim	/^    let s:lnum = 1$/;"	v
s:lnum	.\syntax\2html.vim	/^      let s:lnum = s:lnum + 1$/;"	v
s:lnum	.\syntax\2html.vim	/^    let s:lnum = 1$/;"	v
s:lnum	.\syntax\2html.vim	/^    let s:lnum = s:new_lnum$/;"	v
s:lnum	.\syntax\2html.vim	/^  let s:lnum = 1$/;"	v
s:lnum	.\syntax\2html.vim	/^  let s:lnum = html_start_line$/;"	v
s:lnum	.\syntax\2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:ls	.\syntax\2html.vim	/^let s:ls  = &ls$/;"	v
s:luapath	.\syntax\vim.vim	/^ let s:luapath= globpath(&rtp,"syntax\/lua.vim")$/;"	v
s:luapath	.\syntax\vim.vim	/^let s:luapath= expand("<sfile>:p:h")."\/lua.vim"$/;"	v
s:lz	.\macros\less.vim	/^let s:lz = &lz$/;"	v
s:m	.\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	.\ftplugin\ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:man_find_arg	.\ftplugin\man.vim	/^    let s:man_find_arg = "-l"$/;"	v
s:man_find_arg	.\ftplugin\man.vim	/^let s:man_find_arg = "-w"$/;"	v
s:man_sect_arg	.\ftplugin\man.vim	/^    let s:man_sect_arg = "-s"$/;"	v
s:man_sect_arg	.\ftplugin\man.vim	/^let s:man_sect_arg = ""$/;"	v
s:man_tag_depth	.\ftplugin\man.vim	/^let s:man_tag_depth = 0$/;"	v
s:margin	.\syntax\2html.vim	/^  let s:margin = 0$/;"	v
s:margin	.\syntax\2html.vim	/^  let s:margin = strlen(s:end) + 1$/;"	v
s:match_words	.\ftplugin\aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\config.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\ftplugin\eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\ftplugin\haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.\ftplugin\jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\php.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\php.vim	/^let s:match_words = ""$/;"	v
s:match_words	.\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	.\ftplugin\xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	.\ftplugin\xhtml.vim	/^let s:match_words = ""$/;"	v
s:maxoff	.\indent\python.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:mmssff_pattern	.\syntax\cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\>'$/;"	v
s:modeline	.\ftplugin\ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	.\ftplugin\ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:module	.\indent\ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	.\indent\sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:molokai_original	.\colors\molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	.\colors\molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:more	.\syntax\hitest.vim	/^let s:more	  = &more$/;"	v
s:my_syncolor	.\syntax\doxygen.vim	/^    let s:my_syncolor=1$/;"	v
s:my_syncolor	.\syntax\doxygen.vim	/^  let s:my_syncolor=0$/;"	v
s:my_synlink	.\syntax\doxygen.vim	/^    let s:my_synlink=1$/;"	v
s:my_synlink	.\syntax\doxygen.vim	/^  let s:my_synlink=0$/;"	v
s:mzschemepath	.\syntax\vim.vim	/^ let s:mzschemepath= globpath(&rtp,"syntax\/scheme.vim")$/;"	v
s:mzschemepath	.\syntax\vim.vim	/^let s:mzschemepath= expand("<sfile>:p:h")."\/scheme.vim"$/;"	v
s:n	.\menu.vim	/^	let s:n = ""$/;"	v
s:n	.\menu.vim	/^	let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	.\menu.vim	/^    let s:n = ""$/;"	v
s:n	.\menu.vim	/^    let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	.\menu.vim	/^  let s:n = globpath(&runtimepath, "keymap\/*.vim")$/;"	v
s:n	.\menu.vim	/^let s:n = globpath(&runtimepath, "colors\/*.vim")$/;"	v
s:n	.\menu.vim	/^let s:n = globpath(&runtimepath, "compiler\/*.vim")$/;"	v
s:n	.\syntax\2html.vim	/^	let s:n = 2$/;"	v
s:n	.\syntax\2html.vim	/^      let s:n = s:n - 1$/;"	v
s:n	.\syntax\2html.vim	/^    let s:n = s:filler$/;"	v
s:name	.\menu.vim	/^	let s:name = s:n$/;"	v
s:name	.\menu.vim	/^	let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	.\menu.vim	/^      let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:_]*\\)\\(_[0-9a-zA-Z-]*\\)\\=\\.vim', '\\1', '')$/;"	v
s:name	.\menu.vim	/^    let s:name = s:n$/;"	v
s:name	.\menu.vim	/^    let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	.\menu.vim	/^  let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:]*\\)\\.vim', '\\1', '')$/;"	v
s:name	.\scripts.vim	/^    let s:name = 'wish'$/;"	v
s:name	.\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	.\scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*\\<env\\>\\s\\+\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	.\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\([^\/\\\\ ]*\\>\\).*', '\\1', '')$/;"	v
s:name	.\scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\S*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:names	.\menu.vim	/^let s:names = sort(map(split(s:n, "\\n"), 'substitute(v:val, "\\\\c.*[\/\\\\\\\\:\\\\]]\\\\([^\/\\\\\\\\:]*\\\\)\\\\.vim", "\\\\1", "")'), 1)$/;"	v
s:netrw_has_nt_rcp	.\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 0$/;"	v
s:netrw_has_nt_rcp	.\autoload\netrw.vim	/^ let s:netrw_has_nt_rcp = 1$/;"	v
s:netrw_rcpmode	.\autoload\netrw.vim	/^ let s:netrw_rcpmode    = ''$/;"	v
s:netrw_rcpmode	.\autoload\netrw.vim	/^ let s:netrw_rcpmode    = '-b'$/;"	v
s:netrw_usercuc	.\autoload\netrw.vim	/^ let s:netrw_usercuc   = &cursorcolumn$/;"	v
s:netrw_usercul	.\autoload\netrw.vim	/^ let s:netrw_usercul   = &cursorline$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . "<a class='FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . "toggle-filler "$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level)$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . repeat(' ', s:foldcolumn - s:foldstack[0].level) . "<\/a>"$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1) . "<\/a>"$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1)$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . repeat('|', s:foldstack[0].level)$/;"	v
s:new	.\syntax\2html.vim	/^	    let s:new = s:new . s:HtmlFormat(repeat(' ', s:foldcolumn), "FoldColumn", "")$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "-"$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "<\/a>"$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-closed FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-open "$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>+<\/a>"$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . "FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	.\syntax\2html.vim	/^	  let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level) . "<\/a>"$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new .= "<span id='"$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new .= "fold".s:foldId."' class='".s:allfolds[0].type."'>"$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new .= (exists('g:html_diff_win_num') ? "win".g:html_diff_win_num : "")$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = repeat(s:LeadingSpace, s:margin) . s:new$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . " " . s:filler . " inserted lines "$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . "<span class='fulltext'>"$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, &columns - strlen(s:new) - s:margin)$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, 3)$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . s:HtmlFormat(s:expandedtab,  s:id_name, s:diff_id_name)$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new . substitute(s:HtmlFormat(s:numcol . foldtextresult(s:lnum), "Folded", ""), '<\/span>', s:HtmlEndline.'\\n\\0', '')$/;"	v
s:new	.\syntax\2html.vim	/^	let s:new = s:new."<\/span><\/span>"$/;"	v
s:new	.\syntax\2html.vim	/^      let s:new = repeat(s:difffillchar, 3)$/;"	v
s:new	.\syntax\2html.vim	/^      let s:new = s:HtmlFormat(s:new, "DiffDelete", "")$/;"	v
s:new	.\syntax\2html.vim	/^      let s:new = s:new . repeat(s:foldfillchar, &columns - strlen(s:new))$/;"	v
s:new	.\syntax\2html.vim	/^      let s:new = s:new . s:HtmlFormat(s:numcol, "lnr", "")$/;"	v
s:new	.\syntax\2html.vim	/^    let s:new = s:HtmlFormat(s:new, "Folded", "")$/;"	v
s:new	.\syntax\2html.vim	/^    let s:new = s:numcol . foldtextresult(s:lnum)$/;"	v
s:new	.\syntax\2html.vim	/^  let s:new = ""$/;"	v
s:new_lnum	.\syntax\2html.vim	/^    let s:new_lnum = foldclosedend(s:lnum)$/;"	v
s:newfold	.\syntax\2html.vim	/^	let s:newfold.type = "open-fold"$/;"	v
s:newfold	.\syntax\2html.vim	/^      let s:newfold = {'firstline': s:lnum, 'lastline': foldclosedend(s:lnum), 'level': s:level,'type': "closed-fold"}$/;"	v
s:newwin	.\syntax\2html.vim	/^let s:newwin = winnr()$/;"	v
s:newwin_stl	.\syntax\2html.vim	/^let s:newwin_stl = &l:stl$/;"	v
s:no_indent	.\indent\eiffel.vim	/^let s:no_indent = '^\\s*\\(class\\|feature\\|creation\\|inherit\\)\\>'$/;"	v
s:notPhpHereDoc	.\indent\php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|else\\)'$/;"	v
s:not_end	.\ftplugin\framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notelse	.\ftplugin\fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	.\ftplugin\ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\ftplugin\aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\ftplugin\fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\ftplugin\sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	.\ftplugin\vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notprocedure	.\ftplugin\fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	.\ftplugin\fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notslash	.\macros\matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:numcol	.\syntax\2html.vim	/^    let s:numcol = ""$/;"	v
s:numcol	.\syntax\2html.vim	/^    let s:numcol = repeat(' ', s:margin - 1 - strlen(s:lnum)) . s:lnum . ' '$/;"	v
s:obj	.\indent\ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:obj	.\indent\sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:ocaml_word_char	.\ftplugin\ocaml.vim	/^    let s:ocaml_word_char = '\\w|[À-ÿ]|'''$/;"	v
s:offset	.\syntax\2html.vim	/^	    let s:offset -= s:i - 1$/;"	v
s:offset	.\syntax\2html.vim	/^	let s:offset = 0$/;"	v
s:old_bind	.\syntax\2html.vim	/^let s:old_bind = &l:scrollbind$/;"	v
s:old_et	.\syntax\2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_fdm	.\syntax\2html.vim	/^let s:old_fdm = &foldmethod$/;"	v
s:old_fen	.\syntax\2html.vim	/^let s:old_fen = &foldenable$/;"	v
s:old_icon	.\optwin.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	.\syntax\2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_magic	.\syntax\2html.vim	/^let s:old_magic = &magic$/;"	v
s:old_more	.\syntax\2html.vim	/^let s:old_more = &more$/;"	v
s:old_paste	.\syntax\2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_report	.\syntax\2html.vim	/^let s:old_report = &report$/;"	v
s:old_ru	.\optwin.vim	/^let s:old_ru = &ru$/;"	v
s:old_sc	.\optwin.vim	/^let s:old_sc = &sc$/;"	v
s:old_search	.\syntax\2html.vim	/^let s:old_search = @\/$/;"	v
s:old_title	.\optwin.vim	/^let s:old_title = &title$/;"	v
s:old_title	.\syntax\2html.vim	/^let s:old_title = &title$/;"	v
s:old_winfixheight	.\syntax\2html.vim	/^let s:old_winfixheight = &l:winfixheight$/;"	v
s:old_winheight	.\syntax\2html.vim	/^let s:old_winheight = winheight(0)$/;"	v
s:oldcolumn	.\syntax\lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldcpo	.\syntax\tcsh.vim	/^let s:oldcpo = &cpo$/;"	v
s:oldline	.\syntax\lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:oneProbe	.\syntax\dtrace.vim	/^let s:oneProbe = '\\%(BEGIN\\|END\\|ERROR\\|\\S\\{-}:\\S\\{-}:\\S\\{-}:\\S\\{-}\\)\\_s*'$/;"	v
s:or_replace	.\ftplugin\sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orders	.\syntax\hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	.\ftplugin\cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:orgbufnr	.\syntax\2html.vim	/^let s:orgbufnr = winbufnr(0)$/;"	v
s:orgwin	.\syntax\2html.vim	/^let s:orgwin = bufwinnr(s:orgbufnr)$/;"	v
s:origwin_stl	.\syntax\2html.vim	/^let s:origwin_stl = &l:stl$/;"	v
s:outdent	.\indent\eiffel.vim	/^let s:outdent = '^\\s*\\(else\\|invariant\\|variant\\|do\\|require\\|until\\|loop\\|local\\)\\>'$/;"	v
s:perlpath	.\syntax\vim.vim	/^ let s:perlpath= globpath(&rtp,"syntax\/perl.vim")$/;"	v
s:perlpath	.\syntax\vim.vim	/^let s:perlpath= expand("<sfile>:p:h")."\/perl.vim"$/;"	v
s:pgb	.\syntax\2html.vim	/^	  let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\syntax\2html.vim	/^      let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\syntax\2html.vim	/^    let s:pgb = s:ProgressBar("Processing folds:", line('$')*2, s:orgwin)$/;"	v
s:pgb	.\syntax\2html.vim	/^    let s:pgb.needs_redraw = 0$/;"	v
s:pgb	.\syntax\2html.vim	/^  let s:pgb = s:ProgressBar("Processing classes:", len(s:idlist),s:newwin)$/;"	v
s:pgb	.\syntax\2html.vim	/^  let s:pgb = s:ProgressBar("Processing lines:", s:end - s:lnum + 1, s:orgwin)$/;"	v
s:prepended	.\autoload\syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prevc	.\syntax\2html.vim	/^		let s:prevc = matchstr(s:expandedtab, '.\\%' . (s:idx + 1) . 'c')$/;"	v
s:prevc	.\syntax\2html.vim	/^		let s:prevc = matchstr(s:line, '.\\%' . (s:startcol + s:idx + s:offset) . 'c')$/;"	v
s:progressbar	.\syntax\2html.vim	/^  let s:progressbar={}$/;"	v
s:property	.\indent\sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:pythonpath	.\syntax\vim.vim	/^ let s:pythonpath= globpath(&rtp,"syntax\/python.vim")$/;"	v
s:pythonpath	.\syntax\vim.vim	/^let s:pythonpath= expand("<sfile>:p:h")."\/python.vim"$/;"	v
s:q_adverbs	.\syntax\perl6.vim	/^    let s:q_adverbs = [$/;"	v
s:register_a	.\syntax\hitest.vim	/^let s:register_a  = @a$/;"	v
s:register_se	.\syntax\hitest.vim	/^let s:register_se = @\/$/;"	v
s:relative_indent	.\indent\eiffel.vim	/^let s:relative_indent = '^\\s*\\(deferred\\|class\\|feature\\|creation\\|inherit\\|loop\\|from\\|until\\|if\\|else\\|elseif\\|ensure\\|require\\|check\\|do\\|local\\|invariant\\|variant\\|rename\\|redefine\\|do\\|export\\)\\>'$/;"	v
s:report	.\syntax\hitest.vim	/^let s:report      = &report$/;"	v
s:routines	.\syntax\perl6.vim	/^let s:routines = [$/;"	v
s:ruby_deindent_keywords	.\indent\ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	.\indent\ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	.\ftplugin\ruby.vim	/^      let s:ruby_path = system("ruby -e '" . s:code . "'")$/;"	v
s:ruby_path	.\ftplugin\ruby.vim	/^      let s:ruby_path = system('ruby -e "' . s:code . '"')$/;"	v
s:ruby_path	.\ftplugin\ruby.vim	/^    let s:ruby_path = ".,,"$/;"	v
s:ruby_path	.\ftplugin\ruby.vim	/^    let s:ruby_path = '.,' . substitute(s:ruby_path, '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	.\ftplugin\ruby.vim	/^    let s:ruby_path = g:ruby_path$/;"	v
s:rubycomplete_debug	.\autoload\rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	.\autoload\rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubypath	.\syntax\vim.vim	/^ let s:rubypath= globpath(&rtp,"syntax\/ruby.vim")$/;"	v
s:rubypath	.\syntax\vim.vim	/^let s:rubypath= expand("<sfile>:p:h")."\/ruby.vim"$/;"	v
s:rule_rx	.\indent\make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:s	.\ftplugin\ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:save_cpo	.\ftplugin\ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\csh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\initex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\plaintex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\sgml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\svg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\tcsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\ftplugin\xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\macros\matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\mswin.vim	/^  let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.\syntax\named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_exc	.\autoload\sqlcomplete.vim	/^    let s:save_exc = g:omni_syntax_group_exclude_sql$/;"	v
s:save_exc	.\autoload\sqlcomplete.vim	/^let s:save_exc              = ""$/;"	v
s:save_inc	.\autoload\sqlcomplete.vim	/^    let s:save_inc = g:omni_syntax_group_include_sql$/;"	v
s:save_inc	.\autoload\sqlcomplete.vim	/^let s:save_inc              = ""$/;"	v
s:save_prev_table	.\autoload\sqlcomplete.vim	/^let s:save_prev_table       = ""$/;"	v
s:savecpo	.\compiler\perl.vim	/^let s:savecpo = &cpo$/;"	v
s:searchpairflags	.\indent\php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:section	.\ftplugin\php.vim	/^let s:section = '\\(.*\\%#\\)\\@!\\_^\\s*\\zs\\('.s:function.'\\|'.s:class.'\\|'.s:interface.'\\)'$/;"	v
s:settings	.\syntax\2html.vim	/^let s:settings = tohtml#GetUserSettings()$/;"	v
s:sgml_cpo_save	.\syntax\sgml.vim	/^let s:sgml_cpo_save = &cpo$/;"	v
s:sh_fold_functions	.\syntax\sh.vim	/^ let s:sh_fold_functions = 1$/;"	v
s:sh_fold_heredoc	.\syntax\sh.vim	/^ let s:sh_fold_heredoc   = 2$/;"	v
s:sh_fold_ifdofor	.\syntax\sh.vim	/^ let s:sh_fold_ifdofor   = 4$/;"	v
s:sh_indent_defaults	.\indent\sh.vim	/^let s:sh_indent_defaults = {$/;"	v
s:shortmess	.\syntax\hitest.vim	/^let s:shortmess   = &shortmess$/;"	v
s:single_dent	.\indent\eiffel.vim	/^let s:single_dent = '^[^-]\\+[[:alnum:]]\\+ is\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:skip	.\indent\cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip_expr	.\indent\ruby.vim	/^let s:skip_expr =$/;"	v
s:sol	.\ftplugin\sh.vim	/^    let s:sol = '\\%(;\\s*\\|^\\s*\\)\\@<='  " start of line$/;"	v
s:spacing_errors	.\syntax\changelog.vim	/^  let s:spacing_errors = 1$/;"	v
s:spacing_errors	.\syntax\changelog.vim	/^  let s:spacing_errors = b:changelog_spacing_errors$/;"	v
s:spacing_errors	.\syntax\changelog.vim	/^  let s:spacing_errors = g:changelog_spacing_errors$/;"	v
s:spc	.\spell\he.vim	/^let s:spc = &l:spc$/;"	v
s:spc	.\spell\yi.vim	/^let s:spc = &l:spc$/;"	v
s:spellfile_URL	.\autoload\spellfile.vim	/^let s:spellfile_URL = ''    " Start with nothing so that s:donedict is reset.$/;"	v
s:sql_file_procedure	.\autoload\sqlcomplete.vim	/^let s:sql_file_procedure    = ""$/;"	v
s:sql_file_table	.\autoload\sqlcomplete.vim	/^let s:sql_file_table        = ""$/;"	v
s:sql_file_view	.\autoload\sqlcomplete.vim	/^let s:sql_file_view         = ""$/;"	v
s:startcol	.\syntax\2html.vim	/^      let s:startcol = s:col " The start column for processing text$/;"	v
s:subtype	.\syntax\liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:syn_list	.\autoload\sqlcomplete.vim	/^let s:syn_list              = []$/;"	v
s:syn_remove_words	.\autoload\syntaxcomplete.vim	/^let s:syn_remove_words = 'match,matchgroup=,contains,'.$/;"	v
s:syn_value	.\autoload\sqlcomplete.vim	/^let s:syn_value             = []$/;"	v
s:syng_strcom	.\indent\ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(String\\|StringEscape\\|ASCIICode' .$/;"	v
s:syng_string	.\indent\ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	.\indent\ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:tag	.\indent\haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_close	.\syntax\2html.vim	/^  let s:tag_close = ' \/>'$/;"	v
s:tag_close	.\syntax\2html.vim	/^  let s:tag_close = '>'$/;"	v
s:taintopt	.\compiler\perl.vim	/^	let s:taintopt = ''$/;"	v
s:taintopt	.\compiler\perl.vim	/^	let s:taintopt = 'T'$/;"	v
s:tbl_alias	.\autoload\sqlcomplete.vim	/^let s:tbl_alias             = []$/;"	v
s:tbl_cols	.\autoload\sqlcomplete.vim	/^let s:tbl_cols              = []$/;"	v
s:tbl_name	.\autoload\sqlcomplete.vim	/^let s:tbl_name              = []$/;"	v
s:tclpath	.\syntax\vim.vim	/^  let s:tclpath= globpath(&rtp,"syntax\/tcl.vim")$/;"	v
s:tclpath	.\syntax\vim.vim	/^ let s:tclpath= expand("<sfile>:p:h")."\/tcl.vim"$/;"	v
s:temp	.\syntax\perl6.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	.\syntax\perl6.vim	/^let s:temp = split(s:words_space)$/;"	v
s:test	.\ftplugin\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	.\indent\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	.\syntax\fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:texMathList	.\syntax\tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_conceal	.\syntax\tex.vim	/^ let s:tex_conceal= 'admgs'$/;"	v
s:tex_conceal	.\syntax\tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:thiswin	.\optwin.vim	/^  let s:thiswin = winnr()$/;"	v
s:thiswin	.\optwin.vim	/^let s:thiswin = winnr()$/;"	v
s:token_pattern	.\indent\dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:trust_user_indent	.\indent\eiffel.vim	/^let s:trust_user_indent = '\\(+\\)\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:trytcl	.\syntax\vim.vim	/^ let s:trytcl= (&shell !~ '\\<\\%(bash\\>\\|4[nN][tT]\\|\\<zsh\\)\\>\\%(\\.exe\\)\\=$')$/;"	v
s:trytcl	.\syntax\vim.vim	/^ let s:trytcl= 1$/;"	v
s:tutorfile	.\tutor\tutor.vim	/^let s:tutorfile = "\/tutor\/tutor"$/;"	v
s:tutorxx	.\tutor\tutor.vim	/^let s:tutorxx = $VIMRUNTIME . s:tutorfile . s:ext$/;"	v
s:type	.\indent\ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	.\indent\sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:undo_ftplugin	.\ftplugin\ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\php.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\php.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\sgml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\sgml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\svg.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\svg.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\tcsh.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\tcsh.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	.\ftplugin\xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.\ftplugin\xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_spellang	.\menu.vim	/^  let s:undo_spellang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:val	.\indent\sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:values	.\autoload\csscomplete.vim	/^	let s:values = split("azimuth background background-attachment background-color background-image background-position background-repeat border bottom border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color  border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width caption-side clear clip color content counter-increment counter-reset cue cue-after cue-before cursor display direction elevation empty-cells float font font-family font-size font-style font-variant font-weight height left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-right margin-left margin-top margin-bottom max-height max-width min-height min-width orphans outline outline-color outline-style outline-width overflow padding padding-top padding-right padding-bottom padding-left page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness speak speak-header speak-numeral speak-punctuation speech-rate stress table-layout text-align text-decoration text-indent text-transform top unicode-bidi vertical-align visibility voice-family volume white-space width widows word-spacing z-index")$/;"	v
s:vcol	.\syntax\2html.vim	/^	      let s:vcol = virtcol([s:lnum, s:startcol + s:idx + s:offset - len(s:prevc)])$/;"	v
s:warnopt	.\compiler\perl.vim	/^	let s:warnopt = 'W'$/;"	v
s:warnopt	.\compiler\perl.vim	/^	let s:warnopt = 'w'$/;"	v
s:whatterm	.\syntax\2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	.\syntax\2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:when_no_matched_or_others	.\ftplugin\sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched\\>\\)\\|\\<others\\>\\)\\@!\\)'$/;"	v
s:words	.\syntax\perl6.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	.\syntax\perl6.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	.\syntax\perl6.vim	/^    let s:words_space = join(words, " ")$/;"	v
s:words_space	.\syntax\perl6.vim	/^let s:words_space = join(s:routines, " ")$/;"	v
s:wrapscan	.\syntax\hitest.vim	/^let s:wrapscan    = &wrapscan$/;"	v
s:wsh_cpo_save	.\syntax\wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	.\syntax\xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:zipfile_escape	.\autoload\zip.vim	/^let s:zipfile_escape = ' ?&;\\'$/;"	v
s:zsh_syntax_variables	.\syntax\zsh.vim	/^  let s:zsh_syntax_variables = 'all'$/;"	v
s:zsh_syntax_variables	.\syntax\zsh.vim	/^  let s:zsh_syntax_variables = g:zsh_syntax_variables$/;"	v
searchsyn	.\ftplugin\ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
sed_delimiter	.\syntax\sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	.\syntax\sed.vim	/^	let __sed_i = __sed_i + 1$/;"	v
sed_i	.\syntax\sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	.\syntax\sed.vim	/^    let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_i	.\syntax\sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	.\syntax\sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	.\syntax\sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	.\syntax\sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
sendToVim	.\tools\xcmdsrv_client.c	/^sendToVim(dpy, name, cmd, asKeys, code)$/;"	f
set_compression	.\autoload\gzip.vim	/^fun s:set_compression(line)$/;"	f
sh_maxlines	.\syntax\sh.vim	/^  let sh_maxlines = 2 * sh_minlines$/;"	v
sh_minlines	.\syntax\sh.vim	/^  let sh_minlines = 200$/;"	v
spellfile#GetDirChoices	.\autoload\spellfile.vim	/^function! spellfile#GetDirChoices()$/;"	f
spellfile#LoadFile	.\autoload\spellfile.vim	/^function! spellfile#LoadFile(lang)$/;"	f
spellfile#Nread	.\autoload\spellfile.vim	/^function! spellfile#Nread(fname)$/;"	f
spellfile#WritableSpellDir	.\autoload\spellfile.vim	/^function! spellfile#WritableSpellDir()$/;"	f
sqlcomplete#Complete	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#Complete(findstart, base)$/;"	f
sqlcomplete#DrillIntoTable	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillIntoTable()$/;"	f
sqlcomplete#DrillOutOfColumns	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#DrillOutOfColumns()$/;"	f
sqlcomplete#Map	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#Map(type)$/;"	f
sqlcomplete#PreCacheSyntax	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#PreCacheSyntax(...)$/;"	f
sqlcomplete#ResetCacheSyntax	.\autoload\sqlcomplete.vim	/^function! sqlcomplete#ResetCacheSyntax(...)$/;"	f
stepmatch	.\ftplugin\cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	.\ftplugin\cucumber.vim	/^function! s:steps(lnum)$/;"	f
strip	.\indent\bst.vim	/^function! s:strip(lnum)$/;"	f
stripped	.\indent\cobol.vim	/^function! s:stripped(lnum)$/;"	f
substitute_items	.\ftplugin\changelog.vim	/^  function! s:substitute_items(str, date, user)$/;"	f
support_jisx0213	.\lang\menu_ja_jp.euc-jp.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	.\lang\menu_ja_jp.utf-8.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	.\lang\menu_japanese_japan.932.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
syn	.\indent\cucumber.vim	/^function! s:syn(lnum)$/;"	f
synname	.\ftplugin\ruby.vim	/^function! s:synname()$/;"	f
syntax_manual	.\syntax\manual.vim	/^let syntax_manual = 1$/;"	v
syntax_on	.\syntax\synload.vim	/^let syntax_on = 1$/;"	v
syntaxcomplete#Complete	.\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f
syntaxcomplete#OmniSyntaxList	.\autoload\syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f
syntaxset	.\syntax\nosyntax.vim	/^augroup syntaxset$/;"	a
syntaxset	.\syntax\syntax.vim	/^augroup syntaxset$/;"	a
system_with_default	.\ftplugin\changelog.vim	/^  function! s:system_with_default(command, default)$/;"	f
tads_minlines	.\syntax\tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	.\syntax\tads.vim	/^  let tads_sync_dist = 100$/;"	v
tar	.\plugin\tarPlugin.vim	/^augroup tar$/;"	a
tar#Browse	.\autoload\tar.vim	/^fun! tar#Browse(tarfile)$/;"	f
tar#Read	.\autoload\tar.vim	/^fun! tar#Read(fname,mode)$/;"	f
tar#Vimuntar	.\autoload\tar.vim	/^fun! tar#Vimuntar(...)$/;"	f
tar#Write	.\autoload\tar.vim	/^fun! tar#Write(fname)$/;"	f
tempname	.\autoload\gzip.vim	/^fun s:tempname(name)$/;"	f
toend	.\ftplugin\cobol.vim	/^function! s:toend(direction)$/;"	f
tohtml#Convert2HTML	.\autoload\tohtml.vim	/^func! tohtml#Convert2HTML(line1, line2)$/;"	f
tohtml#Diff2HTML	.\autoload\tohtml.vim	/^func! tohtml#Diff2HTML(win_list, buf_list)$/;"	f
tohtml#GetOption	.\autoload\tohtml.vim	/^func! tohtml#GetOption(settings, option, default)$/;"	f
tohtml#GetUserSettings	.\autoload\tohtml.vim	/^func! tohtml#GetUserSettings()$/;"	f
topindent	.\ftplugin\ocaml.vim	/^function s:topindent(lnum)$/;"	f
trimmed_system_with_default	.\ftplugin\changelog.vim	/^  function! s:trimmed_system_with_default(command, default)$/;"	f
try_reading_file	.\ftplugin\changelog.vim	/^  function! s:try_reading_file(path)$/;"	f
u	.\macros\less.vim	/^noremap <script> u <C-U><SID>L$/;"	m
uc_minlines	.\syntax\uc.vim	/^  let uc_minlines = 10$/;"	v
unload	.\optwin.vim	/^fun! <SID>unload()$/;"	f
usage	.\tools\efm_perl.pl	/^sub usage {$/;"	s
usage	.\tools\shtags.pl	/^sub usage$/;"	s
use_gui	.\vimtutor.bat	/^:use_gui$/;"	l
use_vim	.\vimtutor.bat	/^:use_vim$/;"	l
username	.\ftplugin\changelog.vim	/^  function! s:username()$/;"	f
v	.\macros\less.vim	/^map v :silent call <SID>End()<CR>$/;"	m
vera_comment_strings	.\syntax\vera.vim	/^let vera_comment_strings = 1$/;"	v
version	.\tools\shtags.pl	/^sub version$/;"	s
vimball#Decompress	.\autoload\vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f
vimball#MkVimball	.\autoload\vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	.\autoload\vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	.\autoload\vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	.\autoload\vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	.\autoload\vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	.\autoload\vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vimball#VimballHome	.\autoload\vimball.vim	/^fun! vimball#VimballHome()$/;"	f
vimrcEx	.\vimrc_example.vim	/^  augroup vimrcEx$/;"	a
w	.\macros\less.vim	/^map w b$/;"	m
w	.\tutor\tutor.cs	/^       objekt - udává rozsah pøíkazu, napøíklad  w  (slovo),$/;"	m
w	.\tutor\tutor.cs	/^  2. Objekty jsou také shodné, jako napø.: w (slovo), $ (konec øádku), atd.$/;"	m
word	.\spell\fixdup.vim	/^  let word = getline(lnum)$/;"	v
wpisanie	.\tutor\tutor.pl	/^     wpisanie:		:set ic$/;"	l
wpisz	.\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/g   by zmieniæ wszystkie wyst±pienia w ca³ym pliku.$/;"	l
wpisz	.\tutor\tutor.pl	/^     wpisz  :%s\/stare\/nowe\/gc  by zmieniæ wszystkie wyst±pienia w ca³ym$/;"	l
wpisz	.\tutor\tutor.pl	/^     wpisz:			:wq<ENTER>$/;"	l
wpisz	.\tutor\tutor.pl	/^     wpisz: :#,#s\/stare\/nowe\/g gdzie #,# s± numerami linii ograniczaj±cych$/;"	l
wpisz	.\tutor\tutor.pl	/^  wpisz :q<ENTER>        aby zamkn±æ okno pomocy.$/;"	l
x_error_check	.\tools\xcmdsrv_client.c	/^x_error_check(dpy, error_event)$/;"	f	file:
xmlcomplete#CompleteTags	.\autoload\xmlcomplete.vim	/^function! xmlcomplete#CompleteTags(findstart, base)$/;"	f
xmlcomplete#CreateConnection	.\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateConnection(canonical, ...) " {{{$/;"	f
xmlcomplete#CreateEntConnection	.\autoload\xmlcomplete.vim	/^function! xmlcomplete#CreateEntConnection(...) " {{{$/;"	f
xmlcomplete#GetLastOpenTag	.\autoload\xmlcomplete.vim	/^function! xmlcomplete#GetLastOpenTag(unaryTagsStack)$/;"	f
y	.\macros\less.vim	/^map y k$/;"	m
z	.\macros\less.vim	/^map z <Space>$/;"	m
zip	.\plugin\zipPlugin.vim	/^augroup zip$/;"	a
zip#Browse	.\autoload\zip.vim	/^fun! zip#Browse(zipfile)$/;"	f
zip#Read	.\autoload\zip.vim	/^fun! zip#Read(fname,mode)$/;"	f
zip#Write	.\autoload\zip.vim	/^fun! zip#Write(fname)$/;"	f
zt	.\syntax\2html.vim	/^  norm! zt$/;"	m
ã®	.\keymap\kana.vim	/^no ã®$/;"	m
